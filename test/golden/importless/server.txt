∀ α β γ δ ε ζ η θ ι κ λ μ.
( α.config = β,
  α.lib = γ,
  α.pkgs = δ,
  β.server = ε,
  δ.torque = ζ,
  γ.inetutils = ζ,
  γ.mkEnableOption = String -> η,
  γ.mkIf =
    θ ->
    { environment = {systemPackages = [ι];};
      systemd =
        { services =
            { torque-scheduler =
                { after = [String];
                  path = [ζ];
                  requires = [String];
                  serviceConfig =
                    {ExecStart = String; PIDFile = String; Type = String;};
                };
              torque-server =
                { after = [String];
                  before = [String];
                  path = [ζ];
                  requires = [String];
                  serviceConfig =
                    { ExecStart = String;
                      ExecStop = String;
                      PIDFile = String;
                      Type = String;
                    };
                  wantedBy = [String];
                  wants = [String];
                };
              torque-server-init =
                { path = [ζ];
                  script = String;
                  serviceConfig = {RemainAfterExit = Bool; Type = String;};
                  unitConfig = {ConditionPathExists = String;};
                };
              trqauthd =
                { after = [String];
                  path = [ζ];
                  requires = [String];
                  serviceConfig = {ExecStart = String; Type = String;};
                };
            };
        };
    } ->
    κ,
  γ.procps = ζ,
  γ.utillinux = ζ,
  ε.enable = θ,
  λ.torque = β,
  μ.services = λ
) =>
α ->
{config = κ; options = {services = {torque = {server = {enable = η;};};};};}