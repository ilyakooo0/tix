[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 37}},KeyNotPresent "lib"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 37}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 12})]
[]
âˆ€ Î³ Î´ Îµ Î¶ Î·. { aeson = Î³; base = Î³; binary = Î³; bytestring = Î³; containers = Î³; directory = Î³; fetchgit = { fetchSubmodules = Bool; rev = String; sha256 = String; url = String } -> Î´; filepath = Î³; ghc-prim = Î³; hpack = Îµ; mkDerivation = { executableHaskellDepends = [Î³]; homepage = String; isExecutable = Bool; isLibrary = Bool; libraryHaskellDepends = [Î³]; libraryToolDepends = [Îµ]; license = âˆ€ Î±. Î±; pname = String; prePatch = String; src = { fetchSubmodules = Bool; rev = String; sha256 = String; url = String }; testHaskellDepends = [Î³]; version = String } -> Î¶; optparse-applicative = Î³; stdenv = Î·; text = Î³; unliftio = Î³; unordered-containers = Î³ } -> { executableHaskellDepends = [Î³]; homepage = String; isExecutable = Bool; isLibrary = Bool; libraryHaskellDepends = [Î³]; libraryToolDepends = [Îµ]; license = âˆ€ Î². Î²; pname = String; prePatch = String; src = { fetchSubmodules = Bool; rev = String; sha256 = String; url = String }; testHaskellDepends = [Î³]; version = String }