∀ ε ζ η. { config = ε; lib = ζ; pkgs = η } -> { config = { environment = { etc = ∀ δ. δ; systemPackages = ∀ δ. [δ] }; networking = { firewall = { allowedUDPPorts = [Integer] } }; services = { dbus = { enable = Bool; packages = ∀ γ. [γ] } }; system = { nssDatabases = { hosts = [[String]] }; nssModules = ∀ δ. δ }; systemd = { services = { avahi-daemon = { description = String; environment = { LD_LIBRARY_PATH = ∀ α. α }; path = ∀ β. [β]; requires = [String]; serviceConfig = { BusName = String; ExecStart = String; NotifyAccess = String; Type = String }; wantedBy = [String] } }; sockets = { avahi-daemon = { description = String; listenStreams = [String]; wantedBy = [String] } }; tmpfiles = { rules = [String] } }; users = { groups = { avahi = {  } }; users = { avahi = { description = String; group = String; home = String; isSystemUser = Bool } } } }; options = { services = { avahi = { allowPointToPoint = { default = Bool; description = String; type = ∀ β. β }; browseDomains = { default = ∀ β. β; description = String; example = [String]; type = ∀ β. β }; cacheEntriesMax = { default = Null; description = String; type = ∀ β. β }; domainName = { default = String; description = String; type = ∀ β. β }; enable = { default = Bool; description = String; type = ∀ β. β }; extraConfig = { default = String; description = String; type = ∀ β. β }; extraServiceFiles = { default = {  }; description = String; example = String; type = ∀ β. β }; hostName = { default = ∀ β. β; defaultText = String; description = String; type = ∀ β. β }; interfaces = { default = Null; description = String; type = ∀ β. β }; ipv4 = { default = Bool; description = String; type = ∀ β. β }; ipv6 = { default = Bool; description = String; type = ∀ β. β }; nssmdns = { default = Bool; description = String; type = ∀ β. β }; openFirewall = { default = Bool; description = String; type = ∀ β. β }; publish = { addresses = { default = Bool; description = String; type = ∀ α. α }; domain = { default = Bool; description = String; type = ∀ α. α }; enable = { default = Bool; description = String; type = ∀ α. α }; hinfo = { default = Bool; description = String; type = ∀ α. α }; userServices = { default = Bool; description = String; type = ∀ α. α }; workstation = { default = Bool; description = String; type = ∀ α. α } }; reflector = { default = Bool; description = String; type = ∀ β. β }; wideArea = { default = Bool; description = String; type = ∀ β. β } } } } }