∀ θ ι κ. { config = θ; lib = ι; pkgs = κ } -> { config = ∀ η. { assertions = ∀ ζ. [ζ]; environment = { systemPackages = ∀ ε. [ε] }; system = ∀ ζ. { activationScripts = ζ }; systemd = { services = {  } }; users = η }; meta = { doc = Path; maintainers = ∀ ζ. [ζ] }; options = { services = { borgbackup = { jobs = { default = {  }; description = String; example = String; type = ∀ γ δ. { config = γ; name = δ } -> { options = { appendFailedSuffix = { default = Bool; description = String; type = ∀ β. β }; archiveBaseName = { default = String; defaultText = String; description = String; type = String }; compression = { default = String; description = String; example = String; type = String }; dateFormat = { default = String; description = String; example = String; type = ∀ β. β }; doInit = { default = Bool; description = String; type = ∀ β. β }; encryption = { mode = { description = String; example = String; type = [String] }; passCommand = { default = Null; description = String; example = String; type = ∀ α. α }; passphrase = { default = Null; description = String; type = ∀ α. α } }; environment = { default = {  }; description = String; example = { BORG_RSH = String }; type = ∀ β. β }; exclude = { default = ∀ β. β; description = String; example = [String]; type = ∀ β. β }; extraArgs = { default = String; description = String; example = String; type = ∀ β. β }; extraCreateArgs = { default = String; description = String; example = String; type = ∀ β. β }; extraInitArgs = { default = String; description = String; example = String; type = ∀ β. β }; extraPruneArgs = { default = String; description = String; example = String; type = ∀ β. β }; group = { default = String; description = String; type = ∀ β. β }; paths = { description = String; example = String; type = ∀ β. β }; postCreate = { default = String; description = String; type = ∀ β. β }; postHook = { default = String; description = String; type = ∀ β. β }; postInit = { default = String; description = String; type = ∀ β. β }; postPrune = { default = String; description = String; type = ∀ β. β }; preHook = { default = String; description = String; example = String; type = ∀ β. β }; privateTmp = { default = Bool; description = String; type = ∀ β. β }; prune = { keep = { default = {  }; description = String; example = String; type = String }; prefix = { default = ∀ α. α; defaultText = String; description = String; type = ∀ α. α } }; readWritePaths = { default = ∀ β. β; description = String; example = [String]; type = ∀ β. β }; removableDevice = { default = Bool; description = String; type = ∀ β. β }; repo = { description = String; example = String; type = ∀ β. β }; startAt = { default = String; description = String; type = ∀ β. β }; user = { default = String; description = String; type = ∀ β. β } } } }; repos = { default = {  }; description = String; type = {  } -> { options = { allowSubRepos = { default = Bool; description = String; type = ∀ β. β }; authorizedKeys = { default = ∀ β. β; description = String; type = ∀ β. β }; authorizedKeysAppendOnly = { default = ∀ β. β; description = String; type = ∀ β. β }; group = { default = String; description = String; type = ∀ β. β }; path = { default = String; description = String; type = ∀ β. β }; quota = { default = Null; description = String; example = String; type = String }; user = { default = String; description = String; type = ∀ β. β } } } } } } } }