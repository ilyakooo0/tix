∀ α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ.
( α.linux = β,
  α.toString = [String] -> γ,
  α.versionAtLeast = δ -> String -> Bool,
  α.viric = ε,
  ζ.lib = η,
  ζ.mkDerivation =
    { NIX_CFLAGS_COMPILE = γ;
      buildInputs = [θ];
      doCheck = Bool;
      doInstallCheck = Bool;
      hardeningDisable = [String];
      installFlags = [String];
      makeFlags = [String];
      meta =
        { description = String;
          homepage = String;
          maintainers = [ε];
          platforms = β;
        };
      name = String;
      nativeBuildInputs = [θ];
      postPatch = String;
      preConfigure = String;
      preFixup = String;
      separateDebugInfo = Bool;
      src = ι;
    } ->
    κ,
  λ.makeFlags = [String],
  λ.src = ι,
  λ.version = δ,
  μ.stapBuild = θ,
  η.optional = Bool -> Null -> [θ],
  ν.maintainers = ξ,
  ο.platforms = π
) =>
{ asciidoc = θ;
  audit = θ;
  binutils = ρ;
  bison = θ;
  docbook_xml_dtd_45 = θ;
  docbook_xsl = θ;
  elfutils = θ;
  flex = θ;
  gtk2 = Null;
  kernel = λ;
  lib = α;
  libbfd = θ;
  libiberty = θ;
  libopcodes = θ;
  libunwind = θ;
  libxslt = θ;
  makeWrapper = θ;
  newt = θ;
  numactl = θ;
  openssl = θ;
  perl = θ;
  pkgconfig = θ;
  python2 = θ;
  python3 = θ;
  slang = θ;
  stdenv = ζ;
  systemtap = μ;
  withGtk = Bool;
  xmlto = θ;
  zlib = θ;
} ->
κ