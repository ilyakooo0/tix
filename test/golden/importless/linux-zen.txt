[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 21}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 24, sourceColumn = Pos 31}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 6}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 24, sourceColumn = Pos 6}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 24, sourceColumn = Pos 31}},KeyNotPresent "argsOverride"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 21, sourceColumn = Pos 50}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 21, sourceColumn = Pos 55}},UndefinedVariable "atemu"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 21, sourceColumn = Pos 19}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 21, sourceColumn = Pos 57}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 4}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 21, sourceColumn = Pos 24}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 21, sourceColumn = Pos 46}},KeyNotPresent "lib"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 21, sourceColumn = Pos 24}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 21, sourceColumn = Pos 46}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0})]
[InfinityType (NAttrSet (fromList [("buildLinux",NTypeVariable 2),("extraMeta",NAttrSet (fromList [("branch",NAtomic String),("maintainers",List (NBrujin (DeBrujin 1 0)))])),("fetchFromGitHub",NTypeVariable 1),("isZen",NAtomic Bool),("modDirVersion",NAtomic String),("src",NAttrSet (fromList [("owner",NAtomic String),("repo",NAtomic String),("rev",NAtomic String),("sha256",NAtomic String)])),("stdenv",NTypeVariable 0),("version",NAtomic String)]) :-> NTypeVariable 7)]
âˆ€ Î² Î³ Î´. { buildLinux = Î²; fetchFromGitHub = { owner = String; repo = String; rev = String; sha256 = String } -> Î³; stdenv = Î´ } -> { buildLinux = Î²; extraMeta = { branch = String; maintainers = âˆ€ Î±. [Î±] }; fetchFromGitHub = { owner = String; repo = String; rev = String; sha256 = String } -> Î³; isZen = Bool; modDirVersion = String; src = { owner = String; repo = String; rev = String; sha256 = String }; stdenv = Î´; version = String }