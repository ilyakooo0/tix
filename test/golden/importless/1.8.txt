∀ ι κ λ μ ν ξ ο.
( ι.mkDerivation =
    { buildInputs = [κ];
      configureFlags =
        ∀ δ ε.
        ( ι.lib = δ,
          δ.optional = Bool -> String -> [String],
          ι.hostPlatform = ε,
          ι.buildPlatform = ε
        ) =>
        [String];
      depsBuildBuild =
        ∀ δ ε ζ η θ.
        ( λ.stdenv = δ,
          δ.cc = ε,
          ι.lib = ζ,
          ζ.optional = Bool -> η -> [ε],
          ι.hostPlatform = θ,
          ι.buildPlatform = θ,
          μ.guile_1_8 = η
        ) =>
        [ε];
      doCheck = Bool;
      doInstallCheck = Bool;
      meta =
        { description = String;
          homepage = String;
          license = ∀ α β γ. (ι.lib = α, α.licenses = β, β.lgpl2Plus = γ) => γ;
          longDescription = String;
          maintainers =
            ∀ α β γ. (ι.lib = α, α.maintainers = β, β.ludo = γ) => [γ];
          platforms = ∀ α β γ. (ι.lib = α, α.platforms = β, β.unix = γ) => γ;
        };
      name = String;
      nativeBuildInputs = [ν];
      outputs = [String];
      patches = [Path];
      postInstall = String;
      preBuild = String;
      propagatedBuildInputs = [κ];
      setOutputFlags = Bool;
      setupHook = Path;
      src = ξ;
    } ->
    ο
) =>
{ buildPackages = λ;
  fetchurl = {sha256 = String; url = String;} -> ξ;
  gawk = ν;
  gmp = κ;
  libtool = κ;
  makeWrapper = ν;
  pkgconfig = ν;
  pkgsBuildBuild = μ;
  readline = κ;
  stdenv = ι;
} ->
ο