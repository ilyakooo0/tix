∀ α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ σ τ υ φ χ.
( α.buildPlatform = β,
  α.hostPlatform = β,
  α.lib = γ,
  α.mkDerivation =
    { buildInputs = [δ];
      configureFlags = [String];
      depsBuildBuild = [ε];
      doCheck = Bool;
      doInstallCheck = Bool;
      meta =
        { description = String;
          homepage = String;
          license = ζ;
          longDescription = String;
          maintainers = [η];
          platforms = θ;
        };
      name = String;
      nativeBuildInputs = [ι];
      outputs = [String];
      patches = [Path];
      postInstall = String;
      preBuild = String;
      propagatedBuildInputs = [δ];
      setOutputFlags = Bool;
      setupHook = Path;
      src = κ;
    } ->
    λ,
  μ.guile_1_8 = ν,
  ξ.stdenv = ο,
  γ.licenses = π,
  π.lgpl2Plus = ζ,
  ρ.maintainers = σ,
  σ.ludo = η,
  τ.platforms = υ,
  υ.unix = θ,
  φ.optional = Bool -> ν -> [ε],
  χ.optional = Bool -> String -> [String],
  ο.cc = ε
) =>
{ buildPackages = ξ;
  fetchurl = {sha256 = String; url = String;} -> κ;
  gawk = ι;
  gmp = δ;
  libtool = δ;
  makeWrapper = ι;
  pkgconfig = ι;
  pkgsBuildBuild = μ;
  readline = δ;
  stdenv = α;
} ->
λ