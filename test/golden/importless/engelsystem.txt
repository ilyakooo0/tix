∀ δ ε ζ η. { config = δ; lib = ε; pkgs = ζ; utils = η } -> { config = { environment = { etc = { engelsystem/config.php = { source = String } } }; services = { mysql = { enable = Bool; ensureDatabases = [String]; ensureUsers = [{ ensurePermissions = { engelsystem.* = String }; name = String }]; package = ∀ γ. γ }; nginx = { enable = Bool }; phpfpm = { pools = { engelsystem = { settings = { catch_workers_output = Bool; listen.owner = ∀ α. α; php_admin_flag[log_errors] = Bool; php_admin_value[error_log] = String; pm = String; pm.max_children = Integer; pm.max_requests = Integer; pm.max_spare_servers = Integer; pm.min_spare_servers = Integer; pm.start_servers = Integer }; user = String } } } }; systemd = { services = { engelsystem-init = { script = String; serviceConfig = { Type = String }; wantedBy = [String] }; engelsystem-migrate = { after = [String]; script = String; serviceConfig = { Group = String; Type = String; User = String }; wantedBy = [String] }; phpfpm-engelsystem = { after = [String] } } }; users = { groups = { engelsystem = {  } }; users = { engelsystem = { createHome = Bool; group = String; home = String; isSystemUser = Bool } } } }; options = { services = { engelsystem = { config = { default = { database = { database = String; host = String; username = String } }; description = String; example = { autoarrive = Bool; database = { database = String; host = String; password = { _secret = String }; username = String }; default_locale = String; email = { driver = String; encryption = String; from = { address = String; name = String }; host = String; password = { _secret = String }; port = Integer; username = String }; maintenance = Bool; min_password_length = Integer }; type = ∀ β. β }; createDatabase = { default = Bool; description = String; type = ∀ β. β }; domain = { description = String; example = String; type = ∀ β. β }; enable = { default = Bool; description = String; example = Bool; type = ∀ β. β }; package = { default = ∀ β. β; description = String; example = String; type = ∀ β. β } } } } }