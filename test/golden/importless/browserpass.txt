[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 51}},KeyNotPresent "programs"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 51}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 16}},UndefinedVariable "mkIf"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 41}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 55}},UndefinedVariable "mkEnableOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 3, sourceColumn = Pos 1}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 1}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 1})]
[CanNotUnify (NBrujin (DeBrujin 1 0)) (NAtomic String),CanNotUnify (NBrujin (DeBrujin 1 0)) (NAtomic String),CanNotUnify (NBrujin (DeBrujin 1 0)) (NAtomic String),CanNotUnify (NBrujin (DeBrujin 1 0)) (NAtomic String),CanNotUnify (NBrujin (DeBrujin 1 0)) (NAtomic String),CanNotUnify (NBrujin (DeBrujin 1 0)) (NAtomic String),CanNotUnify (NBrujin (DeBrujin 1 0)) (NAtomic String),CanNotUnify (NBrujin (DeBrujin 1 0)) (NAtomic String)]
âˆ€ Î± Î² Î³. { config = Î±; lib = Î²; pkgs = Î³ } -> { config = { environment = { etc = { chromium/native-messaging-hosts/ = { source = String }; chromium/policies/managed/ = { source = String }; opt/brave/native-messaging-hosts/ = { source = String }; opt/brave/policies/managed/ = { source = String }; opt/chrome/native-messaging-hosts/ = { source = String }; opt/chrome/policies/managed/ = { source = String }; opt/vivaldi/native-messaging-hosts/ = { source = String }; opt/vivaldi/policies/managed/ = { source = String } } }; nixpkgs = { config = { firefox = { enableBrowserpass = Bool } } } }; options = { programs = { browserpass = { enable = String } } } }