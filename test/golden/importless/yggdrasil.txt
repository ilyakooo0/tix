∀ ζ η θ. { config = ζ; lib = η; pkgs = θ } -> { config = { assertions = [{ assertion = ∀ γ. γ; message = String }]; environment = { systemPackages = ∀ δ. [δ] }; networking = { dhcpcd = { denyInterfaces = ∀ γ. γ }; firewall = { allowedUDPPorts = [Integer] } }; system = { activationScripts = { yggdrasil = String } }; systemd = { services = { yggdrasil = { after = [String]; bindsTo = [String]; description = String; preStart = String; serviceConfig = { AmbientCapabilities = String; BindReadOnlyPaths = ∀ α. [α]; CapabilityBoundingSet = String; ExecReload = String; ExecStart = String; Group = ∀ α. α; MemoryDenyWriteExecute = Bool; NoNewPrivileges = Bool; PrivateTmp = Bool; ProtectControlGroups = Bool; ProtectHome = String; ProtectKernelModules = Bool; ProtectKernelTunables = Bool; ProtectSystem = String; RemoveIPC = Bool; Restart = String; RestrictAddressFamilies = String; RestrictNamespaces = Bool; RestrictRealtime = Bool; RestrictSUIDSGID = Bool; RuntimeDirectory = String; RuntimeDirectoryMode = String; SystemCallArchitectures = String; SystemCallFilter = String }; wantedBy = [String] } } } }; meta = { doc = Path; maintainers = ∀ ε. [ε] }; options = { services = { yggdrasil = { config = { default = {  }; description = String; example = { Listen = [String]; Peers = [String] }; type = ∀ β. β }; configFile = { default = Null; description = String; example = String; type = ∀ β. β }; denyDhcpcdInterfaces = { default = ∀ β. β; description = String; example = [String]; type = ∀ β. β }; enable = String; group = { default = String; description = String; example = String; type = ∀ β. β }; openMulticastPort = { default = Bool; description = String; type = ∀ β. β }; package = { default = ∀ β. β; defaultText = String; description = String; type = ∀ β. β }; persistentKeys = String } } } }