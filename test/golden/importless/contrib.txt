∀ β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ σ τ υ φ χ ψ ω α1 β1 γ1 δ1 ε1.
( β // {description = String; homepage = String;} ~ γ,
  δ.lib = ε,
  δ.mkDerivation =
    { doInstallCheck = Bool;
      dontBuild = Bool;
      dontConfigure = Bool;
      installCheckPhase = String;
      installPhase = String;
      meta =
        { description = String;
          homepage = String;
          license = ζ;
          maintainers = [η];
          platforms = θ;
        };
      nativeBuildInputs = [ι];
      outputs = [String];
      pname = String;
      src = κ;
      version = λ;
    } ->
    μ,
  ν.meta = ξ,
  ν.src = κ,
  ν.version = λ,
  ο.buildPythonApplication =
    { dontBuild = Bool;
      dontConfigure = Bool;
      format = String;
      installPhase = String;
      lname = String;
      meta = ∀ α. α;
      pname = String;
      propagatedBuildInputs = [π];
      src = ρ;
      version = σ;
    } ->
    τ,
  ο.i3ipc = π,
  ε.evils = η,
  ε.licenses = υ,
  ε.maintainers = φ,
  ε.platforms = χ,
  υ.mit = ζ,
  χ.all = θ,
  ξ.maintainers = η
) =>
{ coreutils = ψ;
  fetchurl = ω;
  grim = α1;
  installShellFiles = ι;
  jq = β1;
  libnotify = γ1;
  makeWrapper = ι;
  python3Packages = ο;
  slurp = δ1;
  stdenv = δ;
  sway-unwrapped = ν;
  wl-clipboard = ε1;
} ->
{grimshot = μ; inactive-windows-transparency = τ;}