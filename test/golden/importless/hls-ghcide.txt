∀ α β γ δ ε ζ η.
(α.lib = β, β.licenses = γ, γ.asl20 = δ) => { Chart = ε;
  Chart-diagrams = ε;
  QuickCheck = ε;
  aeson = ε;
  array = ε;
  async = ε;
  base = ε;
  base16-bytestring = ε;
  binary = ε;
  bytestring = ε;
  containers = ε;
  cryptohash-sha1 = ε;
  data-default = ε;
  deepseq = ε;
  diagrams = ε;
  diagrams-svg = ε;
  directory = ε;
  extra = ε;
  fetchgit =
    {fetchSubmodules = Bool; rev = String; sha256 = String; url = String;} -> ζ;
  filepath = ε;
  fuzzy = ε;
  ghc = ε;
  ghc-boot = ε;
  ghc-boot-th = ε;
  ghc-check = ε;
  ghc-paths = ε;
  ghc-typelits-knownnat = ε;
  gitrev = ε;
  haddock-library = ε;
  hashable = ε;
  haskell-lsp = ε;
  haskell-lsp-types = ε;
  hie-bios = ε;
  hslogger = ε;
  lens = ε;
  lsp-test = ε;
  mkDerivation =
    { benchmarkHaskellDepends = [ε];
      description = String;
      executableHaskellDepends = [ε];
      homepage = String;
      isExecutable = Bool;
      isLibrary = Bool;
      libraryHaskellDepends = [ε];
      license = δ;
      pname = String;
      src = ζ;
      testHaskellDepends = [ε];
      version = String;
    } ->
    η;
  mtl = ε;
  network-uri = ε;
  opentelemetry = ε;
  optparse-applicative = ε;
  prettyprinter = ε;
  prettyprinter-ansi-terminal = ε;
  process = ε;
  quickcheck-instances = ε;
  regex-tdfa = ε;
  rope-utf16-splay = ε;
  safe = ε;
  safe-exceptions = ε;
  shake = ε;
  sorted-list = ε;
  stdenv = α;
  stm = ε;
  syb = ε;
  tasty = ε;
  tasty-expected-failure = ε;
  tasty-hunit = ε;
  tasty-quickcheck = ε;
  tasty-rerun = ε;
  text = ε;
  time = ε;
  transformers = ε;
  unix = ε;
  unordered-containers = ε;
  utf8-string = ε;
  yaml = ε;
} ->
η