∀ δ ε ζ η.
{ Chart = δ;
  Chart-diagrams = δ;
  QuickCheck = δ;
  aeson = δ;
  array = δ;
  async = δ;
  base = δ;
  base16-bytestring = δ;
  binary = δ;
  bytestring = δ;
  containers = δ;
  cryptohash-sha1 = δ;
  data-default = δ;
  deepseq = δ;
  diagrams = δ;
  diagrams-svg = δ;
  directory = δ;
  extra = δ;
  fetchgit =
    {fetchSubmodules = Bool; rev = String; sha256 = String; url = String;} -> ε;
  filepath = δ;
  fuzzy = δ;
  ghc = δ;
  ghc-boot = δ;
  ghc-boot-th = δ;
  ghc-check = δ;
  ghc-paths = δ;
  ghc-typelits-knownnat = δ;
  gitrev = δ;
  haddock-library = δ;
  hashable = δ;
  haskell-lsp = δ;
  haskell-lsp-types = δ;
  hie-bios = δ;
  hslogger = δ;
  lens = δ;
  lsp-test = δ;
  mkDerivation =
    { benchmarkHaskellDepends = [δ];
      description = String;
      executableHaskellDepends = [δ];
      homepage = String;
      isExecutable = Bool;
      isLibrary = Bool;
      libraryHaskellDepends = [δ];
      license = ∀ α β γ. (ζ.lib = α, α.licenses = β, β.asl20 = γ) => γ;
      pname = String;
      src = ε;
      testHaskellDepends = [δ];
      version = String;
    } ->
    η;
  mtl = δ;
  network-uri = δ;
  opentelemetry = δ;
  optparse-applicative = δ;
  prettyprinter = δ;
  prettyprinter-ansi-terminal = δ;
  process = δ;
  quickcheck-instances = δ;
  regex-tdfa = δ;
  rope-utf16-splay = δ;
  safe = δ;
  safe-exceptions = δ;
  shake = δ;
  sorted-list = δ;
  stdenv = ζ;
  stm = δ;
  syb = δ;
  tasty = δ;
  tasty-expected-failure = δ;
  tasty-hunit = δ;
  tasty-quickcheck = δ;
  tasty-rerun = δ;
  text = δ;
  time = δ;
  transformers = δ;
  unix = δ;
  unordered-containers = δ;
  utf8-string = δ;
  yaml = δ;
} ->
η