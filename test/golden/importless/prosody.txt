∀ ζ η θ. { config = ζ; lib = η; pkgs = θ } -> { config = { assertions = [{ assertion = Bool; message = String }]; environment = { etc = { prosody/prosody.cfg.lua = { text = String } }; systemPackages = ∀ ε. [ε] }; systemd = { services = { prosody = { after = [String]; description = String; restartTriggers = ∀ δ. [δ]; serviceConfig = { ExecReload = String; ExecStart = String; Group = ∀ γ. γ; MemoryDenyWriteExecute = Bool; PIDFile = String; PrivateDevices = Bool; PrivateMounts = Bool; PrivateTmp = Bool; ProtectControlGroups = Bool; ProtectHome = Bool; ProtectHostname = Bool; ProtectKernelModules = Bool; ProtectKernelTunables = Bool; RestrictNamespaces = Bool; RestrictRealtime = Bool; RestrictSUIDSGID = Bool; RuntimeDirectory = [String]; Type = String; User = ∀ γ. γ }; wantedBy = [String]; wants = [String] } } }; users = { groups = { prosody = { gid = ∀ δ. δ } }; users = { prosody = { createHome = Bool; description = String; home = String; uid = ∀ δ. δ } } } }; meta = { doc = Path }; options = { services = { prosody = { admins = { default = ∀ δ. δ; description = String; example = [String]; type = ∀ δ. δ }; allowRegistration = { default = Bool; description = String; type = ∀ δ. δ }; authentication = { default = String; description = String; example = String; type = [String] }; c2sRequireEncryption = { default = Bool; description = String; type = ∀ δ. δ }; dataDir = { default = String; description = String; type = ∀ δ. δ }; disco_items = { default = ∀ δ. δ; description = String; type = { options = { description = { description = String; type = ∀ β. β }; url = { description = String; type = ∀ β. β } } } }; enable = { default = Bool; description = String; type = ∀ δ. δ }; extraConfig = { default = String; description = String; type = ∀ δ. δ }; extraModules = { default = ∀ δ. δ; description = String; type = ∀ δ. δ }; extraPluginPaths = { default = ∀ δ. δ; description = String; type = ∀ δ. δ }; group = { default = String; description = String; type = ∀ δ. δ }; httpInterfaces = { default = [String]; description = String; type = ∀ δ. δ }; httpPorts = { default = [Integer]; description = String; type = ∀ δ. δ }; httpsInterfaces = { default = [String]; description = String; type = ∀ δ. δ }; httpsPorts = { default = [Integer]; description = String; type = ∀ δ. δ }; modules = { admin_adhoc = { default = Bool; description = String; type = ∀ γ. γ }; admin_telnet = { default = Bool; description = String; type = ∀ γ. γ }; announce = { default = Bool; description = String; type = ∀ γ. γ }; blocklist = { default = Bool; description = String; type = ∀ γ. γ }; bookmarks = { default = Bool; description = String; type = ∀ γ. γ }; bosh = { default = Bool; description = String; type = ∀ γ. γ }; carbons = { default = Bool; description = String; type = ∀ γ. γ }; cloud_notify = { default = Bool; description = String; type = ∀ γ. γ }; csi = { default = Bool; description = String; type = ∀ γ. γ }; dialback = { default = Bool; description = String; type = ∀ γ. γ }; disco = { default = Bool; description = String; type = ∀ γ. γ }; groups = { default = Bool; description = String; type = ∀ γ. γ }; http_files = { default = Bool; description = String; type = ∀ γ. γ }; legacyauth = { default = Bool; description = String; type = ∀ γ. γ }; limits = { default = Bool; description = String; type = ∀ γ. γ }; mam = { default = Bool; description = String; type = ∀ γ. γ }; motd = { default = Bool; description = String; type = ∀ γ. γ }; pep = { default = Bool; description = String; type = ∀ γ. γ }; ping = { default = Bool; description = String; type = ∀ γ. γ }; private = { default = Bool; description = String; type = ∀ γ. γ }; proxy65 = { default = Bool; description = String; type = ∀ γ. γ }; register = { default = Bool; description = String; type = ∀ γ. γ }; roster = { default = Bool; description = String; type = ∀ γ. γ }; saslauth = { default = Bool; description = String; type = ∀ γ. γ }; server_contact_info = { default = Bool; description = String; type = ∀ γ. γ }; smacks = { default = Bool; description = String; type = ∀ γ. γ }; time = { default = Bool; description = String; type = ∀ γ. γ }; tls = { default = Bool; description = String; type = ∀ γ. γ }; uptime = { default = Bool; description = String; type = ∀ γ. γ }; vcard = { default = Bool; description = String; type = ∀ γ. γ }; vcard_legacy = { default = Bool; description = String; type = ∀ γ. γ }; version = { default = Bool; description = String; type = ∀ γ. γ }; watchregistrations = { default = Bool; description = String; type = ∀ γ. γ }; websocket = { default = Bool; description = String; type = ∀ γ. γ }; welcome = { default = Bool; description = String; type = ∀ γ. γ } }; muc = { default = ∀ δ. δ; description = String; example = [{ domain = String }]; type = {  } -> { options = { domain = { description = String; type = ∀ α. α }; extraConfig = { default = String; description = String; type = ∀ α. α }; maxHistoryMessages = { default = Integer; description = String; type = ∀ α. α }; name = { default = String; description = String; type = ∀ α. α }; restrictRoomCreation = { default = Bool; description = String; type = [Bool] }; roomDefaultChangeSubject = { default = Bool; description = String; type = ∀ α. α }; roomDefaultHistoryLength = { default = Integer; description = String; type = ∀ α. α }; roomDefaultLanguage = { default = String; description = String; type = ∀ α. α }; roomDefaultMembersOnly = { default = Bool; description = String; type = ∀ α. α }; roomDefaultModerated = { default = Bool; description = String; type = ∀ α. α }; roomDefaultPublic = { default = Bool; description = String; type = ∀ α. α }; roomDefaultPublicJids = { default = Bool; description = String; type = ∀ α. α }; roomLockTimeout = { default = Integer; description = String; type = ∀ α. α }; roomLocking = { default = Bool; description = String; type = ∀ α. α }; tombstoneExpiry = { default = Integer; description = String; type = ∀ α. α }; tombstones = { default = Bool; description = String; type = ∀ α. α }; vcard_muc = { default = Bool; description = String; type = ∀ α. α } } } }; package = { default = ∀ δ. δ; defaultText = String; description = String; example = String; type = ∀ δ. δ }; s2sInsecureDomains = { default = ∀ δ. δ; description = String; example = [String]; type = ∀ δ. δ }; s2sRequireEncryption = { default = Bool; description = String; type = ∀ δ. δ }; s2sSecureAuth = { default = Bool; description = String; type = ∀ δ. δ }; s2sSecureDomains = { default = ∀ δ. δ; description = String; example = [String]; type = ∀ δ. δ }; ssl = { default = Null; description = String; type = {  } -> { options = { cert = { description = String; type = ∀ α. α }; extraOptions = { default = {  }; description = String; type = ∀ α. α }; key = { description = String; type = ∀ α. α } } } }; uploadHttp = { default = Null; description = String; example = { domain = String }; type = {  } -> { options = { domain = { description = String; type = ∀ α. α }; httpUploadPath = { default = String; description = String; type = ∀ α. α }; uploadExpireAfter = { default = String; description = String; type = ∀ α. α }; uploadFileSizeLimit = { default = String; description = String; type = ∀ α. α }; userQuota = { default = Null; description = String; example = Integer; type = ∀ α. α } } } }; user = { default = String; description = String; type = ∀ δ. δ }; virtualHosts = { default = { localhost = { domain = String; enabled = Bool } }; description = String; example = { myhost = { domain = String; enabled = Bool } }; type = {  } -> { options = { domain = { description = String; type = ∀ α. α }; enabled = { default = Bool; description = String; type = ∀ α. α }; extraConfig = { default = String; description = String; type = ∀ α. α }; ssl = { default = Null; description = String; type = ∀ α. α } } } }; xmppComplianceSuite = { default = Bool; description = String; type = ∀ δ. δ } } } } }