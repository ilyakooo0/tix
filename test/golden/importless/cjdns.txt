∀ δ ε ζ. { config = δ; lib = ε; pkgs = ζ } -> { config = { assertions = [{ assertion = Bool; message = String }]; boot = { kernelModules = [String] }; networking = { hostFiles = [String] }; systemd = { services = { cjdns = { after = [String]; bindsTo = [String]; description = String; preStart = String; script = String; serviceConfig = { CapabilityBoundingSet = String; MemoryDenyWriteExecute = Bool; PrivateTmp = Bool; ProtectHome = Bool; ProtectSystem = Bool; Restart = String; RestartSec = Integer; StartLimitInterval = Integer; Type = String }; wantedBy = [String] } } } }; options = { services = { cjdns = { ETHInterface = { beacon = { default = Integer; description = String; type = ∀ β. β }; bind = { default = String; description = String; example = String; type = ∀ β. β }; connectTo = { default = {  }; description = String; example = String; type = {  } -> { options = { hostname = { default = String; description = String; example = String; type = ∀ α. α }; password = { description = String; type = ∀ α. α }; publicKey = { description = String; type = ∀ α. α } } } } }; UDPInterface = { bind = { default = String; description = String; example = String; type = ∀ β. β }; connectTo = { default = {  }; description = String; example = String; type = {  } -> { options = { hostname = { default = String; description = String; example = String; type = ∀ α. α }; password = { description = String; type = ∀ α. α }; publicKey = { description = String; type = ∀ α. α } } } } }; addExtraHosts = { default = Bool; description = String; type = ∀ γ. γ }; admin = { bind = { default = String; description = String; type = ∀ β. β } }; authorizedPasswords = { default = ∀ γ. γ; description = String; example = [String]; type = ∀ γ. γ }; confFile = { default = Null; description = String; example = String; type = ∀ γ. γ }; enable = { default = Bool; description = String; type = ∀ γ. γ }; extraConfig = { default = {  }; description = String; example = { router = { interface = { tunDevice = String } } }; type = ∀ γ. γ } } } } }