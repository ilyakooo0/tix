∀ η θ ι. { config = η; lib = θ; pkgs = ι } -> { config = { assertions = [{ assertion = Bool; message = String }]; boot = { kernel = { sysctl = { net.core.netdev_max_backlog = Integer; net.core.rmem_max = Integer } } }; environment = { etc = { jitsi/videobridge/logging.properties = { source = String } } }; networking = { firewall = { allowedTCPPorts = ∀ ε. [ε]; allowedUDPPorts = ∀ ε. [ε] } }; services = { jitsi-videobridge = { extraProperties = { org.ice4j.ice.harvest.NAT_HARVESTER_LOCAL_ADDRESS = ∀ δ. δ; org.ice4j.ice.harvest.NAT_HARVESTER_PUBLIC_ADDRESS = ∀ δ. δ } } }; systemd = { services = { jitsi-videobridge2 = { after = [String]; aliases = [String]; description = String; environment = { JAVA_SYS_PROPS = { -Dconfig.file = ∀ β. β; -Djava.util.logging.config.file = String; -Dnet.java.sip.communicator.SC_HOME_DIR_LOCATION = String; -Dnet.java.sip.communicator.SC_HOME_DIR_NAME = String } }; script = ∀ δ. δ; serviceConfig = { CapabilityBoundingSet = String; DynamicUser = Bool; Group = String; LimitNOFILE = Integer; LimitNPROC = Integer; LockPersonality = Bool; NoNewPrivileges = Bool; PrivateDevices = Bool; PrivateTmp = Bool; ProtectControlGroups = Bool; ProtectHome = Bool; ProtectHostname = Bool; ProtectKernelModules = Bool; ProtectKernelTunables = Bool; ProtectSystem = String; RestrictAddressFamilies = [String]; RestrictNamespaces = Bool; RestrictRealtime = Bool; RestrictSUIDSGID = Bool; TasksMax = Integer; Type = String; User = String }; wantedBy = [String] } } }; users = { groups = { jitsi-meet = {  } } } }; meta = { maintainers = ∀ ζ. ζ }; options = { services = { jitsi-videobridge = { config = { default = {  }; description = String; example = String; type = ∀ δ. δ }; enable = String; extraProperties = { default = {  }; description = String; type = ∀ δ. δ }; nat = { localAddress = { default = Null; description = String; example = String; type = ∀ γ. γ }; publicAddress = { default = Null; description = String; example = String; type = ∀ γ. γ } }; openFirewall = { default = Bool; description = String; type = ∀ δ. δ }; xmppConfigs = { default = {  }; description = String; example = String; type = ∀ δ. { name = δ } -> { config = { hostName = δ; mucNickname = String }; options = { disableCertificateVerification = { default = Bool; description = String; type = ∀ α. α }; domain = { default = Null; description = String; example = String; type = ∀ α. α }; hostName = { description = String; example = String; type = ∀ α. α }; mucJids = { description = String; example = String; type = ∀ α. α }; mucNickname = { description = String; type = ∀ α. α }; passwordFile = { description = String; example = String; type = ∀ α. α }; userName = { default = String; description = String; type = ∀ α. α } } } } } } } }