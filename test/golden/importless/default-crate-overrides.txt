∀ θ ι κ λ μ ν ξ ο π ρ σ τ υ φ χ ψ ω α1 β2 γ3.
( θ.apple_sdk = ι,
  θ.apple_sdk = κ,
  θ.apple_sdk = λ,
  θ.apple_sdk = μ
) =>
{ cairo = ν;
  curl = ξ;
  darwin = θ;
  dbus = ο;
  dbus-glib = π;
  foundationdb = ρ;
  gdk-pixbuf = σ;
  gmp = τ;
  libgit2 = υ;
  libiconv = φ;
  libsodium = χ;
  libssh2 = ψ;
  openssl = ω;
  pkgconfig = ω;
  postgresql = χ;
  python3 = α1;
  sqlite = β2;
  stdenv = γ3;
  zlib = ω;
} ->
{ cairo-rs = ∀ η. η -> {buildInputs = [ν];};
  cargo =
    ∀ η.
    η ->
    { buildInputs =
        ∀ α β γ δ ε ζ.
        ( γ3.lib = α,
          α.optionals = β -> [φ] -> [ξ],
          γ3.isDarwin = β,
          γ.frameworks = δ,
          δ.CoreFoundation = φ,
          ε.frameworks = ζ,
          ζ.Security = φ
        ) =>
        [ξ];
    };
  curl-sys =
    ∀ η.
    η ->
    { buildInputs = [ξ];
      extraLinkFlags = [String];
      propagatedBuildInputs = [ξ];
    };
  dbus = ∀ η. η -> {buildInputs = [ο];};
  foundationdb = ∀ η. η -> {buildInputs = [ρ];};
  foundationdb-sys = ∀ η. η -> {buildInputs = [ρ];};
  gdk-pixbuf = ∀ η. η -> {buildInputs = [σ];};
  gdk-pixbuf-sys = ∀ η. η -> {buildInputs = [π];};
  gio-sys = ∀ η. η -> {buildInputs = [π];};
  gobject-sys = ∀ η. η -> {buildInputs = [π];};
  libdbus-sys = ∀ η. η -> {buildInputs = [ο];};
  libgit2-sys =
    ∀ η. η -> {LIBGIT2_SYS_USE_PKG_CONFIG = Bool; buildInputs = [υ];};
  libsqlite3-sys = ∀ η. η -> {buildInputs = [β2];};
  libssh2-sys = ∀ η. η -> {buildInputs = [ψ];};
  libz-sys = ∀ η. η -> {buildInputs = [ψ]; extraLinkFlags = [String];};
  openssl = ∀ η. η -> {buildInputs = [ψ];};
  openssl-sys = ∀ η. η -> {buildInputs = [ψ];};
  pq-sys = ∀ η. η -> {buildInputs = [χ];};
  rink =
    ∀ η.
    η -> {buildInputs = [τ]; crateBin = [{name = String; path = String;}];};
  security-framework-sys =
    ∀ η.
    η ->
    { propagatedBuildInputs =
        ∀ α β γ. (α.frameworks = β, β.Security = γ) => [γ];
    };
  serde_derive =
    ∀ η.
    η ->
    { buildInputs =
        ∀ α β γ δ ε ζ.
        ( γ3.lib = α,
          α.optional = β -> γ -> δ,
          γ3.isDarwin = β,
          ε.frameworks = ζ,
          ζ.Security = γ
        ) =>
        δ;
    };
  thrussh-libsodium = ∀ η. η -> {buildInputs = [χ];};
  xcb = ∀ η. η -> {buildInputs = [α1];};
}