∀ θ ι κ λ μ ν ξ ο π ρ σ τ υ φ.
( θ.apple_sdk = ι,
  θ.apple_sdk = κ,
  θ.apple_sdk = λ,
  θ.apple_sdk = μ
) =>
{ cairo = ν;
  curl = ξ;
  darwin = θ;
  dbus = ξ;
  dbus-glib = ο;
  foundationdb = π;
  gdk-pixbuf = ρ;
  gmp = σ;
  libgit2 = ξ;
  libiconv = τ;
  libsodium = ξ;
  libssh2 = ξ;
  openssl = ξ;
  pkgconfig = ξ;
  postgresql = ξ;
  python3 = υ;
  sqlite = ξ;
  stdenv = φ;
  zlib = ξ;
} ->
{ cairo-rs = ∀ η. η -> {buildInputs = [ν];};
  cargo =
    ∀ η.
    η ->
    { buildInputs =
        ∀ α β γ δ ε ζ.
        ( φ.lib = α,
          α.optionals = β -> [τ] -> [ξ],
          φ.isDarwin = β,
          γ.frameworks = δ,
          δ.CoreFoundation = τ,
          ε.frameworks = ζ,
          ζ.Security = τ
        ) =>
        [ξ];
    };
  curl-sys =
    ∀ η.
    η ->
    { buildInputs = [ξ];
      extraLinkFlags = [String];
      propagatedBuildInputs = [ξ];
    };
  dbus = ∀ η. η -> {buildInputs = [ξ];};
  foundationdb = ∀ η. η -> {buildInputs = [π];};
  foundationdb-sys = ∀ η. η -> {buildInputs = [π];};
  gdk-pixbuf = ∀ η. η -> {buildInputs = [ρ];};
  gdk-pixbuf-sys = ∀ η. η -> {buildInputs = [ο];};
  gio-sys = ∀ η. η -> {buildInputs = [ο];};
  gobject-sys = ∀ η. η -> {buildInputs = [ο];};
  libdbus-sys = ∀ η. η -> {buildInputs = [ξ];};
  libgit2-sys =
    ∀ η. η -> {LIBGIT2_SYS_USE_PKG_CONFIG = Bool; buildInputs = [ξ];};
  libsqlite3-sys = ∀ η. η -> {buildInputs = [ξ];};
  libssh2-sys = ∀ η. η -> {buildInputs = [ξ];};
  libz-sys = ∀ η. η -> {buildInputs = [ξ]; extraLinkFlags = [String];};
  openssl = ∀ η. η -> {buildInputs = [ξ];};
  openssl-sys = ∀ η. η -> {buildInputs = [ξ];};
  pq-sys = ∀ η. η -> {buildInputs = [ξ];};
  rink =
    ∀ η.
    η -> {buildInputs = [σ]; crateBin = [{name = String; path = String;}];};
  security-framework-sys =
    ∀ η.
    η ->
    { propagatedBuildInputs =
        ∀ α β γ. (α.frameworks = β, β.Security = γ) => [γ];
    };
  serde_derive =
    ∀ η.
    η ->
    { buildInputs =
        ∀ α β γ δ ε ζ.
        ( φ.lib = α,
          α.optional = β -> γ -> δ,
          φ.isDarwin = β,
          ε.frameworks = ζ,
          ζ.Security = γ
        ) =>
        δ;
    };
  thrussh-libsodium = ∀ η. η -> {buildInputs = [ξ];};
  xcb = ∀ η. η -> {buildInputs = [υ];};
}