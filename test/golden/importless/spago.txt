∀ α β γ δ ε ζ η θ ι.
(α.lib = β, β.licenses = γ, γ.bsd3 = δ) => { Cabal = ε;
  Glob = ε;
  QuickCheck = ε;
  aeson = ε;
  aeson-pretty = ε;
  ansi-terminal = ε;
  async-pool = ε;
  base = ε;
  bower-json = ε;
  bytestring = ε;
  containers = ε;
  dhall = ε;
  directory = ε;
  either = ε;
  exceptions = ε;
  extra = ε;
  fetchgit =
    {fetchSubmodules = Bool; rev = String; sha256 = String; url = String;} -> ζ;
  file-embed = ε;
  filepath = ε;
  foldl = ε;
  fsnotify = ε;
  github = ε;
  hpack = η;
  hspec = ε;
  hspec-discover = θ;
  hspec-megaparsec = ε;
  http-client = ε;
  http-conduit = ε;
  lens-family-core = ε;
  megaparsec = ε;
  mkDerivation =
    { executableHaskellDepends = [ε];
      homepage = String;
      isExecutable = Bool;
      isLibrary = Bool;
      libraryHaskellDepends = [ε];
      libraryToolDepends = [η];
      license = δ;
      pname = String;
      prePatch = String;
      src = ζ;
      testHaskellDepends = [ε];
      testToolDepends = [θ];
      version = String;
    } ->
    ι;
  mtl = ε;
  network-uri = ε;
  open-browser = ε;
  optparse-applicative = ε;
  prettyprinter = ε;
  process = ε;
  retry = ε;
  rio = ε;
  rio-orphans = ε;
  safe = ε;
  semver-range = ε;
  stdenv = α;
  stm = ε;
  tar = ε;
  template-haskell = ε;
  temporary = ε;
  text = ε;
  time = ε;
  transformers = ε;
  turtle = ε;
  unliftio = ε;
  unordered-containers = ε;
  vector = ε;
  versions = ε;
  with-utf8 = ε;
  zlib = ε;
} ->
ι