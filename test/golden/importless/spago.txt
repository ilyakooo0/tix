∀ γ δ ε ζ η θ. { Cabal = γ; Glob = γ; QuickCheck = γ; aeson = γ; aeson-pretty = γ; ansi-terminal = γ; async-pool = γ; base = γ; bower-json = γ; bytestring = γ; containers = γ; dhall = γ; directory = γ; either = γ; exceptions = γ; extra = γ; fetchgit = { fetchSubmodules = Bool; rev = String; sha256 = String; url = String } -> δ; file-embed = γ; filepath = γ; foldl = γ; fsnotify = γ; github = γ; hpack = ε; hspec = γ; hspec-discover = ζ; hspec-megaparsec = γ; http-client = γ; http-conduit = γ; lens-family-core = γ; megaparsec = γ; mkDerivation = { executableHaskellDepends = [γ]; homepage = String; isExecutable = Bool; isLibrary = Bool; libraryHaskellDepends = [γ]; libraryToolDepends = [ε]; license = ∀ α. α; pname = String; prePatch = String; src = { fetchSubmodules = Bool; rev = String; sha256 = String; url = String }; testHaskellDepends = [γ]; testToolDepends = [ζ]; version = String } -> η; mtl = γ; network-uri = γ; open-browser = γ; optparse-applicative = γ; prettyprinter = γ; process = γ; retry = γ; rio = γ; rio-orphans = γ; safe = γ; semver-range = γ; stdenv = θ; stm = γ; tar = γ; template-haskell = γ; temporary = γ; text = γ; time = γ; transformers = γ; turtle = γ; unliftio = γ; unordered-containers = γ; vector = γ; versions = γ; with-utf8 = γ; zlib = γ } -> { executableHaskellDepends = [γ]; homepage = String; isExecutable = Bool; isLibrary = Bool; libraryHaskellDepends = [γ]; libraryToolDepends = [ε]; license = ∀ β. β; pname = String; prePatch = String; src = { fetchSubmodules = Bool; rev = String; sha256 = String; url = String }; testHaskellDepends = [γ]; testToolDepends = [ζ]; version = String }