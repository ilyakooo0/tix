∀ α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ σ τ υ φ χ ψ ω α1 β2 γ3 δ4 ε5 ζ6 η7 θ8 ι9 κ10
λ11 μ12 ν13 ξ14 ο15 π16 ρ17.
( α.libXcomposite = β,
  α.libXdamage = β,
  α.libpciaccess = β,
  α.xrandr = β,
  γ.optionalString = δ -> String -> ε,
  γ.optionals = ζ -> [String] -> [η],
  γ.versionAtLeast = θ -> String -> ι,
  γ.versionOlder = θ -> String -> κ,
  λ.arch = String,
  λ.isAarch32 = Bool,
  λ.isAarch64 = Bool,
  λ.isDarwin = μ,
  λ.isGNU = ζ,
  λ.isLinux = δ,
  λ.lib = ν,
  ν.AVFoundation = ξ,
  ν.AppKit = ξ,
  ν.ApplicationServices = ξ,
  ν.Cocoa = ξ,
  ν.CoreBluetooth = ξ,
  ν.CoreWLAN = ξ,
  ν.ForceFeedback = ξ,
  ν.Foundation = ξ,
  ν.GameController = ξ,
  ν.IOBluetooth = ξ,
  ν.ImageCaptureCore = ξ,
  ν.LocalAuthentication = ξ,
  ν.Quartz = ξ,
  ν.apple_sdk = ο,
  ν.cctools = ξ,
  ν.libobjc = ξ,
  ν.libunwind = ξ,
  ν.maintainers = π,
  ν.matthewbauer = ρ,
  ν.optional = σ -> String -> τ,
  ν.optionalString = κ -> String -> String,
  ν.optionals = υ -> [φ] -> χ,
  ν.platforms = ψ,
  ω.cc = λ,
  α1.gcc = λ,
  β2.platform = α1,
  γ3.hostPlatform = β2,
  ψ.unix = δ4,
  ε5.hostPlatform = λ,
  ζ6.hostPlatform = λ,
  ο.frameworks = η7,
  θ8.hostPlatform = λ,
  ι9.hostPlatform = λ
) =>
{ alsaLib = β;
  bison = κ10;
  coreutils = κ10;
  cups = φ;
  darwin = λ11;
  dbus = β;
  enableProprietaryCodecs = Bool;
  fetchpatch =
    { extraPrefix = String;
      name = String;
      sha256 = String;
      stripLen = Integer;
      url = String;
    } ->
    μ12;
  ffmpeg_3 = Null;
  flex = κ10;
  fontconfig = β;
  freetype = β;
  git = κ10;
  gn = κ10;
  gperf = κ10;
  harfbuzz = ν13;
  icu = ν13;
  jsoncpp = β;
  lib = γ;
  libXScrnSaver = β;
  libXcursor = β;
  libXrandr = β;
  libXtst = β;
  libcap = β;
  libdrm = β;
  libevent = ν13;
  libjpeg = ν13;
  libopus = ν13;
  libpng = ν13;
  libtiff = ν13;
  libvpx = ν13;
  libwebp = ν13;
  minizip = β;
  ninja = κ10;
  nss = β;
  openbsm = ξ;
  pciutils = β;
  pkgconfig = κ10;
  protobuf = β;
  python2 = κ10;
  qtCompatVersion = θ;
  qtModule =
    { NIX_CFLAGS_COMPILE = [η];
      __impureHostDeps = τ;
      buildInputs = χ;
      doCheck = Bool;
      dontUseGnConfigure = Bool;
      dontUseNinjaBuild = Bool;
      dontUseNinjaInstall = Bool;
      dontUseXcbuild = Bool;
      enableParallelBuilding = Bool;
      hardeningDisable = [String];
      meta = {description = String; maintainers = [ρ]; platforms = δ4;};
      name = String;
      nativeBuildInputs = [κ10];
      outputs = [String];
      patches = [μ12];
      postInstall = ε;
      postPatch = String;
      preConfigure = String;
      propagatedBuildInputs = [ν13];
      qmakeFlags = [String];
      qtInputs = [ξ14];
    } ->
    ο15;
  qtdeclarative = ξ14;
  qtlocation = ξ14;
  qtquickcontrols = ξ14;
  qtwebchannel = ξ14;
  runCommand = String -> {} -> String -> φ;
  snappy = β;
  srtp = ν13;
  stdenv = λ;
  systemd = π16;
  which = κ10;
  writeScriptBin = String -> String -> φ;
  xcbuild = ρ17;
  xorg = α;
  zlib = β;
} ->
ο15