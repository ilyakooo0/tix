∀ α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ σ τ υ φ χ ψ ω α1 β1 γ1 δ1 ε1 ζ1 η1 θ1 ι1 κ1
λ1 μ1 ν1 ξ1 ο1 π1 ρ1.
( α.hostPlatform = β,
  β.?platform = γ,
  γ.?gcc = δ,
  δ.?arch = String,
  ε.libXcomposite = ζ,
  ε.libXdamage = ζ,
  ε.libpciaccess = ζ,
  ε.xrandr = ζ,
  η.optionalString = θ -> String -> ι,
  η.optionals = κ -> [String] -> [λ],
  η.versionAtLeast = μ -> String -> ν,
  η.versionOlder = μ -> String -> ξ,
  α.cc = ο,
  α.isDarwin = π,
  α.isLinux = θ,
  α.lib = ρ,
  ρ.AVFoundation = σ,
  ρ.AppKit = σ,
  ρ.ApplicationServices = σ,
  ρ.Cocoa = σ,
  ρ.CoreBluetooth = σ,
  ρ.CoreWLAN = σ,
  ρ.ForceFeedback = σ,
  ρ.Foundation = σ,
  ρ.GameController = σ,
  ρ.IOBluetooth = σ,
  ρ.ImageCaptureCore = σ,
  ρ.LocalAuthentication = σ,
  ρ.Quartz = σ,
  ρ.apple_sdk = τ,
  ρ.cctools = σ,
  ρ.libobjc = σ,
  ρ.libunwind = σ,
  ρ.maintainers = υ,
  ρ.matthewbauer = φ,
  ρ.optional = χ -> String -> ψ,
  ρ.optionalString = ξ -> String -> String,
  ρ.optionals = ω -> [α1] -> β1,
  ρ.platforms = γ1,
  ο.isGNU = κ,
  γ1.unix = δ1,
  ε1.isAarch32 = Bool,
  ζ1.isAarch64 = Bool,
  τ.frameworks = η1,
  θ1.isAarch32 = Bool,
  ι1.isAarch64 = Bool
) =>
{ alsaLib = ζ;
  bison = κ1;
  coreutils = κ1;
  cups = α1;
  darwin = λ1;
  dbus = ζ;
  enableProprietaryCodecs = Bool;
  fetchpatch =
    { extraPrefix = String;
      name = String;
      sha256 = String;
      stripLen = Integer;
      url = String;
    } ->
    μ1;
  ffmpeg_3 = Null;
  flex = κ1;
  fontconfig = ζ;
  freetype = ζ;
  git = κ1;
  gn = κ1;
  gperf = κ1;
  harfbuzz = ν1;
  icu = ν1;
  jsoncpp = ζ;
  lib = η;
  libXScrnSaver = ζ;
  libXcursor = ζ;
  libXrandr = ζ;
  libXtst = ζ;
  libcap = ζ;
  libdrm = ζ;
  libevent = ν1;
  libjpeg = ν1;
  libopus = ν1;
  libpng = ν1;
  libtiff = ν1;
  libvpx = ν1;
  libwebp = ν1;
  minizip = ζ;
  ninja = κ1;
  nss = ζ;
  openbsm = σ;
  pciutils = ζ;
  pkgconfig = κ1;
  protobuf = ζ;
  python2 = κ1;
  qtCompatVersion = μ;
  qtModule =
    { NIX_CFLAGS_COMPILE = [λ];
      __impureHostDeps = ψ;
      buildInputs = β1;
      doCheck = Bool;
      dontUseGnConfigure = Bool;
      dontUseNinjaBuild = Bool;
      dontUseNinjaInstall = Bool;
      dontUseXcbuild = Bool;
      enableParallelBuilding = Bool;
      hardeningDisable = [String];
      meta = {description = String; maintainers = [φ]; platforms = δ1;};
      name = String;
      nativeBuildInputs = [κ1];
      outputs = [String];
      patches = [μ1];
      postInstall = ι;
      postPatch = String;
      preConfigure = String;
      propagatedBuildInputs = [ν1];
      qmakeFlags = [String];
      qtInputs = [ξ1];
    } ->
    ο1;
  qtdeclarative = ξ1;
  qtlocation = ξ1;
  qtquickcontrols = ξ1;
  qtwebchannel = ξ1;
  runCommand = String -> {} -> String -> α1;
  snappy = ζ;
  srtp = ν1;
  stdenv = α;
  systemd = π1;
  which = κ1;
  writeScriptBin = String -> String -> α1;
  xcbuild = ρ1;
  xorg = ε;
  zlib = ζ;
} ->
ο1