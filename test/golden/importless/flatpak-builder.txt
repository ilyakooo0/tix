[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 68}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 110}},KeyNotPresent "installedTestsDependencies"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 68}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 110}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 4}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 68}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 83}},UndefinedVariable "flatpak-builder"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 47}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 62}},UndefinedVariable "flatpak-builder"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 34}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 110}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 4, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 4, sourceColumn = Pos 32}},KeyNotPresent "flatpak-builder"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 4, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 4, sourceColumn = Pos 32}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0})]
[]
âˆ€ Î´ Îµ. { makeInstalledTest = { testConfig = { environment = { systemPackages = âˆ€ Î±. [Î±] }; services = { flatpak = { enable = Bool } }; virtualisation = { diskSize = Integer }; xdg = { portal = { enable = Bool } } }; testRunnerFlags = String; tested = âˆ€ Î². Î² } -> Î´; pkgs = Îµ } -> { testConfig = { environment = { systemPackages = âˆ€ Î². [Î²] }; services = { flatpak = { enable = Bool } }; virtualisation = { diskSize = Integer }; xdg = { portal = { enable = Bool } } }; testRunnerFlags = String; tested = âˆ€ Î³. Î³ }