[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 83}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 117}},KeyNotPresent "environment"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 83}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 117}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 43}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 62}},UndefinedVariable "concatMapStringsSep"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 34, sourceColumn = Pos 18}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 34, sourceColumn = Pos 52}},KeyNotPresent "environment"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 34, sourceColumn = Pos 18}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 34, sourceColumn = Pos 52}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 34, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 34, sourceColumn = Pos 16}},UndefinedVariable "mkIf"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 22, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 22, sourceColumn = Pos 31}},UndefinedVariable "literalExample"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 27}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 40}},KeyNotPresent "package"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 27}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 40}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 6}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 27}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 32}},UndefinedVariable "types"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 26}},KeyNotPresent "listOf"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 26}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 4}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 19}},UndefinedVariable "types"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 19, sourceColumn = Pos 35}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 19, sourceColumn = Pos 43}},UndefinedVariable "mkOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 3, sourceColumn = Pos 1}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 39, sourceColumn = Pos 1}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 1})]
[CanNotUnify (NAtomic Bool) (NAttrSet (fromList [("environment",NAttrSet (fromList [("etc",NAttrSet (fromList [("odbcinst.ini",NAttrSet (fromList [("text",NBrujin (DeBrujin 1 0))]))]))]))]) :-> NTypeVariable 22),CanNotUnify (NAtomic String) ((NBrujin (DeBrujin 1 0) :-> NAtomic String) :-> NTypeVariable 19)]
âˆ€ Î² Î³. { config = Î²; lib = Î³ } -> { config = { environment = { etc = { odbcinst.ini = âˆ€ Î±. { text = Î± } } } }; options = { environment = { unixODBCDrivers = { default = âˆ€ Î±. Î±; description = String; example = String; type = âˆ€ Î±. Î± } } } }