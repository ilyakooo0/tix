∀ α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π.
( α.mit = β,
  α.mkDerivation =
    { buildInputs = [γ];
      configureFlags = [String];
      hardeningDisable = [String];
      meta =
        { description = String;
          license = β;
          maintainers = [δ];
          platforms = ε;
          version = String;
        };
      name = String;
      patches = [Path];
      postInstall = String;
      propagatedBuildInputs = [ζ];
      src = η;
      version = String;
    } ->
    θ,
  α.optional = Bool -> String -> [String],
  α.optionals = Bool -> [Null] -> [ζ],
  α.raskin = δ,
  α.unix = ε,
  ι.lib = α,
  κ.lib = α,
  λ.licenses = α,
  μ.lib = λ,
  ν.maintainers = α,
  ξ.lib = ν,
  ο.platforms = α,
  π.lib = ο
) =>
{ autoconf = γ;
  automake = γ;
  boehmgc = Null;
  fetchpatch = {name = String; sha256 = String; url = String;} -> Path;
  fetchurl = {sha256 = String; url = String;} -> η;
  gcc = ζ;
  gmp = ζ;
  libffi = ζ;
  libtool = γ;
  makeWrapper = γ;
  mpfr = ζ;
  noUnicode = Bool;
  stdenv = α;
  threadSupport = Bool;
  useBoehmgc = Bool;
} ->
θ