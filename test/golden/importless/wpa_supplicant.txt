∀ θ ι κ λ. { config = θ; lib = ι; pkgs = κ; utils = λ } -> { config = { assertions = ∀ ζ η. ζ -> η -> { assertion = Bool; message = String }; environment = { systemPackages = ∀ ε. [ε] }; powerManagement = { resumeCommands = String }; services = { dbus = { packages = ∀ δ. [δ] }; udev = { extraRules = String; packages = ∀ δ. [δ] } }; systemd = { services = { wpa_supplicant = { after = ∀ γ. γ; before = [String]; description = String; path = ∀ γ. [γ]; requires = ∀ γ. γ; script = String; stopIfChanged = Bool; wantedBy = [String]; wants = [String] } } } }; meta = { maintainers = ∀ ζ. [ζ] }; options = { networking = { wireless = { driver = { default = String; description = String; type = ∀ γ. γ }; enable = String; extraConfig = { default = String; description = String; example = String; type = ∀ γ. γ }; interfaces = { default = ∀ γ. γ; description = String; example = [String]; type = ∀ γ. γ }; networks = { default = {  }; description = String; example = String; type = { options = { auth = { default = Null; description = String; example = String; type = ∀ α. α }; extraConfig = { default = String; description = String; example = String; type = ∀ α. α }; hidden = { default = Bool; description = String; example = String; type = ∀ α. α }; priority = { default = Null; description = String; type = ∀ α. α }; psk = { default = Null; description = String; type = ∀ α. α }; pskRaw = { default = Null; description = String; type = ∀ α. α } } } }; userControlled = { enable = { default = Bool; description = String; type = ∀ β. β }; group = { default = String; description = String; example = String; type = ∀ β. β } } } } } }