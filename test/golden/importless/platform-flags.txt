∀ α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ σ τ υ φ χ ψ ω α1 β2 γ3.
( ({}) // (α) ~ (Bool),
  ({}) // (β) ~ (γ),
  ({}) // (δ) ~ (ε),
  ({}) // (ζ) ~ (η),
  ({}) // (θ) ~ (ι),
  ({}) // (κ) ~ (λ),
  μ.parsed = ν,
  μ.parsed = ξ,
  μ.parsed = ο,
  μ.parsed = π,
  μ.parsed = ρ,
  μ.parsed = σ,
  μ.platform = τ,
  μ.platform = υ,
  μ.platform = φ,
  μ.platform = χ,
  μ.platform = ψ,
  μ.platform = ω,
  α1.concatLists = [β2] -> γ3,
  α1.optional = Bool -> String -> β2,
  μ.isx86_64 = Bool,
  τ.gcc = {},
  ν.abi = α,
  α1.optional = γ -> String -> β2,
  υ.gcc = {},
  ξ.abi = β,
  α1.optional = ε -> String -> β2,
  φ.gcc = {},
  ο.abi = δ,
  α1.optional = η -> String -> β2,
  χ.gcc = {},
  π.abi = ζ,
  α1.optional = ι -> String -> β2,
  ψ.gcc = {},
  ρ.abi = θ,
  α1.optional = λ -> String -> β2,
  ω.gcc = {},
  σ.abi = κ,
  α1.optional = Bool -> String -> β2,
  μ.isPower = Bool,
  μ.libc = String,
  μ.is64bit = Bool,
  μ.isLittleEndian = Bool
) =>
{lib = α1; targetPlatform = μ;} -> γ3