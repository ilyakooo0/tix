∀ ε ζ η θ. { config = ε; lib = ζ; options = η; pkgs = θ } -> { config = { networking = { firewall = { allowedTCPPorts = ∀ γ. [γ] } }; systemd = { services = { biboumi = { after = [String]; description = String; serviceConfig = { AmbientCapabilities = [String]; BindPaths = [String]; BindReadOnlyPaths = [String]; CapabilityBoundingSet = [String]; DeviceAllow = String; DynamicUser = Bool; ExecReload = String; ExecStart = String; ExecStartPre = [String]; InaccessiblePaths = [String]; LockPersonality = Bool; MemoryDenyWriteExecute = Bool; MountAPIVFS = Bool; NoNewPrivileges = Bool; PrivateDevices = Bool; PrivateMounts = Bool; PrivateNetwork = Bool; PrivateTmp = Bool; PrivateUsers = Bool; ProtectClock = Bool; ProtectControlGroups = Bool; ProtectHome = Bool; ProtectHostname = Bool; ProtectKernelLogs = Bool; ProtectKernelModules = Bool; ProtectKernelTunables = Bool; ProtectSystem = String; RemoveIPC = Bool; Restart = String; RestrictAddressFamilies = [String]; RestrictNamespaces = Bool; RestrictRealtime = Bool; RestrictSUIDSGID = Bool; RootDirectory = String; RootDirectoryStartOnly = Bool; RuntimeDirectory = [String]; RuntimeDirectoryMode = String; StateDirectory = String; StateDirectoryMode = String; SystemCallArchitectures = String; SystemCallErrorNumber = String; SystemCallFilter = [String]; Type = String; UMask = String; WatchdogSec = Integer }; wantedBy = [String] } } } }; meta = { maintainers = ∀ δ. [δ] }; options = { services = { biboumi = { credentialsFile = { default = String; description = String; example = String; type = ∀ β. β }; enable = String; openFirewall = String; settings = { default = {  }; description = String; type = { freeformType = { description = String }; options = { admin = { apply = String; default = ∀ α. α; description = String; example = [String]; type = ∀ α. α }; ca_file = { default = String; description = String; type = ∀ α. α }; db_name = { default = String; description = String; example = String; type = ∀ α. α }; hostname = { description = String; example = String; type = ∀ α. α }; identd_port = { default = Integer; description = String; example = Integer; type = ∀ α. α }; log_level = { default = Integer; description = String; type = Integer }; password = { description = String; type = ∀ α. α }; persistent_by_default = { default = Bool; description = String; type = ∀ α. α }; policy_directory = { default = String; description = String; type = ∀ α. α }; port = { default = Integer; description = String; type = ∀ α. α }; realname_customization = { default = Bool; description = String; type = ∀ α. α }; realname_from_jid = { default = Bool; description = String; type = ∀ α. α }; xmpp_server_ip = { default = String; description = String; type = ∀ α. α } } } } } } } }