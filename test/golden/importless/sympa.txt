∀ θ ι κ. { config = θ; lib = ι; pkgs = κ } -> { config = { assertions = [{ assertion = Bool; message = String }]; environment = { systemPackages = [∀ ζ. ζ] }; services = { mysql = { enable = Bool; ensureDatabases = ∀ ζ. [ζ]; ensureUsers = [{ ensurePermissions = { .* = String }; name = ∀ γ. γ }]; package = ∀ ζ. ζ }; nginx = { enable = Bool; virtualHosts = ∀ ζ. ζ -> { enableACME = Bool; forceSSL = Bool; locations = { /static-sympa/ = { alias = String } } } }; postfix = { config = { transport_maps = [String]; virtual_alias_maps = [String]; virtual_mailbox_domains = [String]; virtual_mailbox_maps = [String] }; enable = Bool; masterConfig = { sympa = { args = [String]; chroot = Bool; command = String; privileged = Bool; type = String }; sympabounce = { args = [String]; chroot = Bool; command = String; privileged = Bool; type = String } }; recipientDelimiter = String }; postgresql = { enable = Bool; ensureDatabases = ∀ ζ. [ζ]; ensureUsers = [{ ensurePermissions = { DATABASE  = String }; name = ∀ γ. γ }] }; sympa = { settings = { aliases_db_type = String; aliases_program = String; arc_path = String; bounce_path = String; css_path = String; db_host = String; db_name = ∀ δ. δ; db_port = ∀ δ. δ; db_type = ∀ δ. δ; db_user = ∀ δ. δ; domain = ∀ δ. δ; home = String; lang = ∀ δ. δ; listmaster = ∀ δ. δ; mhonarc = String; pictures_path = String; sendmail = String; sendmail_aliases = String; static_content_path = String }; settingsFile = { etc/list_aliases.tt2 = { source = String }; transport.sympa = { source = ∀ γ. γ -> String }; virtual.sympa = { source = ∀ γ. γ -> String } } } }; systemd = { services = { sympa = { after = [String]; before = [String]; description = String; preStart = String; serviceConfig = String; wantedBy = [String]; wants = [String] }; sympa-archive = { bindsTo = [String]; description = String; serviceConfig = String }; sympa-bounce = { bindsTo = [String]; description = String; serviceConfig = String }; sympa-bulk = { bindsTo = [String]; description = String; serviceConfig = String }; sympa-task = { bindsTo = [String]; description = String; serviceConfig = String }; wwsympa = { after = [String]; serviceConfig = { ExecStart = String; PIDFile = String; ProtectControlGroups = Bool; ProtectHome = Bool; ProtectSystem = String; Restart = String; StateDirectory = String; Type = String }; wantedBy = [String] } }; tmpfiles = { rules = [String] } } }; meta = { maintainers = ∀ η. [η] }; options = { services = { sympa = { database = { createLocally = { default = Bool; description = String; type = ∀ γ. γ }; host = { default = Null; description = String; type = ∀ γ. γ }; name = { default = String; defaultText = String; description = String; type = ∀ γ. γ }; passwordFile = { default = Null; description = String; example = String; type = ∀ γ. γ }; port = { default = Null; description = String; type = ∀ γ. γ }; type = { default = String; description = String; example = String; type = [String] }; user = { default = String; description = String; type = ∀ γ. γ } }; domains = { description = String; example = String; type = ∀ δ ε. { config = δ; name = ε } -> { config = { settings = { wwsympa_url = String } }; options = { settings = { default = {  }; description = String; example = { default_max_list_members = Integer }; type = ∀ α. [α] }; webHost = { default = Null; description = String; example = String; type = ∀ α. α }; webLocation = { default = String; description = String; example = String; type = ∀ α. α } } } }; enable = String; lang = { default = String; description = String; example = String; type = ∀ δ. δ }; listMasters = { description = String; example = [String]; type = ∀ δ. δ }; mainDomain = { default = Null; description = String; example = String; type = ∀ δ. δ }; mta = { type = { default = String; description = String; type = [String] } }; settings = { default = {  }; description = String; example = String; type = ∀ δ. [δ] }; settingsFile = { default = {  }; description = String; example = String; type = ∀ δ ε. { config = δ; name = ε } -> { config = { source = ∀ β. β }; options = { enable = { default = Bool; description = String; type = ∀ α. α }; source = { description = String; type = ∀ α. α }; text = { default = Null; description = String; type = ∀ α. α } } } }; web = { enable = { default = Bool; description = String; type = ∀ γ. γ }; fcgiProcs = { default = Integer; description = String; type = ∀ γ. γ }; https = { default = Bool; description = String; type = ∀ γ. γ }; server = { default = String; description = String; type = [String] } } } } } }