[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 39, sourceColumn = Pos 21}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 39, sourceColumn = Pos 50}},KeyNotPresent "lib"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 39, sourceColumn = Pos 21}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 39, sourceColumn = Pos 50}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 38, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 38, sourceColumn = Pos 43}},KeyNotPresent "lib"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 38, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 38, sourceColumn = Pos 43}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 37, sourceColumn = Pos 15}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 37, sourceColumn = Pos 39}},KeyNotPresent "lib"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 37, sourceColumn = Pos 15}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 37, sourceColumn = Pos 39}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 1}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 20}},KeyNotPresent "mkDerivation"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 1}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 20}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0})]
[]
âˆ€ Î² Î³ Î´ Îµ. { SDL2 = Î²; autoconf = Î²; automake = Î²; fetchFromBitbucket = { owner = String; repo = String; rev = String; sha256 = String } -> Î³; freetype = Î²; libGL = Î²; libGLU = Î²; libdevil = Î²; libmodplug = Î²; libogg = Î²; libtheora = Î²; libtool = Î²; libvorbis = Î²; luajit = Î²; mpg123 = Î²; openal = Î²; physfs = Î²; pkgconfig = Î´; stdenv = Îµ; which = Î² } -> { NIX_CFLAGS_COMPILE = String; buildInputs = [Î²]; configureFlags = [String]; meta = { description = String; homepage = String; license = âˆ€ Î±. Î±; maintainers = âˆ€ Î±. [Î±]; platforms = âˆ€ Î±. Î± }; name = String; nativeBuildInputs = [Î´]; preConfigure = String; src = { owner = String; repo = String; rev = String; sha256 = String } }