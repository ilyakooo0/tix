[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 45, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 45, sourceColumn = Pos 53}},KeyNotPresent "boot"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 45, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 45, sourceColumn = Pos 53}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 45, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 45, sourceColumn = Pos 16}},UndefinedVariable "mkIf"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 26}},KeyNotPresent "bool"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 26}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 9}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 21}},UndefinedVariable "types"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 24, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 24, sourceColumn = Pos 24}},UndefinedVariable "mkOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 40}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 52}},KeyNotPresent "gnugrep"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 40}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 52}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 2}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 28}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 39}},KeyNotPresent "gnused"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 28}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 39}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 2}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 27}},KeyNotPresent "coreutils"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 27}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 2}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 42}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 12, sourceColumn = Pos 4}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 2}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 23}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 41}},KeyNotPresent "substituteAll"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 23}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 41}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 2}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 3, sourceColumn = Pos 1}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 52, sourceColumn = Pos 1}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 1})]
[]
âˆ€ Î³ Î´ Îµ. { config = Î³; lib = Î´; pkgs = Îµ } -> { config = { system = { build = { installBootLoader = { isExecutable = Bool; path = âˆ€ Î². [Î²]; src = Path } } } }; options = { boot = { loader = { initScript = { enable = { default = Bool; description = String; type = âˆ€ Î±. Î± } } } } } }