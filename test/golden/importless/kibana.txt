∀ δ ε ζ. { config = δ; lib = ε; pkgs = ζ } -> { config = { assertions = [{ assertion = Bool; message = String }]; environment = { systemPackages = ∀ γ. [γ] }; systemd = { services = { kibana = { after = [String]; description = String; environment = { BABEL_CACHE_PATH = String }; serviceConfig = { ExecStart = String; User = String; WorkingDirectory = ∀ α. α }; wantedBy = [String] } } }; users = { users = { kibana = { createHome = Bool; description = String; home = ∀ β. β; uid = ∀ β. β } } } }; options = { services = { kibana = { cert = { default = Null; description = String; type = ∀ β. β }; dataDir = { default = String; description = String; type = ∀ β. β }; defaultAppId = { default = String; description = String; type = ∀ β. β }; elasticsearch = { ca = { default = Null; description = String; type = ∀ α. α }; cert = { default = Null; description = String; type = ∀ α. α }; certificateAuthorities = { default = ∀ α. [α]; description = String; type = ∀ α. α }; hosts = { default = Null; description = String; type = ∀ α. α }; key = { default = Null; description = String; type = ∀ α. α }; password = { default = Null; description = String; type = ∀ α. α }; url = { default = Null; description = String; type = ∀ α. α }; username = { default = Null; description = String; type = ∀ α. α } }; enable = String; extraConf = { default = {  }; description = String; type = ∀ β. β }; index = { default = String; description = String; type = ∀ β. β }; key = { default = Null; description = String; type = ∀ β. β }; listenAddress = { default = String; description = String; type = ∀ β. β }; package = { default = ∀ β. β; defaultText = String; description = String; example = String; type = ∀ β. β }; port = { default = Integer; description = String; type = ∀ β. β } } } } }