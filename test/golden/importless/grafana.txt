∀ η θ ι κ. { config = η; lib = θ; options = ι; pkgs = κ } -> { config = { assertions = [{ assertion = Bool; message = String }]; environment = { systemPackages = ∀ ζ. [ζ] }; systemd = { services = { grafana = { after = [String]; description = String; environment = { ANALYTICS_REPORTING_ENABLED = ∀ δ. δ; AUTH_ANONYMOUS_ENABLED = ∀ δ. δ; AUTH_ANONYMOUS_ORG_NAME = ∀ δ. δ; AUTH_ANONYMOUS_ORG_ROLE = ∀ δ. δ; DATABASE_CONN_MAX_LIFETIME = ∀ δ. δ; DATABASE_HOST = ∀ δ. δ; DATABASE_NAME = ∀ δ. δ; DATABASE_PASSWORD = ∀ δ. δ; DATABASE_PATH = ∀ δ. δ; DATABASE_TYPE = ∀ δ. δ; DATABASE_USER = ∀ δ. δ; PATHS_DATA = ∀ δ. δ; PATHS_LOGS = String; PATHS_PLUGINS = String; QT_QPA_PLATFORM = String; SECURITY_ADMIN_PASSWORD = ∀ δ. δ; SECURITY_ADMIN_USER = ∀ δ. δ; SECURITY_SECRET_KEY = ∀ δ. δ; SERVER_CERT_FILE = ∀ δ. δ; SERVER_CERT_KEY = ∀ δ. δ; SERVER_DOMAIN = ∀ δ. δ; SERVER_HTTP_ADDR = ∀ δ. δ; SERVER_HTTP_PORT = ∀ δ. δ; SERVER_PROTOCOL = ∀ δ. δ; SERVER_ROOT_URL = ∀ δ. δ; SERVER_STATIC_ROOT_PATH = ∀ δ. δ; SMTP_ENABLED = ∀ δ. δ; SMTP_FROM_ADDRESS = ∀ δ. δ; SMTP_HOST = ∀ δ. δ; SMTP_PASSWORD = ∀ δ. δ; SMTP_USER = ∀ δ. δ; USERS_ALLOW_ORG_CREATE = ∀ δ. δ; USERS_ALLOW_SIGN_UP = ∀ δ. δ; USERS_AUTO_ASSIGN_ORG = ∀ δ. δ; USERS_AUTO_ASSIGN_ORG_ROLE = ∀ δ. δ }; preStart = String; script = String; serviceConfig = { User = String; WorkingDirectory = ∀ δ. δ }; wantedBy = [String] } } }; users = { groups = { grafana = {  } }; users = { grafana = { createHome = Bool; description = String; group = String; home = ∀ ε. ε; uid = ∀ ε. ε } } }; warnings = [String] }; options = { services = { grafana = { addr = { default = String; description = String; type = ∀ ε. ε }; analytics = { reporting = { enable = { default = Bool; description = String; type = ∀ γ. γ } } }; auth = { anonymous = { enable = { default = Bool; description = String; type = ∀ γ. γ }; org_name = { default = String; description = String; type = ∀ γ. γ }; org_role = { default = String; description = String; type = ∀ γ. γ } } }; certFile = { default = String; description = String; type = ∀ ε. ε }; certKey = { default = String; description = String; type = ∀ ε. ε }; dataDir = { default = String; description = String; type = ∀ ε. ε }; database = { connMaxLifetime = { default = String; description = String; example = Integer; type = [String] }; host = { default = String; description = String; type = ∀ δ. δ }; name = { default = String; description = String; type = ∀ δ. δ }; password = { default = String; description = String; type = ∀ δ. δ }; passwordFile = { default = Null; description = String; type = ∀ δ. δ }; path = { default = String; description = String; type = ∀ δ. δ }; type = { default = String; description = String; type = [String] }; user = { default = String; description = String; type = ∀ δ. δ } }; domain = { default = String; description = String; type = ∀ ε. ε }; enable = String; extraOptions = { default = {  }; description = String; type = ∀ ε. ε }; package = { default = ∀ ε. ε; defaultText = String; description = String; type = ∀ ε. ε }; port = { default = Integer; description = String; type = ∀ ε. ε }; protocol = { default = String; description = String; type = [String] }; provision = { dashboards = { apply = String -> String; default = ∀ δ. δ; description = String; type = { options = { disableDeletion = { default = Bool; description = String; type = ∀ β. β }; folder = { default = String; description = String; type = ∀ β. β }; name = { default = String; description = String; type = ∀ β. β }; options = { path = { description = String; type = ∀ α. α } }; orgId = { default = Integer; description = String; type = ∀ β. β }; type = { default = String; description = String; type = ∀ β. β }; updateIntervalSeconds = { default = Integer; description = String; type = ∀ β. β } } } }; datasources = { apply = String -> String; default = ∀ δ. δ; description = String; type = { options = { access = { default = String; description = String; type = [String] }; basicAuth = { default = Null; description = String; type = ∀ β. β }; basicAuthPassword = { default = Null; description = String; type = ∀ β. β }; basicAuthUser = { default = Null; description = String; type = ∀ β. β }; database = { default = Null; description = String; type = ∀ β. β }; editable = { default = Bool; description = String; type = ∀ β. β }; isDefault = { default = Bool; description = String; type = ∀ β. β }; jsonData = { default = Null; description = String; type = ∀ β. β }; name = { description = String; type = ∀ β. β }; orgId = { default = Integer; description = String; type = ∀ β. β }; password = { default = Null; description = String; type = ∀ β. β }; secureJsonData = { default = Null; description = String; type = ∀ β. β }; type = { description = String; type = [String] }; url = { description = String; type = ∀ β. β }; user = { default = Null; description = String; type = ∀ β. β }; version = { default = Integer; description = String; type = ∀ β. β }; withCredentials = { default = Bool; description = String; type = ∀ β. β } } } }; enable = String }; rootUrl = { default = String; description = String; type = ∀ ε. ε }; security = { adminPassword = { default = String; description = String; type = ∀ δ. δ }; adminPasswordFile = { default = Null; description = String; type = ∀ δ. δ }; adminUser = { default = String; description = String; type = ∀ δ. δ }; secretKey = { default = String; description = String; type = ∀ δ. δ }; secretKeyFile = { default = Null; description = String; type = ∀ δ. δ } }; smtp = { enable = String; fromAddress = { default = String; description = String; type = ∀ δ. δ }; host = { default = String; description = String; type = ∀ δ. δ }; password = { default = String; description = String; type = ∀ δ. δ }; passwordFile = { default = Null; description = String; type = ∀ δ. δ }; user = { default = String; description = String; type = ∀ δ. δ } }; staticRootPath = { default = String; description = String; type = ∀ ε. ε }; users = { allowOrgCreate = { default = Bool; description = String; type = ∀ δ. δ }; allowSignUp = { default = Bool; description = String; type = ∀ δ. δ }; autoAssignOrg = { default = Bool; description = String; type = ∀ δ. δ }; autoAssignOrgRole = { default = String; description = String; type = [String] } } } } } }