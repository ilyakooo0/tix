[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 36, sourceColumn = Pos 9}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 36, sourceColumn = Pos 33}},UnexpectedType {expected = NAttrSet (fromList []), got = NBrujin (DeBrujin 0 0)}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 8}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 41}},KeyNotPresent "nitrokey-udev-rules"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 8}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 41}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 2}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 27}},KeyNotPresent "enable"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 27}},UnexpectedType {expected = NAttrSet (fromList []), got = NBrujin (DeBrujin 0 0)}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 16}},UndefinedVariable "mkIf"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 24, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 24, sourceColumn = Pos 23}},KeyNotPresent "str"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 24, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 24, sourceColumn = Pos 23}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 9}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 24, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 24, sourceColumn = Pos 19}},UndefinedVariable "types"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 23, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 23, sourceColumn = Pos 21}},UndefinedVariable "mkOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 14, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 14, sourceColumn = Pos 24}},KeyNotPresent "bool"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 14, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 14, sourceColumn = Pos 24}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 5}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 14, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 14, sourceColumn = Pos 19}},UndefinedVariable "types"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 13, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 13, sourceColumn = Pos 22}},UndefinedVariable "mkOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 9}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 33}},KeyNotPresent "hardware"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 9}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 33}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 3, sourceColumn = Pos 1}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 42, sourceColumn = Pos 1}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 1})]
[]
âˆ€ Î³ Î´ Îµ. { config = Î³; lib = Î´; pkgs = Îµ } -> { config = { services = { udev = { packages = âˆ€ Î². [Î² -> {  }] } } }; options = { hardware = { nitrokey = { enable = { default = Bool; description = String; type = âˆ€ Î±. Î± }; group = { default = String; description = String; example = String; type = âˆ€ Î±. Î± } } } } }