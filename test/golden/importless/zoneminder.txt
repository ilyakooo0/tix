∀ θ ι κ. { config = θ; lib = ι; pkgs = κ } -> { config = { assertions = [{ assertion = Bool; message = String }]; environment = { etc = { zoneminder/60-defaults.conf = { source = String }; zoneminder/80-nixos.conf = { source = String } } }; networking = { firewall = { allowedTCPPorts = [Integer] } }; services = { fcgiwrap = { enable = Bool; group = ∀ ζ. ζ; preforkProcesses = ∀ ζ. ζ; user = String }; mysql = { enable = Bool; ensureDatabases = ∀ ζ. [ζ]; ensureUsers = [{ ensurePermissions = { .* = String }; name = ∀ β. β }]; package = ∀ ζ. ζ }; nginx = { enable = Bool; virtualHosts = {  } }; phpfpm = { pools = { zoneminder = { group = ∀ β. β; phpOptions = String; phpPackage = ∀ β γ δ. { all = β; enabled = [γ] } -> [δ]; settings = { listen.group = ∀ α. α; listen.mode = String; listen.owner = String; ping.path = String; pm = String; pm.max_children = Integer; pm.max_requests = Integer; pm.max_spare_servers = Integer; pm.min_spare_servers = Integer; pm.start_servers = Integer; pm.status_path = String }; user = String } } } }; systemd = { services = { zoneminder = { after = [String]; documentation = [String]; path = ∀ ε. [ε]; preStart = String; restartTriggers = [String]; serviceConfig = { CacheDirectory = [String]; ExecReload = String; ExecStart = String; ExecStop = String; Group = ∀ β. β; LogsDirectory = ∀ β. β; NoNewPrivileges = Bool; PIDFile = String; PrivateTmp = Bool; ProtectKernelTunables = Bool; ProtectSystem = String; ReadWriteDirectories = ∀ β. [β]; Restart = String; RestartSec = String; RuntimeDirectory = ∀ β. β; StateDirectory = [String]; SupplementaryGroups = [String]; SystemCallArchitectures = String; Type = String; User = String }; wantedBy = [String] } } } }; meta = { maintainers = ∀ η. [η] }; options = { services = { zoneminder = { cameras = { default = Integer; description = String; type = ∀ ε. ε }; database = { createLocally = { default = Bool; description = String; type = ∀ β. β }; host = { default = String; description = String; type = ∀ β. β }; name = { default = String; description = String; type = ∀ β. β }; password = { default = String; description = String; type = ∀ β. β }; username = { default = String; description = String; type = ∀ β. β } }; enable = String; extraConfig = { default = String; description = String; type = ∀ ε. ε }; hostname = { default = String; description = String; type = ∀ ε. ε }; openFirewall = { default = Bool; description = String; type = ∀ ε. ε }; port = { default = Integer; description = String; type = ∀ ε. ε }; storageDir = { default = Null; description = String; example = String; type = ∀ ε. ε }; webserver = { default = String; description = String; type = [String] } } } } }