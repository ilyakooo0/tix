[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 62, sourceColumn = Pos 21}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 62, sourceColumn = Pos 36}},KeyNotPresent "isDarwin"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 62, sourceColumn = Pos 21}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 62, sourceColumn = Pos 36}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 3}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 62, sourceColumn = Pos 6}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 62, sourceColumn = Pos 20}},UndefinedVariable "optionalString"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 4, sourceColumn = Pos 1}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 74, sourceColumn = Pos 1}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 7}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 11}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 27}},KeyNotPresent "generators"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 11}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 27}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 5}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 4, sourceColumn = Pos 1}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 74, sourceColumn = Pos 1}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 5})]
[CanNotUnify (NAttrSet (fromList [])) (NAtomic String :-> NTypeVariable 15),CanNotUnify (NAtomic String) (NAttrSet (fromList []) :-> NTypeVariable 10)]
âˆ€ Î± Î² Î³ Î´ Îµ Î¶ Î·. { buildPackages = Î±; fetchurl = { executable = Bool; sha256 = String; url = String } -> Î²; lib = Î³; runCommand = String -> Î´; stdenv = Îµ; toolchainName = Î¶; writeText = Î· } -> String