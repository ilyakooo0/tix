∀ α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ σ τ υ φ χ ψ ω α1 β2 γ3 δ4 ε5 ζ6 η7 θ8 ι9.
( α.noXlibs = β,
  γ.const =
    ( δ ->
      { cairo = ε;
        dbus = ζ;
        gobject-introspection = η;
        networkmanager-fortisslvpn = θ;
        networkmanager-iodine = ι;
        networkmanager-l2tp = κ;
        networkmanager-openconnect = λ;
        networkmanager-openvpn = μ;
        networkmanager-vpnc = ν;
        qemu = ξ;
      }
    ) ->
    ο,
  γ.mkForce = Bool -> π,
  γ.mkIf =
    β ->
    { fonts = {fontconfig = {enable = Bool;};};
      nixpkgs = {overlays = ρ;};
      programs = {ssh = {setXAuthLocation = Bool;};};
      security = {pam = {services = {su = {forwardXAuth = π;};};};};
    } ->
    σ,
  γ.mkOption = {default = Bool; description = String; type = τ;} -> υ,
  γ.singleton = ο -> ρ,
  γ.types = φ,
  δ.override = χ,
  ψ.environment = α,
  φ.bool = τ,
  ω.cairo = δ,
  α1.dbus = δ,
  β2.gobject-introspection = δ,
  γ3.networkmanager-fortisslvpn = δ,
  δ4.networkmanager-iodine = δ,
  ε5.networkmanager-l2tp = δ,
  ζ6.networkmanager-openconnect = δ,
  η7.networkmanager-openvpn = δ,
  θ8.networkmanager-vpnc = δ,
  ι9.qemu = δ
) =>
{config = α; lib = γ;} ->
{config = σ; options = {environment = {noXlibs = υ;};};}