∀ α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ σ τ υ φ χ ψ ω α1 β2 γ3 δ4 ε5 ζ6 η7 θ8 ι9
κ10.
( α.config = β,
  α.lib = γ,
  δ.override = ε,
  β.noXlibs = ζ,
  γ.const =
    ( δ ->
      { cairo = η;
        dbus = θ;
        gobject-introspection = ι;
        networkmanager-fortisslvpn = κ;
        networkmanager-iodine = λ;
        networkmanager-l2tp = μ;
        networkmanager-openconnect = ν;
        networkmanager-openvpn = ξ;
        networkmanager-vpnc = ο;
        qemu = π;
      }
    ) ->
    ρ,
  γ.mkForce = Bool -> σ,
  γ.mkIf =
    ζ ->
    { fonts = {fontconfig = {enable = Bool;};};
      nixpkgs = {overlays = τ;};
      programs = {ssh = {setXAuthLocation = Bool;};};
      security = {pam = {services = {su = {forwardXAuth = σ;};};};};
    } ->
    υ,
  γ.mkOption = {default = Bool; description = String; type = φ;} -> χ,
  γ.singleton = ρ -> τ,
  γ.types = ψ,
  ω.environment = β,
  ψ.bool = φ,
  α1.cairo = δ,
  β2.dbus = δ,
  γ3.gobject-introspection = δ,
  δ4.networkmanager-fortisslvpn = δ,
  ε5.networkmanager-iodine = δ,
  ζ6.networkmanager-l2tp = δ,
  η7.networkmanager-openconnect = δ,
  θ8.networkmanager-openvpn = δ,
  ι9.networkmanager-vpnc = δ,
  κ10.qemu = δ
) =>
α -> {config = υ; options = {environment = {noXlibs = χ;};};}