∀ ε ζ η. { config = ε; lib = ζ; pkgs = η } -> { config = { assertions = ∀ δ. δ; environment = { etc = ∀ γ. γ }; system = { activationScripts = { spiped = String } }; systemd = { services = { spiped@ = { after = [String]; description = String; preStart = String; script = String; scriptArgs = String; serviceConfig = { PermissionsStartOnly = Bool; Restart = String; User = String } } } }; users = { groups = { spiped = { gid = ∀ β. β } }; users = { spiped = { description = String; group = String; uid = ∀ β. β } } } }; options = { services = { spiped = { config = { default = {  }; description = String; example = String; type = { options = { decrypt = { default = Bool; description = String; type = ∀ α. α }; disableKeepalives = { default = Bool; description = String; type = ∀ α. α }; disableReresolution = { default = Bool; description = String; type = ∀ α. α }; encrypt = { default = Bool; description = String; type = ∀ α. α }; keyfile = { description = String; type = ∀ α. α }; maxConns = { default = Integer; description = String; type = ∀ α. α }; resolveRefresh = { default = Integer; description = String; type = ∀ α. α }; source = { description = String; type = ∀ α. α }; target = { description = String; type = ∀ α. α }; timeout = { default = Integer; description = String; type = ∀ α. α }; waitForDNS = { default = Bool; description = String; type = ∀ α. α }; weakHandshake = { default = Bool; description = String; type = ∀ α. α } } } }; enable = { default = Bool; description = String; type = ∀ β. β } } } } }