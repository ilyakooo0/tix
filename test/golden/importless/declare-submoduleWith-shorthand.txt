[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 8, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 8, sourceColumn = Pos 35}},KeyNotPresent "types"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 8, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 8, sourceColumn = Pos 35}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 23}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 35}},KeyNotPresent "mkOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 23}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 35}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 3, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 3, sourceColumn = Pos 26}},KeyNotPresent "types"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 3, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 3, sourceColumn = Pos 26}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 2, sourceColumn = Pos 24}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 2, sourceColumn = Pos 36}},KeyNotPresent "mkOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 2, sourceColumn = Pos 24}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 2, sourceColumn = Pos 36}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0})]
[]
âˆ€ Î². { lib = Î² } -> { options = { submodule = { default = {  }; type = { modules = [{ options = { config = { default = Bool; type = âˆ€ Î±. Î± } } }]; shorthandOnlyDefinesConfig = Bool } } } }