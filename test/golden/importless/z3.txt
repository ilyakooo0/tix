[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 16, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 16, sourceColumn = Pos 37}},KeyNotPresent "lib"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 16, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 16, sourceColumn = Pos 37}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 7})]
[]
âˆ€ Î³ Î´ Îµ Î¶ Î·. { QuickCheck = Î³; base = Î³; containers = Î³; fetchpatch = { sha256 = String; url = String } -> Î´; gomp = Îµ; hspec = Î³; mkDerivation = { description = String; doCheck = Bool; homepage = String; isExecutable = Bool; isLibrary = Bool; libraryHaskellDepends = [Î³]; librarySystemDepends = [Îµ]; license = âˆ€ Î±. Î±; patches = [{ sha256 = String; url = String }]; pname = String; sha256 = String; testHaskellDepends = [Î³]; version = String } -> Î¶; stdenv = Î·; transformers = Î³; z3 = Îµ } -> { description = String; doCheck = Bool; homepage = String; isExecutable = Bool; isLibrary = Bool; libraryHaskellDepends = [Î³]; librarySystemDepends = [Îµ]; license = âˆ€ Î². Î²; patches = [{ sha256 = String; url = String }]; pname = String; sha256 = String; testHaskellDepends = [Î³]; version = String }