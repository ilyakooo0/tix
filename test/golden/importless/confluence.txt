∀ γ δ ε. { config = γ; lib = δ; pkgs = ε } -> { config = { systemd = { services = { confluence = { after = [String]; description = String; environment = { CATALINA_OPTS = ∀ α. α; CONF_USER = ∀ α. α; JAVA_HOME = String }; path = ∀ β. [β]; preStart = String; requires = [String]; serviceConfig = { ExecStart = String; ExecStop = String; Group = ∀ α. α; PrivateTmp = Bool; User = ∀ α. α }; wantedBy = [String] } }; tmpfiles = { rules = [String] } } }; options = { services = { confluence = { catalinaOptions = { default = ∀ β. β; description = String; example = [String]; type = ∀ β. β }; enable = String; group = { default = String; description = String; type = ∀ β. β }; home = { default = String; description = String; type = ∀ β. β }; jrePackage = { default = ∀ β. β; defaultText = String; description = String; type = ∀ β. β }; listenAddress = { default = String; description = String; type = ∀ β. β }; listenPort = { default = Integer; description = String; type = ∀ β. β }; package = { default = ∀ β. β; defaultText = String; description = String; type = ∀ β. β }; proxy = { enable = String; name = { description = String; example = String; type = ∀ α. α }; port = { default = Integer; description = String; example = Integer; type = ∀ α. α }; scheme = { default = String; description = String; example = String; type = ∀ α. α } }; sso = { applicationName = { description = String; example = String; type = ∀ α. α }; applicationPassword = { description = String; type = ∀ α. α }; crowd = { description = String; example = String; type = ∀ α. α }; enable = String; validationInterval = { default = Integer; description = String; example = Integer; type = ∀ α. α } }; user = { default = String; description = String; type = ∀ β. β } } } } }