∀ γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ σ τ υ φ χ ψ ω α1 β1 γ1 δ1.
( γ.lib = δ,
  ε.mountPoint = ζ,
  ε.neededForBoot = η,
  θ.device = ι,
  θ.mountPoint = κ,
  δ.attrNames = λ -> μ,
  δ.concatStringsSep = String -> ν -> String,
  δ.elem = ζ -> [String] -> Bool,
  δ.flatten = ξ -> ο,
  δ.hasPrefix = String -> κ -> Bool,
  δ.imap0 = (π -> λ -> ξ) -> λ -> ξ,
  δ.imap1 = (ρ -> σ -> String) -> τ -> ν,
  δ.isAttrs = λ -> Bool,
  δ.isList = λ -> Bool,
  δ.listToAttrs = ο -> υ,
  δ.map = (String -> ξ) -> μ -> ξ,
  δ.nameValuePair = String -> φ -> ξ,
  δ.removePrefix = String -> χ -> ψ,
  δ.replaceChars = [String] -> [String] -> ψ -> ω,
  δ.throw = String -> String,
  δ.types = α1,
  α1.shellPackage = β1,
  β1.check = String -> Bool,
  γ1.package = δ1,
  δ1.check = String -> Bool
) =>
γ ->
{ escapeSystemdPath = χ -> ω;
  fsBefore = ∀ α β. (α.mountPoint = β) => α -> θ -> Bool;
  fsNeededForBoot = ε -> Bool;
  genJqSecretsReplacementSnippet = ∀ α. λ -> α -> String;
  genJqSecretsReplacementSnippet' = ∀ α β. α -> λ -> β -> String;
  pathsNeededForBoot = [String];
  recursiveGetAttrWithJqPrefix = ∀ α. λ -> α -> υ;
  toShellPath = String -> String;
}