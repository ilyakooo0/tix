∀ δ ε ζ. { config = δ; lib = ε; pkgs = ζ } -> { config = { environment = { systemPackages = ∀ γ. [γ] }; services = { epmd = { enable = Bool }; rabbitmq = { configItems = { listeners.tcp.1 = String } } }; systemd = { services = { rabbitmq = { after = [String]; description = String; environment = { RABBITMQ_ADVANCED_CONFIG_FILE = ∀ α. α; RABBITMQ_CONFIG_FILE = ∀ α. α; RABBITMQ_ENABLED_PLUGINS_FILE = String; RABBITMQ_LOGS = String; RABBITMQ_MNESIA_BASE = String; RABBITMQ_PLUGINS_DIR = ∀ α. α; SYS_PREFIX = String }; path = ∀ β. [β]; preStart = String; serviceConfig = { ExecStart = String; ExecStop = String; Group = String; LimitNOFILE = String; LogsDirectory = String; NotifyAccess = String; Restart = String; RestartSec = String; TimeoutStartSec = String; Type = String; UMask = String; User = String; WorkingDirectory = ∀ α. α }; wantedBy = [String]; wants = [String] } } }; users = { groups = { rabbitmq = { gid = ∀ β. β } }; users = { rabbitmq = { createHome = Bool; description = String; group = String; home = String; uid = ∀ β. β } } } }; options = { services = { rabbitmq = { config = { default = String; description = String; type = ∀ β. β }; configItems = { default = {  }; description = String; example = String; type = ∀ β. β }; cookie = { default = String; description = String; type = ∀ β. β }; dataDir = { default = String; description = String; type = ∀ β. β }; enable = { default = Bool; description = String; type = ∀ β. β }; listenAddress = { default = String; description = String; example = String; type = ∀ β. β }; package = { default = ∀ β. β; defaultText = String; description = String; type = ∀ β. β }; pluginDirs = { default = ∀ β. β; description = String; type = ∀ β. β }; plugins = { default = ∀ β. β; description = String; type = ∀ β. β }; port = { default = Integer; description = String; type = ∀ β. β } } } } }