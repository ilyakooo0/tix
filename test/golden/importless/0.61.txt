∀ α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ σ τ.
( α.cc = β,
  α.lib = γ,
  α.mkDerivation =
    { CXXFLAGS = δ;
      buildInputs = [ε];
      cmakeFlags = [String];
      meta =
        { description = String;
          homepage = String;
          license = ζ;
          longDescription = String;
          maintainers = [η];
          platforms = θ;
        };
      name = String;
      nativeBuildInputs = [ι];
      outputs = [String];
      patches = [Path];
      propagatedBuildInputs = [κ];
      src = λ;
    } ->
    μ,
  ν.licenses = ξ,
  ν.maintainers = ο,
  ν.optional = Bool -> Null -> [κ],
  ν.optionals = Bool -> [π] -> [κ],
  ν.platforms = ρ,
  ν.ttuegel = η,
  γ.optionalString = σ -> String -> δ,
  β.isClang = σ,
  ξ.gpl2 = ζ,
  ρ.all = θ
) =>
{ cairo = π;
  cmake = ι;
  curl = π;
  fetchpatch = {name = String; sha256 = String; url = String;} -> Path;
  fetchurl = {sha256 = String; url = String;} -> λ;
  fontconfig = κ;
  freetype = κ;
  gobject-introspection = Null;
  introspectionSupport = Bool;
  lcms = π;
  lib = ν;
  libiconv = ε;
  libintl = ε;
  libjpeg = κ;
  minimal = Bool;
  ninja = ι;
  openjpeg = κ;
  pkgconfig = ι;
  poppler_data = τ;
  qt5Support = Bool;
  qtbase = Null;
  stdenv = α;
  suffix = String;
  utils = Bool;
  withData = Bool;
  zlib = κ;
} ->
μ