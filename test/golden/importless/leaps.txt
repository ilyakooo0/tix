[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 43, sourceColumn = Pos 15}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 43, sourceColumn = Pos 36}},KeyNotPresent "ids"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 43, sourceColumn = Pos 15}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 43, sourceColumn = Pos 36}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 27}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 48}},KeyNotPresent "ids"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 27}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 48}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 32, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 32, sourceColumn = Pos 27}},KeyNotPresent "enable"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 32, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 32, sourceColumn = Pos 27}},UnexpectedType {expected = NAttrSet (fromList []), got = NBrujin (DeBrujin 0 0)}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 32, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 32, sourceColumn = Pos 16}},UndefinedVariable "mkIf"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 26}},KeyNotPresent "path"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 26}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 15}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 21}},UndefinedVariable "types"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 24, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 24, sourceColumn = Pos 22}},UndefinedVariable "mkOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 25}},KeyNotPresent "str"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 25}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 11}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 21}},UndefinedVariable "types"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 18, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 18, sourceColumn = Pos 25}},UndefinedVariable "mkOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 14, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 14, sourceColumn = Pos 25}},KeyNotPresent "int"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 14, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 14, sourceColumn = Pos 25}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 7}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 14, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 14, sourceColumn = Pos 21}},UndefinedVariable "types"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 13, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 13, sourceColumn = Pos 22}},UndefinedVariable "mkOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 12, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 12, sourceColumn = Pos 30}},UndefinedVariable "mkEnableOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 6, sourceColumn = Pos 9}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 6, sourceColumn = Pos 30}},KeyNotPresent "services"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 6, sourceColumn = Pos 9}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 6, sourceColumn = Pos 30}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 3, sourceColumn = Pos 1}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 63, sourceColumn = Pos 1}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 2})]
[]
âˆ€ Î² Î³ Î´. { config = Î²; lib = Î³; pkgs = Î´ } -> { config = { systemd = { services = { leaps = { after = [String]; description = String; serviceConfig = { ExecStart = String; Group = String; PrivateTmp = Bool; Restart = String; User = String; WorkingDirectory = String }; wantedBy = [String] } } }; users = { groups = { leaps = { gid = âˆ€ Î±. Î± } }; users = { leaps = { createHome = Bool; description = String; group = String; home = String; uid = âˆ€ Î±. Î± } } } }; options = { services = { leaps = { address = { default = String; description = String; example = String; type = âˆ€ Î±. Î± }; enable = String; path = { default = String; description = String; type = âˆ€ Î±. Î± }; port = { default = Integer; description = String; type = âˆ€ Î±. Î± } } } } }