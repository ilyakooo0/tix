[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 27, sourceColumn = Pos 33}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 27, sourceColumn = Pos 90}},KeyNotPresent "pkgsi686Linux"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 27, sourceColumn = Pos 33}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 27, sourceColumn = Pos 90}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 2}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 23, sourceColumn = Pos 32}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 23, sourceColumn = Pos 41}},UndefinedVariable "singleton"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 19, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 19, sourceColumn = Pos 16}},UndefinedVariable "mkIf"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 13, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 13, sourceColumn = Pos 55}},KeyNotPresent "boot"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 13, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 13, sourceColumn = Pos 55}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 31}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 38}},UndefinedVariable "drivers"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 17}},UndefinedVariable "elem"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 49}},KeyNotPresent "services"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 49}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 5, sourceColumn = Pos 1}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 41, sourceColumn = Pos 1}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 1})]
[CanNotUnify (NBrujin (DeBrujin 0 0)) (NAttrSet (fromList [("boot",NAttrSet (fromList [("blacklistedKernelModules",List (NAtomic String)),("extraModulePackages",List (NBrujin (DeBrujin 0 0)))])),("environment",NAttrSet (fromList [("etc",NAttrSet (fromList [("ati",NAttrSet (fromList [("source",NAtomic String)]))])),("systemPackages",List (NBrujin (DeBrujin 0 0)))])),("hardware",NAttrSet (fromList [("opengl",NAttrSet (fromList [("package",NBrujin (DeBrujin 0 0)),("package32",NAttrSet (fromList [("kernel",NAtomic Null),("libsOnly",NAtomic Bool)])),("setLdLibraryPath",NAtomic Bool)]))])),("nixpkgs",NAttrSet (fromList [("config",NAttrSet (fromList [("xorg",NAttrSet (fromList [("abiCompat",NAtomic String)]))]))])),("services",NAttrSet (fromList [("xserver",NAttrSet (fromList [("drivers",NAttrSet (fromList [("display",NAtomic Bool),("modules",List (NBrujin (DeBrujin 0 0))),("name",NAtomic String)]))]))]))]) :-> NTypeVariable 15),CanNotUnify (NAtomic String) (NTypeVariable 6 :-> NTypeVariable 7)]
âˆ€ Î³ Î´ Îµ. { config = Î³; lib = Î´; pkgs = Îµ } -> { config = { boot = { blacklistedKernelModules = [String]; extraModulePackages = [âˆ€ Î². Î²] }; environment = { etc = { ati = { source = String } }; systemPackages = [âˆ€ Î². Î²] }; hardware = { opengl = { package = âˆ€ Î². Î²; package32 = { kernel = Null; libsOnly = Bool }; setLdLibraryPath = Bool } }; nixpkgs = { config = { xorg = { abiCompat = String } } }; services = { xserver = { drivers = { display = Bool; modules = [âˆ€ Î±. Î±]; name = String } } } } }