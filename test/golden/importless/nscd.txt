∀ α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ σ τ υ φ χ ψ ω α1 β1 γ1 δ1 ε1 ζ1 η1 θ1 ι1 κ1
λ1 μ1 ν1.
( α.config = β,
  α.lib = γ,
  α.pkgs = δ,
  β.nscd = ε,
  β.path = ζ,
  β.source = η,
  γ.builtins = θ,
  γ.mkIf =
    ι ->
    { environment = {etc = {nscd.conf = {text = κ;};};};
      systemd =
        { services =
            { nscd =
                { description = String;
                  environment = {LD_LIBRARY_PATH = ζ;};
                  restartTriggers = [η];
                  serviceConfig =
                    { DynamicUser = Bool;
                      ExecReload = [String];
                      ExecStart = String;
                      PIDFile = String;
                      Restart = String;
                      RuntimeDirectory = String;
                      Type = String;
                    };
                  wantedBy = [String];
                };
            };
        };
    } ->
    λ,
  γ.mkOption = {default = μ; description = String; type = ν;} -> ξ,
  γ.types = ο,
  δ.bin = π,
  δ.libc = String,
  ρ.nssModules = β,
  σ.system = ρ,
  τ.hostPlatform = δ,
  υ.stdenv = τ,
  φ.libc = δ,
  χ.cc = φ,
  ψ.stdenv = χ,
  ω.glibc = δ,
  ε.config = κ,
  ε.enable = ι,
  α1.services = β,
  β1.hosts = β,
  γ1.etc = β1,
  δ1.environment = γ1,
  ε1.nsswitch.conf = β,
  ζ1.etc = ε1,
  η1.environment = ζ1,
  θ1.nscd.conf = β,
  ι1.etc = θ1,
  κ1.environment = ι1,
  θ.readFile = Path -> μ,
  ο.lines = ν,
  λ1.bool = μ1
) =>
α -> {config = λ; options = {services = {nscd = {config = ξ; enable = ν1;};};};}