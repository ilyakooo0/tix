∀ α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ σ τ υ φ χ ψ ω α1 β2 γ3 δ4 ε5 ζ6 η7 θ8 ι9 κ10
λ11 μ12 ν13.
( α.config = β,
  α.lib = γ,
  α.pkgs = δ,
  β.nscd = ε,
  β.path = ζ,
  β.source = η,
  γ.builtins = θ,
  γ.mkIf =
    ι ->
    { environment = {etc = {nscd.conf = {text = κ;};};};
      systemd =
        { services =
            { nscd =
                { description = String;
                  environment = {LD_LIBRARY_PATH = ζ;};
                  restartTriggers = [η];
                  serviceConfig =
                    { DynamicUser = Bool;
                      ExecReload = [String];
                      ExecStart = String;
                      PIDFile = String;
                      Restart = String;
                      RuntimeDirectory = String;
                      Type = String;
                    };
                  wantedBy = [String];
                };
            };
        };
    } ->
    λ,
  γ.mkOption = {default = μ; description = String; type = ν;} -> ξ,
  γ.types = ο,
  δ.bin = π,
  δ.libc = String,
  ρ.nssModules = β,
  σ.system = ρ,
  τ.hostPlatform = δ,
  υ.stdenv = τ,
  φ.libc = δ,
  χ.cc = φ,
  ψ.stdenv = χ,
  ω.glibc = δ,
  ε.config = κ,
  ε.enable = ι,
  α1.services = β,
  β2.hosts = β,
  γ3.etc = β2,
  δ4.environment = γ3,
  ε5.nsswitch.conf = β,
  ζ6.etc = ε5,
  η7.environment = ζ6,
  θ8.nscd.conf = β,
  ι9.etc = θ8,
  κ10.environment = ι9,
  θ.readFile = Path -> μ,
  ο.lines = ν,
  λ11.bool = μ12
) =>
α ->
{config = λ; options = {services = {nscd = {config = ξ; enable = ν13;};};};}