∀ α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ σ τ υ φ χ ψ ω α1 β1 γ1 δ1 ε1 ζ1 η1 θ1 ι1 κ1
λ1 μ1 ν1.
( α.config = β,
  α.lib = γ,
  α.pkgs = δ,
  β.environment = ε,
  β.services = ζ,
  β.system = η,
  γ.builtins = θ,
  γ.mkIf =
    ι ->
    { environment = {etc = {nscd.conf = {text = κ;};};};
      systemd =
        { services =
            { nscd =
                { description = String;
                  environment = {LD_LIBRARY_PATH = λ;};
                  restartTriggers = [μ];
                  serviceConfig =
                    { DynamicUser = Bool;
                      ExecReload = [String];
                      ExecStart = String;
                      PIDFile = String;
                      Restart = String;
                      RuntimeDirectory = String;
                      Type = String;
                    };
                  wantedBy = [String];
                };
            };
        };
    } ->
    ν,
  γ.mkOption = {default = ξ; description = String; type = ο;} -> π,
  γ.types = ρ,
  δ.glibc = σ,
  δ.stdenv = τ,
  η.nssModules = υ,
  υ.path = λ,
  τ.hostPlatform = φ,
  φ.libc = String,
  χ.cc = ψ,
  ψ.libc = ω,
  ω.bin = α1,
  σ.bin = α1,
  ζ.nscd = β1,
  β1.config = κ,
  β1.enable = ι,
  ε.etc = γ1,
  γ1.hosts = δ1,
  δ1.source = μ,
  ε1.etc = ζ1,
  ζ1.nsswitch.conf = η1,
  η1.source = μ,
  θ1.etc = ι1,
  ι1.nscd.conf = κ1,
  κ1.source = μ,
  θ.readFile = String -> ξ,
  ρ.lines = ο,
  λ1.bool = μ1
) =>
α -> {config = ν; options = {services = {nscd = {config = π; enable = ν1;};};};}