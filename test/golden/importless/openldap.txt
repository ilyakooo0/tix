∀ δ ε ζ. { config = δ; lib = ε; pkgs = ζ } -> { config = { assertions = [{ assertion = Bool; message = String }]; environment = { systemPackages = [∀ β. β] }; systemd = { services = { openldap = { after = [String]; description = String; preStart = String; serviceConfig = { ExecStart = String }; wantedBy = [String] } } }; users = { groups = { openldap = { gid = ∀ α. α; name = ∀ α. α } }; users = { openldap = { group = ∀ α. α; name = ∀ α. α; uid = ∀ α. α } } } }; meta = { maintainers = ∀ γ. [γ] }; options = { services = { openldap = { configDir = { default = Null; description = String; example = String; type = ∀ α. α }; dataDir = { default = String; description = String; type = ∀ α. α }; database = { default = String; description = String; type = ∀ α. α }; declarativeContents = { default = Null; description = String; example = String; type = ∀ α. α }; defaultSchemas = { default = Bool; description = String; type = ∀ α. α }; enable = { default = Bool; description = String; type = ∀ α. α }; extraConfig = { default = String; description = String; example = String; type = ∀ α. α }; extraDatabaseConfig = { default = String; description = String; example = String; type = ∀ α. α }; group = { default = String; description = String; type = ∀ α. α }; logLevel = { default = String; description = String; example = String; type = ∀ α. α }; package = { default = ∀ α. α; description = String; type = ∀ α. α }; rootdn = { description = String; example = String; type = ∀ α. α }; rootpw = { default = Null; description = String; type = ∀ α. α }; rootpwFile = { default = Null; description = String; type = ∀ α. α }; suffix = { description = String; example = String; type = ∀ α. α }; urlList = { default = [String]; description = String; example = [String]; type = ∀ α. α }; user = { default = String; description = String; type = ∀ α. α } } } } }