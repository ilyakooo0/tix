[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 28, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 28, sourceColumn = Pos 36}},KeyNotPresent "lib"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 28, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 28, sourceColumn = Pos 36}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 22})]
[]
âˆ€ Î³ Î´ Îµ Î¶ Î·. { HUnit = Î³; QuickCheck = Î³; aeson = Î³; array = Î³; attoparsec = Î³; base = Î³; binary = Î³; bytestring = Î³; containers = Î³; deepseq = Î³; directory = Î³; dlist = Î³; fetchgit = { rev = String; sha256 = String; url = String } -> Î´; ghc-prim = Î³; ghcjs-prim = Î³; hashable = Î³; integer-gmp = Î³; mkDerivation = { description = String; homepage = String; libraryHaskellDepends = [Îµ]; license = âˆ€ Î±. Î±; pname = String; src = { rev = String; sha256 = String; url = String }; testHaskellDepends = [Î³]; version = String } -> Î¶; primitive = Î³; quickcheck-unicode = Î³; random = Î³; scientific = Î³; stdenv = Î·; test-framework = Î³; test-framework-hunit = Î³; test-framework-quickcheck2 = Î³; text = Î³; time = Î³; transformers = Î³; unordered-containers = Î³; vector = Î³ } -> { description = String; homepage = String; libraryHaskellDepends = [Î³]; license = âˆ€ Î². Î²; pname = String; src = { rev = String; sha256 = String; url = String }; testHaskellDepends = [Î³]; version = String }