[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 38}},KeyNotPresent "lib"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 38}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 6})]
[]
âˆ€ Î³ Î´ Îµ Î¶. { base = Î³; containers = Î³; fetchgit = { fetchSubmodules = Bool; rev = String; sha256 = String; url = String } -> Î´; mkDerivation = { description = String; executableHaskellDepends = [Î³]; isExecutable = Bool; isLibrary = Bool; libraryHaskellDepends = [Î³]; license = âˆ€ Î±. Î±; pname = String; src = { fetchSubmodules = Bool; rev = String; sha256 = String; url = String }; version = String } -> Îµ; optparse-applicative = Î³; parsec = Î³; stdenv = Î¶; text = Î³ } -> { description = String; executableHaskellDepends = [Î³]; isExecutable = Bool; isLibrary = Bool; libraryHaskellDepends = [Î³]; license = âˆ€ Î². Î²; pname = String; src = { fetchSubmodules = Bool; rev = String; sha256 = String; url = String }; version = String }