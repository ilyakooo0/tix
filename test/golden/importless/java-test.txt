[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 25}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 43}},KeyNotPresent "isDarwin"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 25}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 43}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 3}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 6}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 24}},KeyNotPresent "optionalString"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 6}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 24}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 4})]
[CanNotUnify (NAttrSet (fromList [])) (NAtomic String :-> NTypeVariable 19),CanNotUnify (NAtomic String) (NAttrSet (fromList []) :-> NTypeVariable 14),CanNotUnify (NAtomic String) (NAtomic String :-> NTypeVariable 12)]
âˆ€ Î± Î² Î³ Î´ Îµ Î¶ Î· Î¸ Î¹ Îº Î». { bazel = Î±; bazel-examples = Î²; bazelTest = { bazelPkg = Î±; bazelScript = String; buildInputs = [Î³]; name = String } -> Î´; distDir = Îµ; gccStdenv = Î¶; lib = Î·; openjdk8 = Î³; runLocal = String -> Î¸; runtimeShell = Î¹; writeScript = String -> Îº; writeText = Î» } -> { bazelPkg = Î±; bazelScript = String; buildInputs = [Î³]; name = String }