∀ δ ε ζ. { config = δ; lib = ε; pkgs = ζ } -> { config = { environment = { systemPackages = ∀ γ. [γ] }; systemd = { services = { supybot = { after = [String]; description = String; documentation = [String]; preStart = String; serviceConfig = { CapabilityBoundingSet = String; ExecStart = String; Group = String; LockPersonality = Bool; MemoryDenyWriteExecute = Bool; NoNewPrivileges = Bool; PIDFile = String; PrivateDevices = Bool; PrivateMounts = Bool; PrivateTmp = Bool; ProtectControlGroups = Bool; ProtectHome = Bool; ProtectHostname = Bool; ProtectKernelModules = Bool; ProtectKernelTunables = Bool; ProtectSystem = String; RemoveIPC = Bool; Restart = String; RestrictAddressFamilies = [String]; RestrictNamespaces = Bool; RestrictRealtime = Bool; RestrictSUIDSGID = Bool; StartLimitBurst = String; StartLimitInterval = String; StateDirectory = String; SystemCallArchitectures = String; UMask = String; User = String }; wantedBy = [String] } }; tmpfiles = { rules = [String] } }; users = { groups = { supybot = { gid = ∀ α. α } }; users = { supybot = { description = String; group = String; home = ∀ α. α; isSystemUser = Bool; uid = ∀ α. α } } } }; options = { services = { supybot = { configFile = { description = String; type = ∀ α. α }; enable = { default = Bool; description = String; type = ∀ α. α }; extraPackages = { default = ∀ α β. α -> β; description = String; example = String }; plugins = { default = {  }; description = String; example = String; type = ∀ α. α }; stateDir = { default = String; defaultText = String; description = String; type = ∀ α. α } } } } }