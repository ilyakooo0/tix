∀ ι κ λ. { config = ι; lib = κ; pkgs = λ } -> { config = [{ environment = { extraInit = String; sessionVariables = { GNOME_SESSION_DEBUG = String; NIX_GSETTINGS_OVERRIDES_DIR = String }; systemPackages = ∀ η. η }; nixpkgs = { config = { vim = { gui = String } } }; services = { flatpak = { guiPackages = ∀ ζ. [ζ] }; gnome3 = { core-os-services = { enable = Bool }; core-shell = { enable = Bool }; core-utilities = { enable = Bool } }; xserver = { displayManager = { sessionPackages = ∀ ε. [ε] } } }; system = { nixos-generate-config = { desktopConfiguration = String } } }]; meta = { maintainers = ∀ θ. θ }; options = { environment = { gnome3 = { excludePackages = { default = ∀ ζ. ζ; description = String; example = String; type = ∀ ζ. ζ } } }; services = { gnome3 = { core-os-services = { enable = String }; core-shell = { enable = String }; core-utilities = { enable = String }; experimental-features = { realtime-scheduling = { default = Bool; description = String; type = ∀ ε. ε } }; games = { enable = String } }; xserver = { desktopManager = { gnome3 = { debug = String; enable = { default = Bool; description = String; type = ∀ γ. γ }; extraGSettingsOverridePackages = { default = ∀ γ. γ; description = String; type = ∀ γ. γ }; extraGSettingsOverrides = { default = String; description = String; type = ∀ γ. γ }; favoriteAppsOverride = { default = String; description = String; example = String; internal = Bool; type = ∀ γ. γ }; flashback = { customSessions = { default = ∀ β. β; description = String; type = { options = { wmCommand = { description = String; example = String; type = ∀ α. α }; wmLabel = { description = String; example = String; type = ∀ α. α }; wmName = { description = String; example = String; type = ∀ α. α } } } }; enableMetacity = String }; sessionPath = { apply = ∀ γ δ. [γ] -> [δ]; default = ∀ γ. γ; description = String; example = String } } } } } } }