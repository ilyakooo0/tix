[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 173, sourceColumn = Pos 27}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 173, sourceColumn = Pos 77}},KeyNotPresent "environment"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 173, sourceColumn = Pos 27}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 173, sourceColumn = Pos 77}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 93, sourceColumn = Pos 27}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 93, sourceColumn = Pos 77}},KeyNotPresent "environment"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 93, sourceColumn = Pos 27}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 93, sourceColumn = Pos 77}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 70, sourceColumn = Pos 36}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 70, sourceColumn = Pos 45}},KeyNotPresent "sogo"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 70, sourceColumn = Pos 36}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 70, sourceColumn = Pos 45}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 1}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 69, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 69, sourceColumn = Pos 27}},KeyNotPresent "enable"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 69, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 69, sourceColumn = Pos 27}},UnexpectedType {expected = NAttrSet (fromList []), got = NBrujin (DeBrujin 0 0)}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 69, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 69, sourceColumn = Pos 16}},UndefinedVariable "mkIf"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 64, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 64, sourceColumn = Pos 19}},UndefinedVariable "lines"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 62, sourceColumn = Pos 19}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 62, sourceColumn = Pos 27}},UndefinedVariable "mkOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 55, sourceColumn = Pos 22}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 55, sourceColumn = Pos 25}},UndefinedVariable "str"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 55, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 55, sourceColumn = Pos 21}},UndefinedVariable "attrsOf"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 47, sourceColumn = Pos 22}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 47, sourceColumn = Pos 30}},UndefinedVariable "mkOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 43, sourceColumn = Pos 21}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 43, sourceColumn = Pos 24}},UndefinedVariable "str"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 43, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 43, sourceColumn = Pos 20}},UndefinedVariable "nullOr"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 41, sourceColumn = Pos 23}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 41, sourceColumn = Pos 31}},UndefinedVariable "mkOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 37, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 37, sourceColumn = Pos 17}},UndefinedVariable "str"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 24}},UndefinedVariable "mkOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 31, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 31, sourceColumn = Pos 17}},UndefinedVariable "str"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 29, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 29, sourceColumn = Pos 24}},UndefinedVariable "mkOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 25, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 25, sourceColumn = Pos 17}},UndefinedVariable "str"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 23, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 23, sourceColumn = Pos 25}},UndefinedVariable "mkOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 21, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 21, sourceColumn = Pos 28}},UndefinedVariable "mkEnableOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 27}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 67, sourceColumn = Pos 4}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 7}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 32}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 37}},UndefinedVariable "types"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 4, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 4, sourceColumn = Pos 38}},KeyNotPresent "writeShellScriptBin"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 4, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 4, sourceColumn = Pos 38}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 1}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 2, sourceColumn = Pos 9}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 2, sourceColumn = Pos 29}},KeyNotPresent "services"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 2, sourceColumn = Pos 9}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 2, sourceColumn = Pos 29}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 1, sourceColumn = Pos 29}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 272, sourceColumn = Pos 1}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 2})]
[CanNotUnify (NAtomic String) (NAtomic String :-> NTypeVariable 6)]
âˆ€ Î³ Î´ Îµ. { config = Î³; lib = Î´; pkgs = Îµ } -> { config = { environment = { etc = { sogo/sogo.conf.raw = { text = String } }; systemPackages = âˆ€ Î². [Î²] }; systemd = { services = { sogo = { after = [String]; description = String; environment = { LDAPTLS_CACERT = String }; restartTriggers = âˆ€ Î±. [Î±]; serviceConfig = { CapabilityBoundingSet = String; ExecStart = String; ExecStartPre = String; Group = String; LockPersonality = Bool; MemoryDenyWriteExecute = Bool; NoNewPrivileges = Bool; PrivateDevices = Bool; PrivateMounts = Bool; PrivateTmp = Bool; PrivateUsers = Bool; ProtectControlGroups = Bool; ProtectHome = Bool; ProtectKernelModules = Bool; ProtectKernelTunables = Bool; ProtectSystem = String; RestrictAddressFamilies = String; RestrictRealtime = Bool; RuntimeDirectory = String; StateDirectory = String; SystemCallArchitectures = String; SystemCallFilter = String; Type = String; User = String }; wantedBy = [String] }; sogo-ealarms = { after = [String]; description = String; restartTriggers = âˆ€ Î±. [Î±]; serviceConfig = { CapabilityBoundingSet = String; ExecStart = String; Group = String; LockPersonality = Bool; MemoryDenyWriteExecute = Bool; NoNewPrivileges = Bool; PrivateDevices = Bool; PrivateMounts = Bool; PrivateTmp = Bool; PrivateUsers = Bool; ProtectControlGroups = Bool; ProtectHome = Bool; ProtectKernelModules = Bool; ProtectKernelTunables = Bool; ProtectSystem = String; RestrictAddressFamilies = String; RestrictRealtime = Bool; StateDirectory = String; SystemCallArchitectures = String; SystemCallFilter = String; Type = String; User = String }; startAt = [String] }; sogo-tmpwatch = { description = String; script = String; serviceConfig = { CapabilityBoundingSet = String; Group = String; LockPersonality = Bool; NoNewPrivileges = Bool; PrivateDevices = Bool; PrivateMounts = Bool; PrivateNetwork = Bool; PrivateTmp = Bool; PrivateUsers = Bool; ProtectControlGroups = Bool; ProtectHome = Bool; ProtectKernelModules = Bool; ProtectKernelTunables = Bool; ProtectSystem = String; RestrictAddressFamilies = String; RestrictRealtime = Bool; StateDirectory = String; SystemCallArchitectures = String; SystemCallFilter = String; Type = String; User = String }; startAt = [String] } } }; users = { groups = { sogo = {  } }; users = { sogo = { description = String; group = String; isSystemUser = Bool } } } }; options = { services = { sogo = { configReplaces = { default = {  }; description = String; example = { LDAP_BINDPW = String }; type = âˆ€ Î±. Î± }; ealarmsCredFile = { default = Null; description = String; type = âˆ€ Î±. Î± }; enable = String; extraConfig = { default = String; description = String; type = âˆ€ Î±. Î± }; language = { default = String; description = String; type = âˆ€ Î±. Î± }; timezone = { description = String; example = String; type = âˆ€ Î±. Î± }; vhostName = { default = String; description = String; type = âˆ€ Î±. Î± } } } } }