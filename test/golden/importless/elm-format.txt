[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 39, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 39, sourceColumn = Pos 37}},KeyNotPresent "lib"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 39, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 39, sourceColumn = Pos 37}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 22})]
[]
âˆ€ Î³ Î´ Îµ Î¶. { HUnit = Î³; QuickCheck = Î³; ansi-terminal = Î³; ansi-wl-pprint = Î³; base = Î³; binary = Î³; bytestring = Î³; cmark = Î³; containers = Î³; directory = Î³; fetchgit = { rev = String; sha256 = String; url = String } -> Î´; filepath = Î³; free = Î³; indents = Î³; json = Î³; mkDerivation = { description = String; doHaddock = Bool; executableHaskellDepends = [Î³]; homepage = String; isExecutable = Bool; isLibrary = Bool; libraryHaskellDepends = [Î³]; license = âˆ€ Î±. Î±; pname = String; postPatch = String; src = { rev = String; sha256 = String; url = String }; testHaskellDepends = [Î³]; version = String } -> Îµ; mtl = Î³; optparse-applicative = Î³; parsec = Î³; process = Î³; quickcheck-io = Î³; split = Î³; stdenv = Î¶; tasty = Î³; tasty-golden = Î³; tasty-hunit = Î³; tasty-quickcheck = Î³; text = Î³ } -> { description = String; doHaddock = Bool; executableHaskellDepends = [Î³]; homepage = String; isExecutable = Bool; isLibrary = Bool; libraryHaskellDepends = [Î³]; license = âˆ€ Î². Î²; pname = String; postPatch = String; src = { rev = String; sha256 = String; url = String }; testHaskellDepends = [Î³]; version = String }