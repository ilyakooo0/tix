[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 30}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 46}},KeyNotPresent "withUtempter"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 30}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 46}},UnexpectedType {expected = NAttrSet (fromList []), got = NBrujin (DeBrujin 0 0)}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 25}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 29}},UndefinedVariable "mkIf"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 31, sourceColumn = Pos 47}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 31, sourceColumn = Pos 51}},UndefinedVariable "mosh"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 31, sourceColumn = Pos 34}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 31, sourceColumn = Pos 53}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 2}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 27}},KeyNotPresent "enable"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 27}},UnexpectedType {expected = NAttrSet (fromList []), got = NBrujin (DeBrujin 0 0)}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 16}},UndefinedVariable "mkIf"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 28}},KeyNotPresent "types"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 28}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 1}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 19, sourceColumn = Pos 20}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 19, sourceColumn = Pos 28}},UndefinedVariable "mkOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 17, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 17, sourceColumn = Pos 28}},KeyNotPresent "types"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 17, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 17, sourceColumn = Pos 28}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 1}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 12, sourceColumn = Pos 14}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 12, sourceColumn = Pos 22}},UndefinedVariable "mkOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 10}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 30}},KeyNotPresent "programs"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 10}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 30}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 3, sourceColumn = Pos 1}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 44, sourceColumn = Pos 1}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 1})]
[]
âˆ€ Î³ Î´ Îµ. { config = Î³; lib = Î´; pkgs = Îµ } -> { config = { environment = { systemPackages = âˆ€ Î². [Î²] }; networking = { firewall = { allowedUDPPortRanges = [{ from = Integer; to = Integer }] } }; security = { wrappers = { utempter = { group = String; owner = String; setgid = Bool; setuid = Bool; source = String } } } }; options = { programs = { mosh = { enable = { default = Bool; description = String; type = âˆ€ Î±. Î± }; withUtempter = { default = Bool; description = String; type = âˆ€ Î±. Î± } } } } }