[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 28, sourceColumn = Pos 34}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 28, sourceColumn = Pos 61}},KeyNotPresent "mwprocapture"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 28, sourceColumn = Pos 34}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 28, sourceColumn = Pos 61}},UnexpectedType {expected = NAttrSet (fromList []), got = NBrujin (DeBrujin 0 0)}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 36}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 63}},KeyNotPresent "mwprocapture"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 36}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 26, sourceColumn = Pos 63}},UnexpectedType {expected = NAttrSet (fromList []), got = NBrujin (DeBrujin 0 0)}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 34}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 63}},KeyNotPresent "kernel"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 34}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 63}},UnexpectedType {expected = NAttrSet (fromList []), got = NBrujin (DeBrujin 0 0)}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 19}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 33}},UndefinedVariable "versionAtLeast"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 19, sourceColumn = Pos 18}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 19, sourceColumn = Pos 27}},UndefinedVariable "singleton"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 17, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 17, sourceColumn = Pos 27}},KeyNotPresent "enable"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 17, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 17, sourceColumn = Pos 27}},UnexpectedType {expected = NAttrSet (fromList []), got = NBrujin (DeBrujin 0 0)}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 17, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 17, sourceColumn = Pos 16}},UndefinedVariable "mkIf"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 15, sourceColumn = Pos 42}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 15, sourceColumn = Pos 56}},UndefinedVariable "mkEnableOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 20}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 46}},KeyNotPresent "boot"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 20}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 46}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 9}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 37}},KeyNotPresent "hardware"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 9}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 37}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 3, sourceColumn = Pos 1}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 62, sourceColumn = Pos 1}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 1})]
[]
âˆ€ Î² Î³. { config = Î²; lib = Î³ } -> { config = { assertions = { assertion = String; message = String }; boot = { extraModprobeConfig = String; extraModulePackages = âˆ€ Î±. [Î±]; kernelModules = [String] }; environment = { systemPackages = âˆ€ Î±. [Î±] } }; options = { hardware = { mwProCapture = { enable = String } } } }