[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 111, sourceColumn = Pos 11}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 111, sourceColumn = Pos 16}},UndefinedVariable "throw"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 104, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 104, sourceColumn = Pos 43}},KeyNotPresent "boot"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 104, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 104, sourceColumn = Pos 43}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 102, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 102, sourceColumn = Pos 22}},KeyNotPresent "enable"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 102, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 102, sourceColumn = Pos 22}},UnexpectedType {expected = NAttrSet (fromList []), got = NBrujin (DeBrujin 0 0)}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 102, sourceColumn = Pos 6}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 102, sourceColumn = Pos 10}},UndefinedVariable "mkIf"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 86, sourceColumn = Pos 23}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 86, sourceColumn = Pos 33}},KeyNotPresent "params"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 86, sourceColumn = Pos 23}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 86, sourceColumn = Pos 33}},UnexpectedType {expected = NAttrSet (fromList []), got = NBrujin (DeBrujin 0 0)}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 83, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 83, sourceColumn = Pos 22}},KeyNotPresent "enable"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 83, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 83, sourceColumn = Pos 22}},UnexpectedType {expected = NAttrSet (fromList []), got = NBrujin (DeBrujin 0 0)}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 83, sourceColumn = Pos 6}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 83, sourceColumn = Pos 10}},UndefinedVariable "mkIf"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 82, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 82, sourceColumn = Pos 19}},UndefinedVariable "mkMerge"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 29}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 38}},KeyNotPresent "str"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 29}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 38}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 14}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 29}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 34}},UndefinedVariable "types"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 28}},KeyNotPresent "listOf"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 28}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 12}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 21}},UndefinedVariable "types"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 24}},UndefinedVariable "mkOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 26}},KeyNotPresent "bool"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 26}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 7}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 21}},UndefinedVariable "types"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 18, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 18, sourceColumn = Pos 24}},UndefinedVariable "mkOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 10, sourceColumn = Pos 9}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 10, sourceColumn = Pos 42}},KeyNotPresent "boot"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 10, sourceColumn = Pos 9}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 10, sourceColumn = Pos 42}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 50}},KeyNotPresent "boot"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 50}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 8, sourceColumn = Pos 15}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 8, sourceColumn = Pos 33}},KeyNotPresent "memtest86plus"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 8, sourceColumn = Pos 15}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 8, sourceColumn = Pos 33}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 2}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 5, sourceColumn = Pos 1}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 117, sourceColumn = Pos 1}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 1})]
[CanNotUnify (NAtomic Bool) (NAttrSet (fromList [("boot",NAttrSet (fromList [("loader",NAttrSet (fromList [("grub",NAttrSet (fromList [("extraEntries",NAtomic String),("extraFiles",NAttrSet (fromList [("memtest.bin",NAtomic String)]))]))]))]))]) :-> NTypeVariable 31),CanNotUnify (NBrujin (DeBrujin 0 0)) (NAtomic Bool),CanNotUnify (NBrujin (DeBrujin 0 0)) (NAtomic Bool),CanNotUnify (NAtomic Bool) (NAttrSet (fromList [("assertions",List (NAttrSet (fromList [("assertion",NAtomic Bool),("message",NAtomic String)]))),("boot",NAttrSet (fromList [("loader",NAttrSet (fromList [("grub",NAttrSet (fromList [("extraEntries",NAtomic String),("extraFiles",NAttrSet (fromList [("memtest86.efi",NAtomic String)]))]))]))]))]) :-> NTypeVariable 24),CanNotUnify (NBrujin (DeBrujin 0 0)) (NAtomic Bool)]
âˆ€ Î² Î³ Î´. { config = Î²; lib = Î³; pkgs = Î´ } -> { config = [{ assertions = [{ assertion = Bool; message = String }]; boot = { loader = { grub = { extraEntries = String; extraFiles = { memtest86.efi = String } } } } }]; options = { boot = { loader = { grub = { memtest86 = { enable = { default = Bool; description = String; type = âˆ€ Î±. Î± }; params = { default = âˆ€ Î±. Î±; description = String; example = [String]; type = âˆ€ Î±. Î± } } } } } } }