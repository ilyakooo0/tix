∀ α β γ δ ε ζ η θ ι κ λ μ ν ξ.
( α.cc = β,
  α.lib = γ,
  α.mkDerivation =
    { dontPatchELF = Bool;
      dontStrip = Bool;
      installPhase = String;
      meta =
        { broken = Bool;
          description = String;
          homepage = String;
          license = δ;
          maintainers = [ε];
          platforms = [String];
        };
      nativeBuildInputs = [ζ];
      pname = String;
      preferLocalBuild = Bool;
      rpath = η;
      sourceRoot = String;
      src = θ;
      version = String;
    } ->
    ι,
  κ.makeLibraryPath = [λ] -> η,
  γ.licenses = μ,
  μ.unfree = δ,
  ν.maintainers = ξ,
  ξ.taku0 = ε,
  β.cc = λ
) =>
{ alsaLib = λ;
  atk = λ;
  bzip2 = λ;
  cairo = λ;
  curl = λ;
  debug = Bool;
  expat = λ;
  fetchurl = {sha256 = String; url = String;} -> θ;
  fontconfig = λ;
  freetype = λ;
  gdk-pixbuf = λ;
  glib = λ;
  glibc = λ;
  graphite2 = λ;
  gtk2 = λ;
  harfbuzz = λ;
  lib = κ;
  libICE = λ;
  libSM = λ;
  libX11 = λ;
  libXau = λ;
  libXcomposite = λ;
  libXcursor = λ;
  libXdamage = λ;
  libXdmcp = λ;
  libXext = λ;
  libXfixes = λ;
  libXi = λ;
  libXinerama = λ;
  libXrandr = λ;
  libXrender = λ;
  libXt = λ;
  libXxf86vm = λ;
  libdrm = λ;
  libffi = λ;
  libglvnd = λ;
  libpng = λ;
  libvdpau = λ;
  libxcb = λ;
  libxshmfence = λ;
  nspr = λ;
  nss = λ;
  pango = λ;
  pcre = λ;
  pixman = λ;
  stdenv = α;
  unzip = ζ;
  zlib = λ;
} ->
ι