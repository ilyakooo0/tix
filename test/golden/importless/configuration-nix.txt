∀ ε ζ η θ. { haskellLib = ε; pkgs = ζ } -> η -> { Dust-crypto = ∀ γ. γ; Frames-beam = ∀ γ. γ; GLURaw = ∀ γ. γ -> { libraryHaskellDepends = ∀ α. [α]; librarySystemDepends = ∀ α. α }; HTTP = ∀ γ. γ; LDAP = ∀ γ. γ -> { librarySystemDepends = ∀ α. [α] }; OpenAL = ∀ γ. γ; OpenCL = ∀ γ. γ -> { libraryHaskellDepends = ∀ α. [α]; librarySystemDepends = ∀ α. α }; OpenGLRaw = ∀ γ. γ -> { libraryHaskellDepends = ∀ α. [α]; librarySystemDepends = ∀ α. α; preConfigure = String }; SDL-gfx = ∀ γ. γ -> { librarySystemDepends = ∀ α. [α] }; SDL-image = ∀ γ. γ -> { librarySystemDepends = ∀ α. [α] }; SDL-mixer = ∀ γ. γ -> { librarySystemDepends = ∀ α. [α] }; SDL-mpeg = ∀ γ. γ -> { configureFlags = [String] }; SDL-ttf = ∀ γ. γ -> { librarySystemDepends = ∀ α. [α] }; aeson-gadt-th = String; al = String; amqp = ∀ γ. γ; amqp-conduit = ∀ γ. γ; bindings-GLFW = ∀ γ. γ -> { doCheck = Bool; libraryHaskellDepends = ∀ α. [α]; librarySystemDepends = ∀ α. α }; bitcoin-api = ∀ γ. γ; bitcoin-api-extra = ∀ γ. γ; bitx-bitcoin = ∀ γ. γ; cachix = ∀ γ. γ; cairo = ∀ γ. γ; caramia = ∀ γ. γ; clock = ∀ γ. γ; colour = ∀ γ. γ; concurrent-dns-cache = ∀ γ. γ; configuration-tools = ∀ γ. γ; cuda = ∀ γ. γ -> { configureFlags = [String]; extraLibraries = ∀ α. [α]; preConfigure = String }; cufft = ∀ γ. γ -> { preConfigure = String }; cut-the-crap = ∀ γ. γ -> { postInstall = String }; devtools = { mprelude = ∀ β. β }; digitalocean-kzs = ∀ γ. γ; discount = { markdown = ∀ β. β }; dnssd = { dns_sd = { withLibdnssdCompat = Bool } }; docker = ∀ γ. γ; download = ∀ γ. γ; dyre = Path; either-unwrap = ∀ γ. γ -> { testHaskellDepends = ∀ α. [α] }; epanet-haskell = [String]; epic = ∀ γ. [γ]; fltkhs = ∀ γ. γ -> { librarySystemDepends = ∀ α. [α]; libraryToolDepends = ∀ α. [α] }; foundation = ∀ γ. γ; fsnotify = ∀ γ. γ; futhark = ∀ γ. γ -> { postBuild = String; postInstall = String }; ghc-paths = Path; ghcid = ∀ γ. γ; ghcide = ∀ γ. γ -> { preCheck = String }; gi-dbusmenugtk3 = ∀ γ. γ; gi-gtk-declarative = ∀ γ. γ; ginsu = ∀ γ. γ -> { executableSystemDepends = ∀ α. [α] }; gio = [String]; git-annex = ∀ γ. γ -> { postFixup = String; postPatch = String }; githash = ∀ γ. γ; github-types = ∀ γ. γ; glib = [String]; greenclip = ∀ γ. γ; gtk = [String]; gtk-traymanager = ∀ γ. γ; gtk3 = [String]; gtksourceview2 = ∀ γ. γ; guid = ∀ γ. γ -> { doCheck = Bool; prePatch = String }; hPDB-examples = ∀ γ. γ; hadoop-rpc = ∀ γ. γ; halive = ∀ γ. γ; hapistrano = ∀ γ. [γ]; haskakafka = ∀ γ. γ -> { configureFlags = [String]; preConfigure = String }; haskell-gi-base = ∀ γ. γ; hasql = ∀ γ. γ; hasql-queue = ∀ γ. γ; hasql-transaction = ∀ γ. γ; hatex-guide = ∀ γ. γ -> { preConfigure = String }; hcwiid = ∀ γ. γ -> { configureFlags = [String]; prePatch = String }; heist = ∀ γ. γ -> { testToolDepends = ∀ α. [α] }; hercules-ci-agent = ∀ γ. γ; hidapi = ∀ γ. γ; hie-bios = ∀ γ. γ; hie-bios_0_5_0 = ∀ γ. γ; hinotify = ∀ γ. γ; hjsonschema = ∀ γ. γ -> { testTarget = String }; hmatrix = ∀ γ. γ; holy-project = ∀ γ. γ; hs-GeoIP = { GeoIP = ∀ β. β }; hs-mesos = ∀ γ. γ -> { extraLibraries = ∀ α. [α]; preConfigure = String }; hscurses = ∀ γ. γ -> { librarySystemDepends = ∀ α. [α] }; hsqml = ∀ γ. [γ]; http-client = ∀ γ. γ; http-client-openssl = ∀ γ. γ; http-client-tls = ∀ γ. γ; http-conduit = ∀ γ. γ; http-download = ∀ γ. γ; hw-kafka-client = ∀ γ. γ -> { configureFlags = [String]; preConfigure = String }; hzk = ∀ γ. γ -> { configureFlags = [String]; preConfigure = String }; intero = ∀ γ. γ -> { preCheck = String }; io-streams = String; jni = ∀ γ. γ -> { preConfigure = String }; js-flot = ∀ γ. γ; js-jquery = ∀ γ. γ; leksah = ∀ γ. γ -> { executableSystemDepends = ∀ α. [α]; postPatch = String }; libarchive-conduit = { archive = ∀ β. β }; libsystemd-journal = ∀ γ. γ -> { librarySystemDepends = ∀ α. [α] }; liquid-fixpoint = ∀ γ. γ; liquidhaskell = ∀ γ. γ; llvm-hs = ∀ γ. γ -> { doCheck = Bool; preCompileBuildDriver = String }; loc-test = { loc = ∀ β. β }; lsp-test = ∀ γ. γ; marmalade-upload = ∀ γ. γ; mattermost-api = ∀ γ. γ; mime-mail = String; miniball = ∀ γ. γ -> { librarySystemDepends = ∀ α. [α] }; mongoDB = ∀ γ. γ; mplayer-spot = ∀ γ. γ -> { postInstall = String }; mustache = ∀ γ. γ; mysql = { mysql = ∀ β. β }; nanospec = ∀ γ. γ; network-transport-tcp = ∀ γ. γ; network-transport-zeromq = ∀ γ. γ; neuron = ∀ γ. γ -> { buildTools = ∀ α. [α]; preConfigure = String }; niv = ∀ γ. γ; nvvm = ∀ γ. γ -> { preConfigure = String }; opencv-extra = ∀ γ. γ; options = ∀ γ. γ; ormolu = ∀ γ. γ; pango = [String]; pantry = ∀ γ. γ; partial-semigroup = ∀ γ. γ; pcap = ∀ γ. γ; pipes-mongodb = ∀ γ. γ; poppler = ∀ γ. γ -> { postPatch = String }; postgresql-libpq-notify = ∀ γ. γ; postgresql-pure = ∀ γ. γ; postgresql-typed = ∀ γ. γ; primitive = ∀ γ. γ; proteaaudio = ∀ γ. γ; purescript = ∀ γ. γ; raven-haskell = ∀ γ. γ; retrie = ∀ γ. γ -> { testToolDepends = ∀ α. [α] }; riak = ∀ γ. γ; sbv = ∀ γ. γ -> { postPatch = String }; scholdoc-citeproc = ∀ γ. γ; scotty-binding-play = ∀ γ. γ; secp256k1 = ∀ γ. [γ]; secp256k1-haskell = ∀ γ. γ; servant-client-core = Path; servant-router = ∀ γ. γ; servant-streaming-server = ∀ γ. γ; serversession-backend-redis = ∀ γ. γ; sfml-audio = String; shh = ∀ γ. γ; slack-api = ∀ γ. γ; snap-server = ∀ γ. γ; socket = ∀ γ. γ; spaceprobe = ∀ γ. γ; spago = ∀ γ. γ; spatial-rotations = ∀ γ. γ; splitmix = ∀ γ. γ; stackage = ∀ γ. γ; stackage-curator = ∀ γ. γ; system-fileio = ∀ γ. γ; tcp-streams = ∀ γ. γ; textocat-api = ∀ γ. γ; tonaparser = ∀ γ. γ; transient-universe = ∀ γ. γ; typed-process = ∀ γ. γ; tz = ∀ γ. γ -> { preConfigure = String }; warp = ∀ γ. γ; webkit = { webkit = ∀ β. β }; websnap = { webkit = ∀ β. β }; wl-pprint-terminfo = ∀ γ. γ; wreq = ∀ γ. γ; wreq-sb = ∀ γ. γ; wuss = ∀ γ. γ; wxc = { wxGTK = ∀ β. β }; wxcore = { wxGTK = ∀ β. β }; x509-system = ∀ γ. γ -> { postPatch = String }; xattr = ∀ γ. γ; xmonad = Path; yaya-hedgehog = { yaya = ∀ β. β }; yesod-bin = ∀ γ. γ; zeromq4-haskell = { zeromq = ∀ β. β } } -> θ -> { Dust-crypto = ∀ δ. δ; Frames-beam = ∀ δ. δ; GLURaw = ∀ δ. δ -> { libraryHaskellDepends = ∀ β. [β]; librarySystemDepends = ∀ β. β }; HTTP = ∀ δ. δ; LDAP = ∀ δ. δ -> { librarySystemDepends = ∀ β. [β] }; OpenAL = ∀ δ. δ; OpenCL = ∀ δ. δ -> { libraryHaskellDepends = ∀ β. [β]; librarySystemDepends = ∀ β. β }; OpenGLRaw = ∀ δ. δ -> { libraryHaskellDepends = ∀ β. [β]; librarySystemDepends = ∀ β. β; preConfigure = String }; SDL-gfx = ∀ δ. δ -> { librarySystemDepends = ∀ β. [β] }; SDL-image = ∀ δ. δ -> { librarySystemDepends = ∀ β. [β] }; SDL-mixer = ∀ δ. δ -> { librarySystemDepends = ∀ β. [β] }; SDL-mpeg = ∀ δ. δ -> { configureFlags = [String] }; SDL-ttf = ∀ δ. δ -> { librarySystemDepends = ∀ β. [β] }; aeson-gadt-th = String; al = String; amqp = ∀ δ. δ; amqp-conduit = ∀ δ. δ; bindings-GLFW = ∀ δ. δ -> { doCheck = Bool; libraryHaskellDepends = ∀ β. [β]; librarySystemDepends = ∀ β. β }; bitcoin-api = ∀ δ. δ; bitcoin-api-extra = ∀ δ. δ; bitx-bitcoin = ∀ δ. δ; cachix = ∀ δ. δ; cairo = ∀ δ. δ; caramia = ∀ δ. δ; clock = ∀ δ. δ; colour = ∀ δ. δ; concurrent-dns-cache = ∀ δ. δ; configuration-tools = ∀ δ. δ; cuda = ∀ δ. δ -> { configureFlags = [String]; extraLibraries = ∀ β. [β]; preConfigure = String }; cufft = ∀ δ. δ -> { preConfigure = String }; cut-the-crap = ∀ δ. δ -> { postInstall = String }; devtools = { mprelude = ∀ γ. γ }; digitalocean-kzs = ∀ δ. δ; discount = { markdown = ∀ γ. γ }; dnssd = { dns_sd = { withLibdnssdCompat = Bool } }; docker = ∀ δ. δ; download = ∀ δ. δ; dyre = Path; either-unwrap = ∀ δ. δ -> { testHaskellDepends = ∀ β. [β] }; epanet-haskell = [String]; epic = ∀ δ. [δ]; fltkhs = ∀ δ. δ -> { librarySystemDepends = ∀ β. [β]; libraryToolDepends = ∀ β. [β] }; foundation = ∀ δ. δ; fsnotify = ∀ δ. δ; futhark = ∀ δ. δ -> { postBuild = String; postInstall = String }; ghc-paths = Path; ghcid = ∀ δ. δ; ghcide = ∀ δ. δ -> { preCheck = String }; gi-dbusmenugtk3 = ∀ δ. δ; gi-gtk-declarative = ∀ δ. δ; ginsu = ∀ δ. δ -> { executableSystemDepends = ∀ β. [β] }; gio = [String]; git-annex = ∀ δ. δ -> { postFixup = String; postPatch = String }; githash = ∀ δ. δ; github-types = ∀ δ. δ; glib = [String]; greenclip = ∀ δ. δ; gtk = [String]; gtk-traymanager = ∀ δ. δ; gtk3 = [String]; gtksourceview2 = ∀ δ. δ; guid = ∀ δ. δ -> { doCheck = Bool; prePatch = String }; hPDB-examples = ∀ δ. δ; hadoop-rpc = ∀ δ. δ; halive = ∀ δ. δ; hapistrano = ∀ δ. [δ]; haskakafka = ∀ δ. δ -> { configureFlags = [String]; preConfigure = String }; haskell-gi-base = ∀ δ. δ; hasql = ∀ δ. δ; hasql-queue = ∀ δ. δ; hasql-transaction = ∀ δ. δ; hatex-guide = ∀ δ. δ -> { preConfigure = String }; hcwiid = ∀ δ. δ -> { configureFlags = [String]; prePatch = String }; heist = ∀ δ. δ -> { testToolDepends = ∀ β. [β] }; hercules-ci-agent = ∀ δ. δ; hidapi = ∀ δ. δ; hie-bios = ∀ δ. δ; hie-bios_0_5_0 = ∀ δ. δ; hinotify = ∀ δ. δ; hjsonschema = ∀ δ. δ -> { testTarget = String }; hmatrix = ∀ δ. δ; holy-project = ∀ δ. δ; hs-GeoIP = { GeoIP = ∀ γ. γ }; hs-mesos = ∀ δ. δ -> { extraLibraries = ∀ β. [β]; preConfigure = String }; hscurses = ∀ δ. δ -> { librarySystemDepends = ∀ β. [β] }; hsqml = ∀ δ. [δ]; http-client = ∀ δ. δ; http-client-openssl = ∀ δ. δ; http-client-tls = ∀ δ. δ; http-conduit = ∀ δ. δ; http-download = ∀ δ. δ; hw-kafka-client = ∀ δ. δ -> { configureFlags = [String]; preConfigure = String }; hzk = ∀ δ. δ -> { configureFlags = [String]; preConfigure = String }; intero = ∀ δ. δ -> { preCheck = String }; io-streams = String; jni = ∀ δ. δ -> { preConfigure = String }; js-flot = ∀ δ. δ; js-jquery = ∀ δ. δ; leksah = ∀ δ. δ -> { executableSystemDepends = ∀ β. [β]; postPatch = String }; libarchive-conduit = { archive = ∀ γ. γ }; libsystemd-journal = ∀ δ. δ -> { librarySystemDepends = ∀ β. [β] }; liquid-fixpoint = ∀ δ. δ; liquidhaskell = ∀ δ. δ; llvm-hs = ∀ δ. δ -> { doCheck = Bool; preCompileBuildDriver = String }; loc-test = { loc = ∀ γ. γ }; lsp-test = ∀ δ. δ; marmalade-upload = ∀ δ. δ; mattermost-api = ∀ δ. δ; mime-mail = String; miniball = ∀ δ. δ -> { librarySystemDepends = ∀ β. [β] }; mongoDB = ∀ δ. δ; mplayer-spot = ∀ δ. δ -> { postInstall = String }; mustache = ∀ δ. δ; mysql = { mysql = ∀ γ. γ }; nanospec = ∀ δ. δ; network-transport-tcp = ∀ δ. δ; network-transport-zeromq = ∀ δ. δ; neuron = ∀ δ. δ -> { buildTools = ∀ β. [β]; preConfigure = String }; niv = ∀ δ. δ; nvvm = ∀ δ. δ -> { preConfigure = String }; opencv-extra = ∀ δ. δ; options = ∀ δ. δ; ormolu = ∀ δ. δ; pango = [String]; pantry = ∀ δ. δ; partial-semigroup = ∀ δ. δ; pcap = ∀ δ. δ; pipes-mongodb = ∀ δ. δ; poppler = ∀ δ. δ -> { postPatch = String }; postgresql-libpq-notify = ∀ δ. δ; postgresql-pure = ∀ δ. δ; postgresql-typed = ∀ δ. δ; primitive = ∀ δ. δ; proteaaudio = ∀ δ. δ; purescript = ∀ δ. δ; raven-haskell = ∀ δ. δ; retrie = ∀ δ. δ -> { testToolDepends = ∀ β. [β] }; riak = ∀ δ. δ; sbv = ∀ δ. δ -> { postPatch = String }; scholdoc-citeproc = ∀ δ. δ; scotty-binding-play = ∀ δ. δ; secp256k1 = ∀ δ. [δ]; secp256k1-haskell = ∀ δ. δ; servant-client-core = Path; servant-router = ∀ δ. δ; servant-streaming-server = ∀ δ. δ; serversession-backend-redis = ∀ δ. δ; sfml-audio = String; shh = ∀ δ. δ; slack-api = ∀ δ. δ; snap-server = ∀ δ. δ; socket = ∀ δ. δ; spaceprobe = ∀ δ. δ; spago = ∀ δ. δ; spatial-rotations = ∀ δ. δ; splitmix = ∀ δ. δ; stackage = ∀ δ. δ; stackage-curator = ∀ δ. δ; system-fileio = ∀ δ. δ; tcp-streams = ∀ δ. δ; textocat-api = ∀ δ. δ; tonaparser = ∀ δ. δ; transient-universe = ∀ δ. δ; typed-process = ∀ δ. δ; tz = ∀ δ. δ -> { preConfigure = String }; warp = ∀ δ. δ; webkit = { webkit = ∀ γ. γ }; websnap = { webkit = ∀ γ. γ }; wl-pprint-terminfo = ∀ δ. δ; wreq = ∀ δ. δ; wreq-sb = ∀ δ. δ; wuss = ∀ δ. δ; wxc = { wxGTK = ∀ γ. γ }; wxcore = { wxGTK = ∀ γ. γ }; x509-system = ∀ δ. δ -> { postPatch = String }; xattr = ∀ δ. δ; xmonad = Path; yaya-hedgehog = { yaya = ∀ γ. γ }; yesod-bin = ∀ δ. δ; zeromq4-haskell = { zeromq = ∀ γ. γ } }