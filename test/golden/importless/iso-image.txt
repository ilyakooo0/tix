∀ δ ε ζ. { config = δ; lib = ε; pkgs = ζ } -> { config = { assertions = [{ assertion = Bool; message = String }]; boot = { initrd = { availableKernelModules = [String]; kernelModules = [String]; supportedFilesystems = [String] }; kernelParams = [String]; loader = { grub = { enable = Bool; version = Integer }; timeout = Integer }; postBootCommands = String }; environment = { systemPackages = ∀ γ. [γ] }; fileSystems = { / = { fsType = String; options = [String] }; /iso = { device = String; neededForBoot = Bool; noCheck = Bool }; /nix/.ro-store = { device = String; fsType = String; neededForBoot = Bool; options = [String] }; /nix/.rw-store = { fsType = String; neededForBoot = Bool; options = [String] }; /nix/store = { device = String; fsType = String; options = [String] } }; isoImage = { contents = [{ source = String; target = String }]; storeContents = ∀ γ. [γ] }; system = { build = { isoImage = { bootImage = String; bootable = Bool; efiBootImage = String; efiBootable = Bool; isohybridMbrImage = String; syslinux = Null; usbBootable = Bool }; squashfsStore = { comp = ∀ α. α; storeContents = ∀ α. α } } } }; options = { isoImage = { appendToMenuLabel = { default = String; description = String; example = String }; compressImage = { default = Bool; description = String }; contents = { description = String; example = String }; edition = { default = String; description = String }; efiSplashImage = { default = { sha256 = String; url = String }; description = String }; grubTheme = { default = ∀ β. β; description = String; type = ∀ β. β }; includeSystemBuildDependencies = { default = Bool; description = String }; isoBaseName = { default = String; description = String }; isoName = { default = String; description = String }; makeEfiBootable = { default = Bool; description = String }; makeUsbBootable = { default = Bool; description = String }; splashImage = { default = { sha256 = String; url = String }; description = String }; squashfsCompression = { default = String; description = String; example = String }; storeContents = { description = String; example = String }; volumeID = { default = String; description = String } } } }