∀ ε ζ η. { config = ε; lib = ζ; pkgs = η } -> { config = { services = { jicofo = { bridgeMuc = String; componentPasswordFile = String; config = { org.jitsi.jicofo.ALWAYS_TRUST_MODE_ENABLED = String }; enable = Bool; userDomain = String; userName = String; userPasswordFile = String; xmppDomain = ∀ γ. γ; xmppHost = String }; jitsi-videobridge = { enable = Bool; xmppConfigs = { localhost = { disableCertificateVerification = Bool; domain = String; mucJids = String; passwordFile = String; userName = String } } }; nginx = { enable = Bool }; prosody = { enable = Bool; extraConfig = String; extraModules = [String]; modules = { admin_adhoc = Bool; bosh = Bool; ping = Bool; roster = Bool; saslauth = Bool; tls = Bool }; muc = [{ domain = String; extraConfig = String; name = String; roomDefaultPublicJids = Bool; roomLocking = Bool }]; virtualHosts = { auth. = { domain = String; enabled = Bool; extraConfig = String; ssl = { cert = String; key = String } } }; xmppComplianceSuite = Bool } }; systemd = { services = { jitsi-meet-init-secrets = { before = [String]; script = String; serviceConfig = { Type = String }; wantedBy = [String] }; prosody = { serviceConfig = { EnvironmentFile = [String]; SupplementaryGroups = [String] } } }; tmpfiles = { rules = [String] } }; users = { groups = { jitsi-meet = {  } } } }; meta = { doc = Path; maintainers = ∀ δ. δ }; options = { services = { jitsi-meet = { config = { default = {  }; description = String; example = String; type = ∀ β. β }; enable = String; extraConfig = { default = String; description = String; type = ∀ β. β }; hostName = { description = String; example = String; type = ∀ β. β }; interfaceConfig = { default = {  }; description = String; example = String; type = ∀ β. β }; jicofo = { enable = { default = Bool; description = String; type = ∀ α. α } }; nginx = { enable = { default = Bool; description = String; type = ∀ α. α } }; prosody = { enable = { default = Bool; description = String; type = ∀ α. α } }; videobridge = { enable = { default = Bool; description = String; type = ∀ α. α }; passwordFile = { default = Null; description = String; example = String; type = ∀ α. α } } } } } }