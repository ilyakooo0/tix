∀ δ ε ζ. { config = δ; lib = ε; pkgs = ζ } -> { config = { boot = { extraModulePackages = ∀ β. β }; environment = { systemPackages = ∀ β. [β] }; networking = { firewall = { checkReversePath = Bool } }; systemd = ∀ γ. { services = γ } }; options = { networking = { wg-quick = { interfaces = { default = {  }; description = String; example = { wg0 = { address = [String]; peers = [{ allowedIPs = [String]; endpoint = String; publicKey = String }]; privateKey = String } }; type = {  } -> { options = { address = { default = ∀ α. α; description = String; example = [String]; type = ∀ α. α }; dns = { default = ∀ α. α; description = String; example = [String]; type = ∀ α. α }; listenPort = { default = Null; description = String; example = Integer; type = ∀ α. α }; mtu = { default = Null; description = String; example = Integer; type = ∀ α. α }; peers = { default = ∀ α. α; description = String; type = ∀ α. α }; postDown = { default = String; description = String; example = String; type = ∀ α. α }; postUp = { default = String; description = String; example = String; type = ∀ α. α }; preDown = { default = String; description = String; example = String; type = ∀ α. α }; preUp = { default = String; description = String; example = String; type = ∀ α. α }; privateKey = { default = Null; description = String; example = String; type = ∀ α. α }; privateKeyFile = { default = Null; description = String; example = String; type = ∀ α. α }; table = { default = Null; description = String; example = String; type = ∀ α. α } } } } } } } }