∀ ε ζ η. { config = ε; lib = ζ; pkgs = η } -> { config = { environment = { systemPackages = ∀ δ. [δ] }; networking = { firewall = [{ allowedTCPPortRanges = [Integer]; allowedUDPPortRanges = [Integer] }] }; services = { deluge = { extraPackages = ∀ γ. [γ]; package = ∀ γ. γ } }; systemd = { services = { deluged = { after = [String]; description = String; path = ∀ β. [β]; preStart = String; serviceConfig = { ExecStart = String; Group = ∀ α. α; LimitNOFILE = ∀ α. α; Restart = String; UMask = String; User = ∀ α. α }; wantedBy = [String] }; delugeweb = { after = [String]; description = String; path = ∀ β. [β]; requires = [String]; serviceConfig = { ExecStart = String; Group = ∀ α. α; User = ∀ α. α }; wantedBy = [String] } }; tmpfiles = { rules = [String] } }; users = { groups = { deluge = { gid = ∀ β. β } }; users = { deluge = { description = String; group = ∀ β. β; home = ∀ β. β; uid = ∀ β. β } } } }; options = { services = { deluge = { authFile = { description = String; example = String; type = ∀ β. β }; config = { default = {  }; description = String; example = String; type = ∀ β. β }; dataDir = { default = String; description = String; type = ∀ β. β }; declarative = { default = Bool; description = String; type = ∀ β. β }; enable = String; extraPackages = { default = ∀ β. β; description = String; type = ∀ β. β }; group = { default = String; description = String; type = ∀ β. β }; openFilesLimit = { default = Integer; description = String }; openFirewall = { default = Bool; description = String; type = ∀ β. β }; package = { description = String; example = String; type = ∀ β. β }; user = { default = String; description = String; type = ∀ β. β }; web = { enable = String; openFirewall = { default = Bool; description = String; type = ∀ α. α }; port = { default = Integer; description = String; type = ∀ α. α } } } } } }