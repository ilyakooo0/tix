∀ γ δ ε. { config = γ; lib = δ; pkgs = ε } -> { config = { systemd = { services = { docker-registry = { after = [String]; description = String; script = String; serviceConfig = { AmbientCapabilities = String; User = String; WorkingDirectory = ∀ α. α }; wantedBy = [String] }; docker-registry-garbage-collect = { description = String; restartIfChanged = Bool; script = String; serviceConfig = { Type = String }; startAt = ∀ β. β; unitConfig = { X-StopOnRemoval = Bool } } } }; users = { users = { docker-registry = { createHome = Bool; home = ∀ β. β; isSystemUser = Bool } } } }; options = { services = { dockerRegistry = { enable = String; enableDelete = { default = Bool; description = String; type = ∀ β. β }; enableGarbageCollect = String; enableRedisCache = String; extraConfig = { default = {  }; description = String; type = ∀ β. β }; garbageCollectDates = { default = String; description = String; type = ∀ β. β }; listenAddress = { default = String; description = String; type = ∀ β. β }; port = { default = Integer; description = String; type = ∀ β. β }; redisPassword = { default = String; description = String; type = ∀ β. β }; redisUrl = { default = String; description = String; type = ∀ β. β }; storagePath = { default = String; description = String; type = ∀ β. β } } } } }