∀ β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ σ τ υ φ χ ψ ω α1 β1 γ1 δ1 ε1 ζ1 η1 θ1 ι1.
( (β) // ({check = γ -> Bool; name = String;}) ~ (δ),
  ε.config = ζ,
  ε.lib = η,
  ε.pkgs = θ,
  ζ.i18n = ι,
  θ.fcitx = κ,
  θ.fcitx-engines = λ,
  η.attrByPath = [String] -> Bool -> γ -> Bool,
  η.attrNames = μ -> ν,
  η.cfg = ξ,
  η.concatStringsSep = String -> ο -> π,
  η.const = ρ -> σ,
  η.filterAttrs = σ -> λ -> μ,
  η.isDerivation = ρ,
  η.listOf = τ -> υ,
  η.literalExample = String -> φ,
  η.map = (χ -> String) -> ν -> ο,
  η.mkIf =
    Bool ->
    { environment =
        { variables =
            { GTK_IM_MODULE = String;
              QT_IM_MODULE = String;
              XMODIFIERS = String;
            };
        };
      i18n = {inputMethod = {package = ψ;};};
      services = {xserver = {displayManager = {sessionCommands = String;};};};
    } ->
    ω,
  η.mkOption =
    {default = ∀ α. α; description = String; example = φ; type = υ;} -> α1,
  η.types = β1,
  κ.override = {plugins = γ1;} -> ψ,
  ξ.engines = γ1,
  β1.package = β,
  δ1.package = ε1,
  ε1.check = γ -> Bool,
  ι.inputMethod = ζ1,
  ζ1.fcitx = η1,
  θ1.inputMethod = ι1,
  ι1.enabled = String
) =>
ε ->
{config = ω; options = {i18n = {inputMethod = {fcitx = {engines = α1;};};};};}