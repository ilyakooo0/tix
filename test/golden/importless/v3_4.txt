[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 15, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 15, sourceColumn = Pos 38}},KeyNotPresent "lib"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 15, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 15, sourceColumn = Pos 38}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0})]
[CanNotUnify (NAttrSet (fromList [("CoreFoundation",NTypeVariable 6),("Security",NTypeVariable 5),("boost",NTypeVariable 4),("cctools",NTypeVariable 7),("sasl",NTypeVariable 3)])) (NAttrSet (fromList [("license",NBrujin (DeBrujin 0 0)),("patches",List (NAtomic Path)),("sha256",NAtomic String),("version",NAtomic String)]) :-> NTypeVariable 11),CanNotUnify (NAtomic Path) (NAttrSet (fromList [("CoreFoundation",NTypeVariable 6),("Security",NTypeVariable 5),("boost",NTypeVariable 4),("cctools",NTypeVariable 7),("sasl",NTypeVariable 3)]) :-> NTypeVariable 9)]
âˆ€ Î² Î³ Î´ Îµ Î¶ Î· Î¸ Î¹. { CoreFoundation = Î²; Security = Î³; boost = Î´; callPackage = Path -> Îµ; cctools = Î¶; lib = Î·; sasl = Î¸; stdenv = Î¹ } -> { license = âˆ€ Î±. Î±; patches = [Path]; sha256 = String; version = String }