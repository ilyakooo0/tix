∀ ζ η θ. { config = ζ; lib = η; pkgs = θ } -> { config = { environment = { systemPackages = [String] }; networking = { extraHosts = String }; services = { certmgr = ∀ ε. { enable = Bool; package = ∀ δ. δ; specs = ε; svcManager = String }; cfssl = { address = String; configFile = { auth_keys = { default = { key = String; type = String } }; signing = { profiles = { default = { auth_key = String; expiry = String; usages = [String] } } } }; enable = Bool; tlsCert = String; tlsKey = String }; etcd = { advertiseClientUrls = [String]; certFile = ∀ δ. δ; initialAdvertisePeerUrls = [String]; initialCluster = [String]; keyFile = ∀ δ. δ; listenClientUrls = [String]; listenPeerUrls = [String]; trustedCaFile = ∀ δ. δ }; flannel = { kubeconfig = { certFile = ∀ γ. γ; keyFile = ∀ γ. γ; server = ∀ γ. γ } }; kubernetes = { apiserver = { clientCaFile = ∀ γ. γ; etcd = { caFile = ∀ β. β; certFile = ∀ β. β; keyFile = ∀ β. β; servers = [String] }; kubeletClientCaFile = ∀ γ. γ; kubeletClientCertFile = ∀ γ. γ; kubeletClientKeyFile = ∀ γ. γ; proxyClientCertFile = ∀ γ. γ; proxyClientKeyFile = ∀ γ. γ; serviceAccountKeyFile = ∀ γ. γ; tlsCertFile = ∀ γ. γ; tlsKeyFile = ∀ γ. γ }; controllerManager = { kubeconfig = { certFile = ∀ β. β; keyFile = ∀ β. β }; rootCaFile = ∀ γ. γ; serviceAccountKeyFile = ∀ γ. γ }; kubelet = { clientCaFile = ∀ γ. γ; kubeconfig = { certFile = ∀ β. β; keyFile = ∀ β. β }; tlsCertFile = ∀ γ. γ; tlsKeyFile = ∀ γ. γ }; proxy = { kubeconfig = { certFile = ∀ β. β; keyFile = ∀ β. β } }; scheduler = { kubeconfig = { certFile = ∀ β. β; keyFile = ∀ β. β } } } }; systemd = { services = { cfssl = { preStart = [String] }; kube-addon-manager = [{ environment = { KUBECONFIG = { certFile = ∀ α. α; keyFile = ∀ α. α; server = ∀ α. α } } }]; kube-certmgr-bootstrap = { after = [String]; description = String; script = [String]; serviceConfig = { Restart = String; RestartSec = String }; wantedBy = [String] } } } }; options = { services = { kubernetes = { pki = { caCertPathPrefix = { default = String; description = String; type = ∀ β. β }; caSpec = { default = { CN = String; L = String; O = String; OU = String }; description = String; type = ∀ β. β }; certs = { default = {  }; description = String; type = ∀ β. β }; cfsslAPIExtraSANs = { default = ∀ β. β; description = String; example = [String]; type = ∀ β. β }; enable = String; etcClusterAdminKubeconfig = { default = Null; description = String; type = ∀ β. β }; genCfsslAPICerts = { default = Bool; description = String; type = ∀ β. β }; genCfsslAPIToken = { default = Bool; description = String; type = ∀ β. β }; genCfsslCACert = { default = Bool; description = String; type = ∀ β. β }; pkiTrustOnBootstrap = { default = Bool; description = String; type = ∀ β. β } } } } } }