[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 19, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 19, sourceColumn = Pos 27}},KeyNotPresent "enable"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 19, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 19, sourceColumn = Pos 27}},UnexpectedType {expected = NAttrSet (fromList []), got = NBrujin (DeBrujin 0 0)}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 19, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 19, sourceColumn = Pos 16}},UndefinedVariable "mkIf"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 13, sourceColumn = Pos 29}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 13, sourceColumn = Pos 43}},UndefinedVariable "mkEnableOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 6, sourceColumn = Pos 9}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 6, sourceColumn = Pos 30}},KeyNotPresent "services"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 6, sourceColumn = Pos 9}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 6, sourceColumn = Pos 30}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 3, sourceColumn = Pos 1}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 46, sourceColumn = Pos 1}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 1})]
[]
âˆ€ Î± Î² Î³. { config = Î±; lib = Î²; pkgs = Î³ } -> { config = { systemd = { services = { owamp = { description = String; serviceConfig = { AmbientCapabilities = String; ExecStart = String; Group = String; PrivateTmp = Bool; Restart = String; RuntimeDirectory = String; StateDirectory = String; Type = String; User = String }; wantedBy = [String] } } }; users = { groups = { owamp = {  } }; users = { owamp = { description = String; group = String; isSystemUser = Bool } } } }; options = { services = { owamp = { enable = String } } } }