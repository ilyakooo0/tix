∀ ζ η θ. { config = ζ; lib = η; pkgs = θ } -> { config = { assertions = [{ assertion = Bool; message = String }]; environment = { systemPackages = [∀ δ. δ] }; networking = { firewall = { allowedTCPPortRanges = [{ from = ∀ β. β; to = ∀ β. β }] } }; systemd = { services = { foundationdb = { after = [String]; description = String; path = [∀ β. β]; postStart = String; preStart = String; script = String; serviceConfig = { Group = ∀ β. β; NoNewPrivileges = Bool; PIDFile = String; PermissionsStartOnly = Bool; PrivateDevices = Bool; PrivateTmp = Bool; ProtectControlGroups = Bool; ProtectHome = Bool; ProtectKernelTunables = Bool; ProtectSystem = String; ReadWritePaths = [String]; Restart = String; RestartSec = Integer; TimeoutSec = Integer; Type = String; User = ∀ β. β }; unitConfig = { RequiresMountsFor = String }; wantedBy = [String] } }; tmpfiles = { rules = [String] } }; users = { groups = { foundationdb = { gid = ∀ γ. γ } }; users = { foundationdb = { description = String; group = ∀ γ. γ; uid = ∀ γ. γ } } } }; meta = { doc = Path; maintainers = ∀ ε. [ε] }; options = { services = { foundationdb = { backupProcesses = { default = Integer; description = String; type = ∀ γ. γ }; class = { default = Null; description = String; type = [String] }; dataDir = { default = String; description = String; type = ∀ γ. γ }; enable = String; extraReadWritePaths = { default = ∀ γ. γ; description = String; type = ∀ γ. γ }; group = { default = String; description = String; type = ∀ γ. γ }; listenAddress = { default = String; description = String; type = ∀ γ. γ }; listenPortStart = { default = Integer; description = String; type = ∀ γ. γ }; locality = { default = { dataHall = Null; datacenterId = Null; machineId = Null; zoneId = Null }; description = String; type = { options = { dataHall = { default = Null; description = String; type = ∀ α. α }; datacenterId = { default = Null; description = String; type = ∀ α. α }; machineId = { default = Null; description = String; type = ∀ α. α }; zoneId = { default = Null; description = String; type = ∀ α. α } } } }; logDir = { default = String; description = String; type = ∀ γ. γ }; logSize = { default = String; description = String; type = ∀ γ. γ }; maxLogSize = { default = String; description = String; type = ∀ γ. γ }; memory = { default = String; description = String; type = ∀ γ. γ }; openFirewall = { default = Bool; description = String; type = ∀ γ. γ }; package = { description = String; type = ∀ γ. γ }; pidfile = { default = String; description = String; type = ∀ γ. γ }; publicAddress = { default = String; description = String; type = ∀ γ. γ }; restartDelay = { default = Integer; description = String; type = ∀ γ. γ }; serverProcesses = { default = Integer; description = String; type = ∀ γ. γ }; storageMemory = { default = String; description = String; type = ∀ γ. γ }; tls = { default = Null; description = String; type = { options = { allowedPeers = { default = String; description = String; type = ∀ α. α }; certificate = { description = String; type = ∀ α. α }; key = { description = String; type = ∀ α. α } } } }; traceFormat = { default = String; description = String; type = [String] }; user = { default = String; description = String; type = ∀ γ. γ } } } } }