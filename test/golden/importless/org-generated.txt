[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 21}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 38}},KeyNotPresent "licenses"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 21}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 38}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 12}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 15, sourceColumn = Pos 21}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 15, sourceColumn = Pos 38}},KeyNotPresent "licenses"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 15, sourceColumn = Pos 21}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 15, sourceColumn = Pos 38}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 3})]
[CanNotUnify (NBrujin (DeBrujin 0 0)) (NBrujin (DeBrujin 0 0)),CanNotUnify (NBrujin (DeBrujin 0 0)) (NBrujin (DeBrujin 0 0)),CanNotUnify (NBrujin (DeBrujin 0 0)) (NBrujin (DeBrujin 0 0)),CanNotUnify (NBrujin (DeBrujin 0 0)) (NBrujin (DeBrujin 0 0))]
âˆ€ Îµ Î¶ Î· Î¸. { callPackage = { elpaBuild = { ename = String; meta = { homepage = String; license = âˆ€ Î±. Î± }; packageRequires = âˆ€ Î². Î²; pname = String; src = { sha256 = String; url = String }; version = String } -> Îµ; fetchurl = Î¶; lib = Î· } -> { ename = String; meta = { homepage = String; license = âˆ€ Î³. Î³ }; packageRequires = âˆ€ Î´. Î´; pname = String; src = { sha256 = String; url = String }; version = String } -> Î¸ } -> { org = {  }; org-plus-contrib = {  } }