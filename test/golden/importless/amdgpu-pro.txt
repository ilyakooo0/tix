[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 57, sourceColumn = Pos 8}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 57, sourceColumn = Pos 13}},UndefinedVariable "isYes"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 56, sourceColumn = Pos 35}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 58, sourceColumn = Pos 6}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 26}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 56, sourceColumn = Pos 40}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 56, sourceColumn = Pos 63}},KeyNotPresent "lib"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 56, sourceColumn = Pos 40}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 56, sourceColumn = Pos 63}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 52, sourceColumn = Pos 25}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 52, sourceColumn = Pos 47}},KeyNotPresent "driSupport32Bit"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 52, sourceColumn = Pos 25}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 52, sourceColumn = Pos 47}},UnexpectedType {expected = NAttrSet (fromList []), got = NBrujin (DeBrujin 0 0)}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 52, sourceColumn = Pos 10}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 52, sourceColumn = Pos 24}},UndefinedVariable "optionalString"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 42, sourceColumn = Pos 30}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 42, sourceColumn = Pos 51}},KeyNotPresent "linuxPackagesFor"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 42, sourceColumn = Pos 30}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 42, sourceColumn = Pos 51}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 2}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 42, sourceColumn = Pos 7}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 42, sourceColumn = Pos 28}},KeyNotPresent "recurseIntoAttrs"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 42, sourceColumn = Pos 7}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 42, sourceColumn = Pos 28}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 2}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 32, sourceColumn = Pos 32}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 32, sourceColumn = Pos 41}},UndefinedVariable "singleton"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 28, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 28, sourceColumn = Pos 16}},UndefinedVariable "mkIf"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 18, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 18, sourceColumn = Pos 35}},KeyNotPresent "linux_4_9"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 18, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 18, sourceColumn = Pos 35}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 2}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 16, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 16, sourceColumn = Pos 34}},KeyNotPresent "hardware"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 16, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 16, sourceColumn = Pos 34}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 14, sourceColumn = Pos 15}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 14, sourceColumn = Pos 67}},KeyNotPresent "pkgsi686Linux"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 14, sourceColumn = Pos 15}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 14, sourceColumn = Pos 67}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 2}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 13, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 13, sourceColumn = Pos 50}},KeyNotPresent "boot"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 13, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 13, sourceColumn = Pos 50}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 31}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 38}},UndefinedVariable "drivers"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 11, sourceColumn = Pos 17}},UndefinedVariable "elem"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 49}},KeyNotPresent "services"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 9, sourceColumn = Pos 49}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 5, sourceColumn = Pos 1}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 69, sourceColumn = Pos 1}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 1})]
[CanNotUnify (NBrujin (DeBrujin 0 0)) (NAttrSet (fromList [("boot",NAttrSet (fromList [("blacklistedKernelModules",List (NAtomic String)),("extraModulePackages",List (NBrujin (DeBrujin 0 0))),("kernelPackages",NAttrSet (fromList [("extraConfig",NAtomic String)]))])),("environment",NAttrSet (fromList [("etc",NAttrSet (fromList [("amd/amdapfxx.blb",NAttrSet (fromList [("source",NBrujin (DeBrujin 0 0))])),("amd/amdrc",NAttrSet (fromList [("source",NBrujin (DeBrujin 0 0))])),("gbm/gbm.conf",NAttrSet (fromList [("source",NBrujin (DeBrujin 0 0))]))]))])),("hardware",NAttrSet (fromList [("firmware",List (NBrujin (DeBrujin 0 0))),("opengl",NAttrSet (fromList [("package",NBrujin (DeBrujin 0 0)),("package32",NAttrSet (fromList [("kernel",NAtomic Null),("libsOnly",NAtomic Bool)])),("setLdLibraryPath",NAtomic Bool)]))])),("nixpkgs",NAttrSet (fromList [("config",NAttrSet (fromList [("xorg",NAttrSet (fromList [("abiCompat",NAtomic String)]))]))])),("services",NAttrSet (fromList [("xserver",NAttrSet (fromList [("drivers",NAttrSet (fromList [("display",NAtomic Bool),("modules",List (NBrujin (DeBrujin 0 0))),("name",NAtomic String)]))]))])),("system",NAttrSet (fromList [("activationScripts",NAttrSet (fromList [("setup-amdgpu-pro",NAtomic String)])),("requiredKernelConfig",List (NAtomic String))]))]) :-> NTypeVariable 29),CanNotUnify (NBrujin (DeBrujin 0 0)) (NAtomic String),CanNotUnify (NBrujin (DeBrujin 0 0)) (NAtomic String),CanNotUnify (NBrujin (DeBrujin 0 0)) (NAtomic String),CanNotUnify (NAtomic String) (NTypeVariable 6 :-> NTypeVariable 7)]
âˆ€ Î´ Îµ Î¶. { config = Î´; lib = Îµ; pkgs = Î¶ } -> { config = { boot = { blacklistedKernelModules = [String]; extraModulePackages = [âˆ€ Î³. Î³]; kernelPackages = { extraConfig = String } }; environment = { etc = { amd/amdapfxx.blb = { source = âˆ€ Î². Î² }; amd/amdrc = { source = âˆ€ Î². Î² }; gbm/gbm.conf = { source = âˆ€ Î². Î² } } }; hardware = { firmware = [âˆ€ Î³. Î³]; opengl = { package = âˆ€ Î³. Î³; package32 = { kernel = Null; libsOnly = Bool }; setLdLibraryPath = Bool } }; nixpkgs = { config = { xorg = { abiCompat = String } } }; services = { xserver = { drivers = { display = Bool; modules = [âˆ€ Î±. Î±]; name = String } } }; system = { activationScripts = { setup-amdgpu-pro = String }; requiredKernelConfig = [String] } } }