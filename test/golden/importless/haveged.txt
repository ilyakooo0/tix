[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 52, sourceColumn = Pos 18}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 52, sourceColumn = Pos 30}},KeyNotPresent "haveged"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 52, sourceColumn = Pos 18}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 52, sourceColumn = Pos 30}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 2}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 45, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 45, sourceColumn = Pos 27}},KeyNotPresent "enable"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 45, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 45, sourceColumn = Pos 27}},UnexpectedType {expected = NAttrSet (fromList []), got = NBrujin (DeBrujin 0 0)}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 45, sourceColumn = Pos 12}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 45, sourceColumn = Pos 16}},UndefinedVariable "mkIf"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 25}},KeyNotPresent "int"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 25}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 9}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 21}},UndefinedVariable "types"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 29, sourceColumn = Pos 26}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 29, sourceColumn = Pos 34}},UndefinedVariable "mkOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 21, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 21, sourceColumn = Pos 26}},KeyNotPresent "bool"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 21, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 21, sourceColumn = Pos 26}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 5}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 21, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 21, sourceColumn = Pos 21}},UndefinedVariable "types"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 16}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 20, sourceColumn = Pos 24}},UndefinedVariable "mkOption"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 9}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 32}},KeyNotPresent "services"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 9}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 7, sourceColumn = Pos 32}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 3, sourceColumn = Pos 1}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 68, sourceColumn = Pos 1}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 1})]
[]
âˆ€ Î² Î³ Î´. { config = Î²; lib = Î³; pkgs = Î´ } -> { config = { systemd = { services = { haveged = { description = String; path = âˆ€ Î±. [Î±]; serviceConfig = { ExecStart = String; PrivateDevices = Bool; PrivateNetwork = Bool; PrivateTmp = Bool; ProtectHome = Bool; ProtectSystem = String; SuccessExitStatus = Integer }; unitConfig = { Documentation = String }; wantedBy = [String] } } } }; options = { services = { haveged = { enable = { default = Bool; description = String; type = âˆ€ Î±. Î± }; refill_threshold = { default = Integer; description = String; type = âˆ€ Î±. Î± } } } } }