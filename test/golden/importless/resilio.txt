∀ β γ δ. { config = β; lib = γ; pkgs = δ } -> { config = { assertions = [{ assertion = Bool; message = String }]; systemd = { services = { resilio = { after = [String]; description = String; serviceConfig = { ExecStart = String; Restart = String; UMask = String; User = String }; wantedBy = [String] } } }; users = { groups = { rslsync = {  } }; users = { rslsync = { createHome = Bool; description = String; group = String; home = ∀ α. α; uid = ∀ α. α } } } }; options = { services = { resilio = { apiKey = { default = String; description = String; type = ∀ α. α }; checkForUpdates = { default = Bool; description = String; type = ∀ α. α }; deviceName = { default = ∀ α. α; description = String; example = String; type = ∀ α. α }; directoryRoot = { default = String; description = String; example = String; type = ∀ α. α }; downloadLimit = { default = Integer; description = String; example = Integer; type = ∀ α. α }; enable = { default = Bool; description = String; type = ∀ α. α }; enableWebUI = { default = Bool; description = String; type = ∀ α. α }; encryptLAN = { default = Bool; description = String; type = ∀ α. α }; httpListenAddr = { default = String; description = String; example = String; type = ∀ α. α }; httpListenPort = { default = Integer; description = String; type = ∀ α. α }; httpLogin = { default = String; description = String; example = String; type = ∀ α. α }; httpPass = { default = String; description = String; example = String; type = ∀ α. α }; listeningPort = { default = Integer; description = String; example = Integer; type = ∀ α. α }; sharedFolders = { default = ∀ α. α; description = String; example = [{ directory = String; knownHosts = [String]; searchLAN = Bool; secret = String; useDHT = Bool; useRelayServer = Bool; useSyncTrash = Bool; useTracker = Bool }] }; storagePath = { default = String; description = String; type = ∀ α. α }; uploadLimit = { default = Integer; description = String; example = Integer; type = ∀ α. α }; useUpnp = { default = Bool; description = String; type = ∀ α. α } } } } }