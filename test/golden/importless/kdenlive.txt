[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 102, sourceColumn = Pos 36}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 102, sourceColumn = Pos 44}},UndefinedVariable "gpl2Plus"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 102, sourceColumn = Pos 15}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 102, sourceColumn = Pos 46}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 34}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 102, sourceColumn = Pos 20}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 102, sourceColumn = Pos 32}},KeyNotPresent "licenses"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 102, sourceColumn = Pos 20}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 102, sourceColumn = Pos 32}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 1})]
[]
âˆ€ Î³ Î´ Îµ Î¶. { breeze-icons = Î³; breeze-qt5 = Î³; extra-cmake-modules = Î´; ffmpeg-full = Î³; frei0r = Î³; karchive = Î³; kconfig = Î³; kcrash = Î³; kdbusaddons = Î³; kdeclarative = Î³; kdoctools = Î´; kfilemetadata = Î³; kguiaddons = Î³; ki18n = Î³; kiconthemes = Î³; kinit = Î³; knewstuff = Î³; knotifications = Î³; knotifyconfig = Î³; kplotting = Î³; kpurpose = Î³; ktextwidgets = Î³; lib = Îµ; libv4l = Î³; mkDerivation = { buildInputs = [Î³]; dontWrapGApps = Bool; ffmpeg = Î³; meta = { license = âˆ€ Î±. [Î±] }; mlt = Î³; name = String; nativeBuildInputs = [Î´]; patches = [Path]; postPatch = String; preFixup = String; qtWrapperArgs = [String] } -> Î¶; mlt = Î³; phonon-backend-gstreamer = Î³; qtdeclarative = Î³; qtmultimedia = Î³; qtquickcontrols2 = Î³; qtscript = Î³; rttr = Î³; shared-mime-info = Î³; wrapGAppsHook = Î³ } -> { buildInputs = [Î³]; dontWrapGApps = Bool; ffmpeg = Î³; meta = { license = âˆ€ Î². [Î²] }; mlt = Î³; name = String; nativeBuildInputs = [Î´]; patches = [Path]; postPatch = String; preFixup = String; qtWrapperArgs = [String] }