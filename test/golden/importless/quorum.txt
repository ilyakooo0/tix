∀ δ ε ζ. { config = δ; lib = ε; pkgs = ζ } -> { config = { environment = { systemPackages = ∀ γ. [γ] }; systemd = { services = { quorum = { after = [String]; description = String; environment = { PRIVATE_CONFIG = String }; preStart = String; serviceConfig = { ExecStart = String; Group = ∀ α. α; MemoryDenyWriteExecute = String; NoNewPrivileges = String; PrivateDevices = String; PrivateTmp = String; ProtectSystem = String; Restart = String; User = ∀ α. α }; wantedBy = [String] } }; tmpfiles = { rules = [String] } } }; options = { services = { quorum = { blockperiod = { default = Integer; description = String; type = ∀ β. β }; enable = String; genesis = { default = Null; description = String; example = String; type = ∀ β. β }; group = { default = ∀ β. β; description = String; type = ∀ β. β }; nodekeyFile = { default = String; description = String; type = ∀ β. β }; permissioned = { default = Bool; description = String; type = ∀ β. β }; port = { default = Integer; description = String; type = ∀ β. β }; privateconfig = { default = String; description = String; type = ∀ β. β }; rpc = { address = { default = String; description = String; type = ∀ α. α }; api = { default = String; description = String; type = ∀ α. α }; enable = { default = Bool; description = String; type = ∀ α. α }; port = { default = Integer; description = String; type = ∀ α. α } }; staticNodes = { default = ∀ β. β; description = String; example = [String]; type = ∀ β. β }; syncmode = { default = String; description = String; type = [String] }; user = { default = String; description = String; type = ∀ β. β }; ws = { address = { default = String; description = String; type = ∀ α. α }; api = { default = String; description = String; type = ∀ α. α }; enable = { default = Bool; description = String; type = ∀ α. α }; origins = { default = String; description = String; type = ∀ α. α }; port = { default = Integer; description = String; type = ∀ α. α } } } } } }