[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 54, sourceColumn = Pos 43}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 54, sourceColumn = Pos 52}},UndefinedVariable "jerith666"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 54, sourceColumn = Pos 19}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 54, sourceColumn = Pos 54}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 20}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 54, sourceColumn = Pos 24}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 54, sourceColumn = Pos 39}},KeyNotPresent "maintainers"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 54, sourceColumn = Pos 24}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 54, sourceColumn = Pos 39}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 1}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 53, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 53, sourceColumn = Pos 43}},KeyNotPresent "lib"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 53, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 53, sourceColumn = Pos 43}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 51, sourceColumn = Pos 36}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 51, sourceColumn = Pos 40}},UndefinedVariable "bsd3"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 51, sourceColumn = Pos 15}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 51, sourceColumn = Pos 42}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 17}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 51, sourceColumn = Pos 20}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 51, sourceColumn = Pos 32}},KeyNotPresent "licenses"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 51, sourceColumn = Pos 20}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 51, sourceColumn = Pos 32}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 1}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 24, sourceColumn = Pos 1}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 24, sourceColumn = Pos 20}},KeyNotPresent "mkDerivation"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 24, sourceColumn = Pos 1}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 24, sourceColumn = Pos 20}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 13, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 13, sourceColumn = Pos 30}},KeyNotPresent "name"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 13, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 13, sourceColumn = Pos 30}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 13}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 13, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 13, sourceColumn = Pos 25}},UndefinedVariable "pfixtoolsSrc")]
[]
âˆ€ Î² Î³ Î´ Îµ Î¶. { bash = Î²; fetchFromGitHub = { owner = String; repo = String; rev = String; sha256 = String } -> Î³; git = Î²; gperf = Î²; lib = Î´; libev = Î²; libsrs2 = Î²; pcre = Î²; pkgconfig = Îµ; stdenv = Î¶; tokyocabinet = Î²; unbound = Î² } -> { NIX_CFLAGS_COMPILE = String; buildInputs = [Î²]; makeFlags = [String]; meta = { description = String; homepage = String; license = âˆ€ Î±. [Î±]; maintainers = âˆ€ Î±. [Î±]; platforms = âˆ€ Î±. Î± }; nativeBuildInputs = [Îµ]; patches = [Path]; pname = String; postPatch = String; postUnpack = String; src = { owner = String; repo = String; rev = String; sha256 = String }; version = String }