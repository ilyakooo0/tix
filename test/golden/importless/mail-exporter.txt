[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 32, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 32, sourceColumn = Pos 32}},KeyNotPresent "linux"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 32, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 32, sourceColumn = Pos 32}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 13}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 32, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 32, sourceColumn = Pos 26}},UndefinedVariable "platforms"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 31, sourceColumn = Pos 49}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 31, sourceColumn = Pos 55}},UndefinedVariable "globin"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 31, sourceColumn = Pos 39}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 31, sourceColumn = Pos 48}},UndefinedVariable "willibutz"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 31, sourceColumn = Pos 19}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 31, sourceColumn = Pos 57}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 10}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 31, sourceColumn = Pos 24}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 31, sourceColumn = Pos 35}},UndefinedVariable "maintainers"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 15}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 28}},KeyNotPresent "gpl3"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 15}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 28}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 8}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 15}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 30, sourceColumn = Pos 23}},UndefinedVariable "licenses"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 27, sourceColumn = Pos 10}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 33, sourceColumn = Pos 4}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 7}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 27, sourceColumn = Pos 15}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 27, sourceColumn = Pos 25}},KeyNotPresent "lib"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 27, sourceColumn = Pos 15}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 27, sourceColumn = Pos 25}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 25, sourceColumn = Pos 20}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 25, sourceColumn = Pos 71}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 6}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 25, sourceColumn = Pos 30}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 25, sourceColumn = Pos 63}},KeyNotPresent "prometheus-exporters"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 25, sourceColumn = Pos 30}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 25, sourceColumn = Pos 63}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 4})]
[]
âˆ€ Î³ Î´ Îµ Î¶ Î·. { buildGoPackage = { goDeps = Path; goPackagePath = String; meta = { description = String; homepage = String; license = âˆ€ Î±. Î±; maintainers = âˆ€ Î±. [Î±]; platforms = âˆ€ Î±. Î± }; nativeBuildInputs = [Î³]; passthru = { tests = {  } }; pname = String; postInstall = String; src = { owner = String; repo = String; rev = String; sha256 = String }; version = String } -> Î´; fetchFromGitHub = { owner = String; repo = String; rev = String; sha256 = String } -> Îµ; installShellFiles = Î³; nixosTests = Î¶; stdenv = Î· } -> { goDeps = Path; goPackagePath = String; meta = { description = String; homepage = String; license = âˆ€ Î². Î²; maintainers = âˆ€ Î². [Î²]; platforms = âˆ€ Î². Î² }; nativeBuildInputs = [Î³]; passthru = { tests = {  } }; pname = String; postInstall = String; src = { owner = String; repo = String; rev = String; sha256 = String }; version = String }