[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 25, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 25, sourceColumn = Pos 37}},KeyNotPresent "lib"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 25, sourceColumn = Pos 13}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 25, sourceColumn = Pos 37}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 20})]
[]
âˆ€ Î³ Î´ Îµ Î¶. { Glob = Î³; QuickCheck = Î³; array = Î³; async = Î³; base = Î³; bytestring = Î³; containers = Î³; crackNum = Î³; deepseq = Î³; directory = Î³; doctest = Î³; filepath = Î³; generic-deriving = Î³; ghc = Î³; hlint = Î³; mkDerivation = { description = String; enableSeparateDataOutput = Bool; homepage = String; libraryHaskellDepends = [Î³]; license = âˆ€ Î±. Î±; pname = String; sha256 = String; testHaskellDepends = [Î³]; testSystemDepends = [Î´]; version = String } -> Îµ; mtl = Î³; pretty = Î³; process = Î³; random = Î³; stdenv = Î¶; syb = Î³; tasty = Î³; tasty-golden = Î³; tasty-hunit = Î³; tasty-quickcheck = Î³; template-haskell = Î³; time = Î³; z3 = Î´ } -> { description = String; enableSeparateDataOutput = Bool; homepage = String; libraryHaskellDepends = [Î³]; license = âˆ€ Î². Î²; pname = String; sha256 = String; testHaskellDepends = [Î³]; testSystemDepends = [Î´]; version = String }