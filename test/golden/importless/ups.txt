∀ ε ζ η. { config = ε; lib = ζ; pkgs = η } -> { config = { environment = { etc = { nut/nut.conf = { source = String }; nut/ups.conf = { source = String }; nut/upssched.conf = { source = ∀ β. β } }; systemPackages = ∀ δ. [δ] }; power = { ups = { schedulerRules = String } }; system = { activationScripts = { upsSetup = String } }; systemd = { services = { upsd = { after = [String]; description = String; environment = { NUT_CONFPATH = String; NUT_STATEPATH = String }; script = String; serviceConfig = { Type = String }; wantedBy = [String] }; upsdrv = { after = [String]; description = String; environment = { NUT_CONFPATH = String; NUT_STATEPATH = String }; script = String; serviceConfig = { RemainAfterExit = Bool; Type = String }; wantedBy = [String] }; upsmon = { after = [String]; description = String; environment = { NUT_CONFPATH = String; NUT_STATEPATH = String }; script = String; serviceConfig = { Type = String }; wantedBy = [String] } } } }; options = { power = { ups = { enable = { default = Bool; description = String; type = ∀ β. β }; maxStartDelay = { default = Integer; description = String; type = ∀ β. β }; mode = { default = String; description = String; type = ∀ β. β }; schedulerRules = { description = String; example = String; type = ∀ β. β }; ups = { default = {  }; description = String; type = ∀ β γ. { config = β; name = γ } -> { config = { directives = [String]; summary = [String] }; options = { description = { default = String; description = String; type = ∀ α. α }; directives = { default = ∀ α. α; description = String; type = ∀ α. α }; driver = { description = String; type = ∀ α. α }; maxStartDelay = { default = Null; description = String; type = ∀ α. α }; port = { description = String; type = ∀ α. α }; shutdownOrder = { default = Integer; description = String; type = ∀ α. α }; summary = { default = String; description = String; type = ∀ α. α } } } } } } } }