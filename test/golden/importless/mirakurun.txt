∀ δ ε ζ. { config = δ; lib = ε; pkgs = ζ } -> { config = { environment = { etc = { mirakurun/channels.yml = { group = ∀ β. β; mode = String; source = ∀ β. β; user = ∀ β. β }; mirakurun/server.yml = { source = ∀ β. β }; mirakurun/tuners.yml = { group = ∀ β. β; mode = String; source = ∀ β. β; user = ∀ β. β } }; systemPackages = [∀ γ. γ] }; networking = { firewall = { allowedTCPPorts = ∀ γ. [γ] } }; services = { mirakurun = { serverSettings = { logLevel = Integer; path = String; port = ∀ β. β } } }; systemd = { services = { mirakurun = { after = [String]; description = ∀ β. β; environment = { CHANNELS_CONFIG_PATH = String; NODE_ENV = String; PROGRAMS_DB_PATH = String; SERVER_CONFIG_PATH = String; SERVICES_DB_PATH = String; TUNERS_CONFIG_PATH = String }; restartTriggers = [String]; serviceConfig = { ExecStart = String; Group = ∀ α. α; IOSchedulingClass = String; IOSchedulingPriority = Integer; Nice = Integer; RuntimeDirectory = String; StateDirectory = String; User = ∀ α. α }; wantedBy = [String] } }; tmpfiles = { rules = [String] } }; users = { users = { mirakurun = { description = String; group = String; isSystemUser = Bool } } } }; options = { services = { mirakurun = { channelSettings = { default = Null; description = String; example = String; type = ∀ β. β }; enable = ∀ γ. γ; openFirewall = { default = Bool; description = String; type = ∀ β. β }; port = { default = Integer; description = String; type = ∀ β. β }; serverSettings = { default = {  }; description = String; example = String; type = ∀ β. β }; tunerSettings = { default = Null; description = String; example = String; type = ∀ β. β } } } } }