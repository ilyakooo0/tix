{ components =
    { abode = ∀ α β. α -> [β];
      accuweather = ∀ α β. α -> [β];
      acer_projector = ∀ α β. (α.pyserial = β) => α -> [β];
      acmeda = ∀ α β. α -> [β];
      actiontec = ∀ α β. α -> [β];
      adguard = ∀ α β. α -> [β];
      ads = ∀ α β. α -> [β];
      aftership = ∀ α β. α -> [β];
      agent_dvr = ∀ α β. α -> [β];
      air_quality = ∀ α β. α -> [β];
      airly = ∀ α β. α -> [β];
      airvisual = ∀ α β. (α.pyairvisual = β) => α -> [β];
      aladdin_connect = ∀ α β. α -> [β];
      alarm_control_panel = ∀ α β. α -> [β];
      alarmdecoder = ∀ α β. α -> [β];
      alert = ∀ α β. α -> [β];
      alexa = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      almond = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      alpha_vantage = ∀ α β. α -> [β];
      amazon_polly = ∀ α β. (α.boto3 = β) => α -> [β];
      ambiclimate = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      ambient_station = ∀ α β. α -> [β];
      amcrest = ∀ α β. (α.ha-ffmpeg = β) => α -> [β];
      ampio = ∀ α β. α -> [β];
      android_ip_webcam = ∀ α β. α -> [β];
      androidtv = ∀ α β. α -> [β];
      anel_pwrctrl = ∀ α β. α -> [β];
      anthemav = ∀ α β. α -> [β];
      apache_kafka = ∀ α β. (α.aiokafka = β) => α -> [β];
      apcupsd = ∀ α β. α -> [β];
      api = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      apns = ∀ α β. α -> [β];
      apple_tv =
        ∀ α β.
        ( α.aiohttp-cors = β,
          α.netdisco = β,
          α.pyatv = β,
          α.zeroconf = β
        ) =>
        α -> [β];
      apprise = ∀ α β. (α.apprise = β) => α -> [β];
      aprs = ∀ α β. α -> [β];
      aqualogic = ∀ α β. α -> [β];
      aquostv = ∀ α β. α -> [β];
      arcam_fmj = ∀ α β. α -> [β];
      arduino = ∀ α β. α -> [β];
      arest = ∀ α β. α -> [β];
      arlo = ∀ α β. (α.ha-ffmpeg = β) => α -> [β];
      arris_tg2492lg = ∀ α β. α -> [β];
      aruba = ∀ α β. (α.pexpect = β) => α -> [β];
      arwn = ∀ α β. (α.aiohttp-cors = β, α.paho-mqtt = β) => α -> [β];
      asterisk_cdr = ∀ α β. α -> [β];
      asterisk_mbox = ∀ α β. α -> [β];
      asuswrt = ∀ α β. α -> [β];
      atag = ∀ α β. α -> [β];
      aten_pe = ∀ α β. α -> [β];
      atome = ∀ α β. α -> [β];
      august = ∀ α β. α -> [β];
      aurora = ∀ α β. α -> [β];
      aurora_abb_powerone = ∀ α β. α -> [β];
      auth = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      automation = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      avea = ∀ α β. α -> [β];
      avion = ∀ α β. α -> [β];
      avri = ∀ α β. (α.pycountry = β) => α -> [β];
      awair = ∀ α β. α -> [β];
      aws = ∀ α β. α -> [β];
      axis = ∀ α β. (α.aiohttp-cors = β, α.paho-mqtt = β) => α -> [β];
      azure_devops = ∀ α β. α -> [β];
      azure_event_hub = ∀ α β. α -> [β];
      azure_service_bus = ∀ α β. (α.azure-servicebus = β) => α -> [β];
      baidu = ∀ α β. α -> [β];
      bayesian = ∀ α β. α -> [β];
      bbb_gpio = ∀ α β. α -> [β];
      bbox = ∀ α β. α -> [β];
      beewi_smartclim = ∀ α β. α -> [β];
      bh1750 = ∀ α β. α -> [β];
      binary_sensor = ∀ α β. α -> [β];
      bitcoin = ∀ α β. α -> [β];
      bizkaibus = ∀ α β. α -> [β];
      blackbird = ∀ α β. α -> [β];
      blebox = ∀ α β. α -> [β];
      blink = ∀ α β. α -> [β];
      blinksticklight = ∀ α β. (α.BlinkStick = β) => α -> [β];
      blinkt = ∀ α β. α -> [β];
      blockchain = ∀ α β. α -> [β];
      bloomsky = ∀ α β. α -> [β];
      bluesound = ∀ α β. (α.xmltodict = β) => α -> [β];
      bluetooth_le_tracker = ∀ α β. α -> [β];
      bluetooth_tracker = ∀ α β. (α.bt_proximity = β) => α -> [β];
      bme280 = ∀ α β. α -> [β];
      bme680 = ∀ α β. α -> [β];
      bmp280 = ∀ α β. α -> [β];
      bmw_connected_drive = ∀ α β. α -> [β];
      bom = ∀ α β. α -> [β];
      bond = ∀ α β. α -> [β];
      braviatv = ∀ α β. (α.bravia-tv = β) => α -> [β];
      broadlink = ∀ α β. (α.broadlink = β) => α -> [β];
      brother = ∀ α β. (α.brother = β) => α -> [β];
      brottsplatskartan = ∀ α β. α -> [β];
      browser = ∀ α β. α -> [β];
      brunt = ∀ α β. α -> [β];
      bsblan = ∀ α β. α -> [β];
      bt_home_hub_5 = ∀ α β. α -> [β];
      bt_smarthub = ∀ α β. α -> [β];
      buienradar = ∀ α β. α -> [β];
      caldav = ∀ α β. (α.caldav = β) => α -> [β];
      calendar = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      camera = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      canary = ∀ α β. (α.ha-ffmpeg = β) => α -> [β];
      cast =
        ∀ α β.
        ( α.PyChromecast = β,
          α.aiohttp-cors = β,
          α.hass-nabucasa = β,
          α.zeroconf = β
        ) =>
        α -> [β];
      cert_expiry = ∀ α β. α -> [β];
      channels = ∀ α β. α -> [β];
      circuit = ∀ α β. α -> [β];
      cisco_ios = ∀ α β. (α.pexpect = β) => α -> [β];
      cisco_mobility_express = ∀ α β. α -> [β];
      cisco_webex_teams = ∀ α β. α -> [β];
      citybikes = ∀ α β. α -> [β];
      clementine = ∀ α β. α -> [β];
      clickatell = ∀ α β. α -> [β];
      clicksend = ∀ α β. α -> [β];
      clicksend_tts = ∀ α β. α -> [β];
      climate = ∀ α β. α -> [β];
      cloud = ∀ α β. (α.aiohttp-cors = β, α.hass-nabucasa = β) => α -> [β];
      cloudflare = ∀ α β. α -> [β];
      cmus = ∀ α β. α -> [β];
      co2signal = ∀ α β. α -> [β];
      coinbase = ∀ α β. α -> [β];
      coinmarketcap = ∀ α β. (α.coinmarketcap = β) => α -> [β];
      comed_hourly_pricing = ∀ α β. α -> [β];
      comfoconnect = ∀ α β. α -> [β];
      command_line = ∀ α β. α -> [β];
      concord232 = ∀ α β. α -> [β];
      config = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      configurator = ∀ α β. α -> [β];
      control4 = ∀ α β. α -> [β];
      conversation = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      coolmaster = ∀ α β. α -> [β];
      coronavirus = ∀ α β. α -> [β];
      counter = ∀ α β. α -> [β];
      cover = ∀ α β. α -> [β];
      cppm_tracker = ∀ α β. α -> [β];
      cpuspeed = ∀ α β. (α.py-cpuinfo = β) => α -> [β];
      crimereports = ∀ α β. α -> [β];
      cups = ∀ α β. (α.pycups = β) => α -> [β];
      currencylayer = ∀ α β. α -> [β];
      daikin = ∀ α β. α -> [β];
      danfoss_air = ∀ α β. α -> [β];
      darksky = ∀ α β. (α.python-forecastio = β) => α -> [β];
      datadog = ∀ α β. (α.datadog = β) => α -> [β];
      ddwrt = ∀ α β. α -> [β];
      debugpy = ∀ α β. (α.debugpy = β) => α -> [β];
      deconz = ∀ α β. α -> [β];
      decora = ∀ α β. (α.bluepy = β) => α -> [β];
      decora_wifi = ∀ α β. α -> [β];
      default_config =
        ∀ α β.
        ( α.aiohttp-cors = β,
          α.defusedxml = β,
          α.distro = β,
          α.emoji = β,
          α.hass-nabucasa = β,
          α.netdisco = β,
          α.pynacl = β,
          α.sqlalchemy = β,
          α.zeroconf = β
        ) =>
        α -> [β];
      delijn = ∀ α β. α -> [β];
      deluge = ∀ α β. (α.deluge-client = β) => α -> [β];
      demo = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      denon = ∀ α β. α -> [β];
      denonavr = ∀ α β. (α.denonavr = β, α.getmac = β) => α -> [β];
      derivative = ∀ α β. α -> [β];
      deutsche_bahn = ∀ α β. α -> [β];
      device_automation = ∀ α β. α -> [β];
      device_sun_light_trigger = ∀ α β. α -> [β];
      device_tracker = ∀ α β. α -> [β];
      devolo_home_control = ∀ α β. α -> [β];
      dexcom = ∀ α β. α -> [β];
      dht = ∀ α β. α -> [β];
      dialogflow = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      digital_ocean = ∀ α β. (α.digital-ocean = β) => α -> [β];
      digitalloggers = ∀ α β. α -> [β];
      directv = ∀ α β. α -> [β];
      discogs = ∀ α β. (α.discogs_client = β) => α -> [β];
      discord = ∀ α β. (α.discordpy = β) => α -> [β];
      discovery =
        ∀ α β. (α.aiohttp-cors = β, α.netdisco = β, α.zeroconf = β) => α -> [β];
      dlib_face_detect = ∀ α β. (α.face_recognition = β) => α -> [β];
      dlib_face_identify = ∀ α β. (α.face_recognition = β) => α -> [β];
      dlink = ∀ α β. α -> [β];
      dlna_dmr = ∀ α β. (α.async-upnp-client = β) => α -> [β];
      dnsip = ∀ α β. (α.aiodns = β) => α -> [β];
      dominos = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      doods = ∀ α β. (α.pillow = β) => α -> [β];
      doorbird = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      dovado = ∀ α β. α -> [β];
      downloader = ∀ α β. α -> [β];
      dsmr = ∀ α β. α -> [β];
      dsmr_reader = ∀ α β. (α.aiohttp-cors = β, α.paho-mqtt = β) => α -> [β];
      dte_energy_bridge = ∀ α β. α -> [β];
      dublin_bus_transport = ∀ α β. α -> [β];
      duckdns = ∀ α β. α -> [β];
      dunehd = ∀ α β. α -> [β];
      dwd_weather_warnings =
        ∀ α β. (α.jsonpath = β, α.xmltodict = β) => α -> [β];
      dweet = ∀ α β. α -> [β];
      dynalite = ∀ α β. α -> [β];
      dyson = ∀ α β. (α.aiohttp-cors = β, α.zeroconf = β) => α -> [β];
      ebox = ∀ α β. α -> [β];
      ebusd = ∀ α β. α -> [β];
      ecoal_boiler = ∀ α β. α -> [β];
      ecobee = ∀ α β. α -> [β];
      econet = ∀ α β. α -> [β];
      ecovacs = ∀ α β. α -> [β];
      eddystone_temperature = ∀ α β. (α.construct = β) => α -> [β];
      edimax = ∀ α β. α -> [β];
      edl21 = ∀ α β. α -> [β];
      ee_brightbox = ∀ α β. α -> [β];
      efergy = ∀ α β. α -> [β];
      egardia = ∀ α β. α -> [β];
      eight_sleep = ∀ α β. α -> [β];
      elgato = ∀ α β. α -> [β];
      eliqonline = ∀ α β. α -> [β];
      elkm1 = ∀ α β. α -> [β];
      elv = ∀ α β. α -> [β];
      emby = ∀ α β. α -> [β];
      emoncms = ∀ α β. α -> [β];
      emoncms_history = ∀ α β. α -> [β];
      emulated_hue = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      emulated_roku = ∀ α β. α -> [β];
      enigma2 = ∀ α β. (α.openwebifpy = β) => α -> [β];
      enocean = ∀ α β. α -> [β];
      enphase_envoy = ∀ α β. α -> [β];
      entur_public_transport = ∀ α β. α -> [β];
      environment_canada = ∀ α β. α -> [β];
      envirophat = ∀ α β. α -> [β];
      envisalink = ∀ α β. α -> [β];
      ephember = ∀ α β. α -> [β];
      epson = ∀ α β. α -> [β];
      epsonworkforce = ∀ α β. α -> [β];
      eq3btsmart = ∀ α β. (α.construct = β) => α -> [β];
      esphome = ∀ α β. (α.aioesphomeapi = β) => α -> [β];
      essent = ∀ α β. α -> [β];
      etherscan = ∀ α β. α -> [β];
      eufy = ∀ α β. α -> [β];
      everlights = ∀ α β. α -> [β];
      evohome = ∀ α β. α -> [β];
      ezviz = ∀ α β. α -> [β];
      facebook = ∀ α β. α -> [β];
      facebox = ∀ α β. α -> [β];
      fail2ban = ∀ α β. α -> [β];
      familyhub = ∀ α β. α -> [β];
      fan = ∀ α β. α -> [β];
      fastdotcom = ∀ α β. α -> [β];
      feedreader = ∀ α β. α -> [β];
      ffmpeg = ∀ α β. (α.ha-ffmpeg = β) => α -> [β];
      ffmpeg_motion = ∀ α β. (α.ha-ffmpeg = β) => α -> [β];
      ffmpeg_noise = ∀ α β. (α.ha-ffmpeg = β) => α -> [β];
      fibaro = ∀ α β. α -> [β];
      fido = ∀ α β. α -> [β];
      file = ∀ α β. α -> [β];
      filesize = ∀ α β. α -> [β];
      filter = ∀ α β. (α.aiohttp-cors = β, α.sqlalchemy = β) => α -> [β];
      fints = ∀ α β. (α.fints = β) => α -> [β];
      firmata = ∀ α β. α -> [β];
      fitbit = ∀ α β. (α.aiohttp-cors = β, α.fitbit = β) => α -> [β];
      fixer = ∀ α β. α -> [β];
      fleetgo = ∀ α β. α -> [β];
      flexit = ∀ α β. α -> [β];
      flic = ∀ α β. α -> [β];
      flick_electric = ∀ α β. α -> [β];
      flock = ∀ α β. α -> [β];
      flume = ∀ α β. α -> [β];
      flunearyou = ∀ α β. α -> [β];
      flux = ∀ α β. α -> [β];
      flux_led = ∀ α β. (α.flux-led = β) => α -> [β];
      folder = ∀ α β. α -> [β];
      folder_watcher = ∀ α β. (α.watchdog = β) => α -> [β];
      foobot = ∀ α β. α -> [β];
      forked_daapd = ∀ α β. α -> [β];
      fortios = ∀ α β. α -> [β];
      foscam = ∀ α β. α -> [β];
      foursquare = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      free_mobile = ∀ α β. α -> [β];
      freebox =
        ∀ α β. (α.aiohttp-cors = β, α.netdisco = β, α.zeroconf = β) => α -> [β];
      freedns = ∀ α β. α -> [β];
      fritz = ∀ α β. (α.fritzconnection = β) => α -> [β];
      fritzbox = ∀ α β. (α.pyfritzhome = β) => α -> [β];
      fritzbox_callmonitor = ∀ α β. (α.fritzconnection = β) => α -> [β];
      fritzbox_netmonitor = ∀ α β. (α.fritzconnection = β) => α -> [β];
      fronius = ∀ α β. α -> [β];
      frontend = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      frontier_silicon = ∀ α β. α -> [β];
      futurenow = ∀ α β. α -> [β];
      garadget = ∀ α β. α -> [β];
      garmin_connect = ∀ α β. α -> [β];
      gc100 = ∀ α β. α -> [β];
      gdacs = ∀ α β. α -> [β];
      geizhals = ∀ α β. α -> [β];
      generic = ∀ α β. α -> [β];
      generic_thermostat = ∀ α β. α -> [β];
      geniushub = ∀ α β. α -> [β];
      geo_json_events = ∀ α β. α -> [β];
      geo_location = ∀ α β. α -> [β];
      geo_rss_events = ∀ α β. α -> [β];
      geofency = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      geonetnz_quakes = ∀ α β. α -> [β];
      geonetnz_volcano = ∀ α β. α -> [β];
      gios = ∀ α β. α -> [β];
      github = ∀ α β. (α.PyGithub = β) => α -> [β];
      gitlab_ci = ∀ α β. (α.python-gitlab = β) => α -> [β];
      gitter = ∀ α β. α -> [β];
      glances = ∀ α β. α -> [β];
      gntp = ∀ α β. α -> [β];
      goalfeed = ∀ α β. α -> [β];
      gogogate2 = ∀ α β. α -> [β];
      google =
        ∀ α β.
        ( α.google_api_python_client = β,
          α.httplib2 = β,
          α.oauth2client = β
        ) =>
        α -> [β];
      google_assistant = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      google_cloud = ∀ α β. (α.google_cloud_texttospeech = β) => α -> [β];
      google_domains = ∀ α β. α -> [β];
      google_maps = ∀ α β. α -> [β];
      google_pubsub = ∀ α β. (α.google_cloud_pubsub = β) => α -> [β];
      google_translate = ∀ α β. (α.gtts-token = β) => α -> [β];
      google_travel_time = ∀ α β. α -> [β];
      google_wifi = ∀ α β. α -> [β];
      gpmdp = ∀ α β. (α.websocket_client = β) => α -> [β];
      gpsd = ∀ α β. α -> [β];
      gpslogger = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      graphite = ∀ α β. α -> [β];
      greeneye_monitor = ∀ α β. α -> [β];
      greenwave = ∀ α β. α -> [β];
      griddy = ∀ α β. α -> [β];
      group = ∀ α β. α -> [β];
      growatt_server = ∀ α β. α -> [β];
      gstreamer = ∀ α β. α -> [β];
      gtfs = ∀ α β. α -> [β];
      guardian = ∀ α β. α -> [β];
      habitica = ∀ α β. α -> [β];
      hangouts = ∀ α β. α -> [β];
      harman_kardon_avr = ∀ α β. α -> [β];
      harmony = ∀ α β. (α.aioharmony = β) => α -> [β];
      hassio = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      haveibeenpwned = ∀ α β. α -> [β];
      hddtemp = ∀ α β. α -> [β];
      hdmi_cec = ∀ α β. α -> [β];
      heatmiser = ∀ α β. α -> [β];
      heos = ∀ α β. α -> [β];
      here_travel_time = ∀ α β. α -> [β];
      hikvision = ∀ α β. α -> [β];
      hikvisioncam = ∀ α β. α -> [β];
      hisense_aehw4a1 = ∀ α β. α -> [β];
      history = ∀ α β. (α.aiohttp-cors = β, α.sqlalchemy = β) => α -> [β];
      history_stats = ∀ α β. (α.aiohttp-cors = β, α.sqlalchemy = β) => α -> [β];
      hitron_coda = ∀ α β. α -> [β];
      hive = ∀ α β. α -> [β];
      hlk_sw16 = ∀ α β. α -> [β];
      home_connect = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      homeassistant = ∀ α β. α -> [β];
      homekit =
        ∀ α β.
        ( α.HAP-python = β,
          α.aiohttp-cors = β,
          α.ha-ffmpeg = β,
          α.pyqrcode = β,
          α.zeroconf = β
        ) =>
        α -> [β];
      homekit_controller =
        ∀ α β. (α.aiohttp-cors = β, α.zeroconf = β) => α -> [β];
      homematic = ∀ α β. (α.pyhomematic = β) => α -> [β];
      homematicip_cloud = ∀ α β. α -> [β];
      homeworks = ∀ α β. α -> [β];
      honeywell = ∀ α β. α -> [β];
      horizon = ∀ α β. α -> [β];
      hp_ilo = ∀ α β. α -> [β];
      html5 = ∀ α β. (α.aiohttp-cors = β, α.pywebpush = β) => α -> [β];
      http = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      htu21d = ∀ α β. α -> [β];
      huawei_lte = ∀ α β. (α.getmac = β, α.stringcase = β) => α -> [β];
      huawei_router = ∀ α β. α -> [β];
      hue = ∀ α β. (α.aiohue = β) => α -> [β];
      humidifier = ∀ α β. α -> [β];
      hunterdouglas_powerview = ∀ α β. α -> [β];
      hvv_departures = ∀ α β. α -> [β];
      hydrawise = ∀ α β. α -> [β];
      hyperion = ∀ α β. α -> [β];
      ialarm = ∀ α β. α -> [β];
      iammeter = ∀ α β. α -> [β];
      iaqualink = ∀ α β. α -> [β];
      icloud = ∀ α β. (α.pyicloud = β) => α -> [β];
      idteck_prox = ∀ α β. α -> [β];
      ifttt = ∀ α β. (α.aiohttp-cors = β, α.pyfttt = β) => α -> [β];
      iglo = ∀ α β. α -> [β];
      ign_sismologia = ∀ α β. α -> [β];
      ihc = ∀ α β. (α.defusedxml = β) => α -> [β];
      image_processing = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      imap = ∀ α β. α -> [β];
      imap_email_content = ∀ α β. α -> [β];
      incomfort = ∀ α β. α -> [β];
      influxdb = ∀ α β. (α.influxdb = β, α.influxdb-client = β) => α -> [β];
      input_boolean = ∀ α β. α -> [β];
      input_datetime = ∀ α β. α -> [β];
      input_number = ∀ α β. α -> [β];
      input_select = ∀ α β. α -> [β];
      input_text = ∀ α β. α -> [β];
      insteon = ∀ α β. α -> [β];
      integration = ∀ α β. α -> [β];
      intent = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      intent_script = ∀ α β. α -> [β];
      intesishome = ∀ α β. α -> [β];
      ios = ∀ α β. (α.aiohttp-cors = β, α.zeroconf = β) => α -> [β];
      iota = ∀ α β. α -> [β];
      iperf3 = ∀ α β. α -> [β];
      ipma = ∀ α β. α -> [β];
      ipp = ∀ α β. (α.pyipp = β) => α -> [β];
      iqvia = ∀ α β. (α.numpy = β) => α -> [β];
      irish_rail_transport = ∀ α β. α -> [β];
      islamic_prayer_times = ∀ α β. α -> [β];
      iss = ∀ α β. α -> [β];
      isy994 = ∀ α β. α -> [β];
      itach = ∀ α β. α -> [β];
      itunes = ∀ α β. α -> [β];
      izone = ∀ α β. α -> [β];
      jewish_calendar = ∀ α β. α -> [β];
      joaoapps_join = ∀ α β. α -> [β];
      juicenet = ∀ α β. α -> [β];
      kaiterra = ∀ α β. α -> [β];
      kankun = ∀ α β. α -> [β];
      keba = ∀ α β. α -> [β];
      keenetic_ndms2 = ∀ α β. α -> [β];
      kef = ∀ α β. (α.getmac = β) => α -> [β];
      keyboard = ∀ α β. α -> [β];
      keyboard_remote = ∀ α β. (α.evdev = β) => α -> [β];
      kira = ∀ α β. α -> [β];
      kiwi = ∀ α β. α -> [β];
      knx = ∀ α β. α -> [β];
      kodi = ∀ α β. (α.jsonrpc-async = β, α.jsonrpc-websocket = β) => α -> [β];
      konnected = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      kwb = ∀ α β. α -> [β];
      lacrosse = ∀ α β. α -> [β];
      lametric = ∀ α β. α -> [β];
      lannouncer = ∀ α β. α -> [β];
      lastfm = ∀ α β. (α.pylast = β) => α -> [β];
      launch_library = ∀ α β. α -> [β];
      lcn = ∀ α β. α -> [β];
      lg_netcast = ∀ α β. α -> [β];
      lg_soundbar = ∀ α β. α -> [β];
      life360 = ∀ α β. α -> [β];
      lifx = ∀ α β. (α.aiolifx = β, α.aiolifx-effects = β) => α -> [β];
      lifx_cloud = ∀ α β. α -> [β];
      lifx_legacy = ∀ α β. α -> [β];
      light = ∀ α β. α -> [β];
      lightwave = ∀ α β. α -> [β];
      limitlessled = ∀ α β. (α.limitlessled = β) => α -> [β];
      linksys_smart = ∀ α β. α -> [β];
      linode = ∀ α β. (α.linode-api = β) => α -> [β];
      linux_battery = ∀ α β. (α.batinfo = β) => α -> [β];
      lirc = ∀ α β. α -> [β];
      litejet = ∀ α β. α -> [β];
      llamalab_automate = ∀ α β. α -> [β];
      local_file = ∀ α β. α -> [β];
      local_ip = ∀ α β. α -> [β];
      locative = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      lock = ∀ α β. α -> [β];
      logbook = ∀ α β. (α.aiohttp-cors = β, α.sqlalchemy = β) => α -> [β];
      logentries = ∀ α β. α -> [β];
      logger = ∀ α β. α -> [β];
      logi_circle = ∀ α β. (α.aiohttp-cors = β, α.ha-ffmpeg = β) => α -> [β];
      london_air = ∀ α β. α -> [β];
      london_underground = ∀ α β. α -> [β];
      loopenergy = ∀ α β. α -> [β];
      lovelace = ∀ α β. α -> [β];
      luci = ∀ α β. (α.openwrt-luci-rpc = β) => α -> [β];
      luftdaten = ∀ α β. (α.luftdaten = β) => α -> [β];
      lupusec = ∀ α β. α -> [β];
      lutron = ∀ α β. α -> [β];
      lutron_caseta = ∀ α β. α -> [β];
      lw12wifi = ∀ α β. α -> [β];
      lyft = ∀ α β. α -> [β];
      magicseaweed = ∀ α β. α -> [β];
      mailbox = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      mailgun = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      manual = ∀ α β. α -> [β];
      manual_mqtt = ∀ α β. (α.aiohttp-cors = β, α.paho-mqtt = β) => α -> [β];
      map = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      marytts = ∀ α β. α -> [β];
      mastodon = ∀ α β. α -> [β];
      matrix = ∀ α β. (α.matrix-client = β) => α -> [β];
      maxcube = ∀ α β. α -> [β];
      mcp23017 = ∀ α β. α -> [β];
      media_extractor =
        ∀ α β. (α.aiohttp-cors = β, α.youtube-dl-light = β) => α -> [β];
      media_player = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      mediaroom = ∀ α β. α -> [β];
      melcloud = ∀ α β. α -> [β];
      melissa = ∀ α β. α -> [β];
      meraki = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      message_bird = ∀ α β. α -> [β];
      met = ∀ α β. (α.pymetno = β) => α -> [β];
      meteo_france = ∀ α β. α -> [β];
      meteoalarm = ∀ α β. α -> [β];
      metoffice = ∀ α β. α -> [β];
      mfi = ∀ α β. α -> [β];
      mhz19 = ∀ α β. α -> [β];
      microsoft = ∀ α β. α -> [β];
      microsoft_face = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      microsoft_face_detect = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      microsoft_face_identify = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      miflora = ∀ α β. (α.bluepy = β) => α -> [β];
      mikrotik = ∀ α β. α -> [β];
      mill = ∀ α β. α -> [β];
      min_max = ∀ α β. α -> [β];
      minecraft_server = ∀ α β. (α.aiodns = β, α.getmac = β) => α -> [β];
      minio = ∀ α β. (α.minio = β) => α -> [β];
      mitemp_bt = ∀ α β. α -> [β];
      mjpeg = ∀ α β. α -> [β];
      mobile_app =
        ∀ α β.
        ( α.aiohttp-cors = β,
          α.emoji = β,
          α.hass-nabucasa = β,
          α.pynacl = β
        ) =>
        α -> [β];
      mochad = ∀ α β. α -> [β];
      modbus = ∀ α β. α -> [β];
      modem_callerid = ∀ α β. α -> [β];
      mold_indicator = ∀ α β. α -> [β];
      monoprice = ∀ α β. α -> [β];
      moon = ∀ α β. α -> [β];
      mpchc = ∀ α β. α -> [β];
      mpd = ∀ α β. (α.mpd2 = β) => α -> [β];
      mqtt = ∀ α β. (α.aiohttp-cors = β, α.paho-mqtt = β) => α -> [β];
      mqtt_eventstream =
        ∀ α β. (α.aiohttp-cors = β, α.paho-mqtt = β) => α -> [β];
      mqtt_json = ∀ α β. (α.aiohttp-cors = β, α.paho-mqtt = β) => α -> [β];
      mqtt_room = ∀ α β. (α.aiohttp-cors = β, α.paho-mqtt = β) => α -> [β];
      mqtt_statestream =
        ∀ α β. (α.aiohttp-cors = β, α.paho-mqtt = β) => α -> [β];
      msteams = ∀ α β. α -> [β];
      mvglive = ∀ α β. (α.PyMVGLive = β) => α -> [β];
      mychevy = ∀ α β. α -> [β];
      mycroft = ∀ α β. α -> [β];
      myq = ∀ α β. α -> [β];
      mysensors = ∀ α β. (α.aiohttp-cors = β, α.paho-mqtt = β) => α -> [β];
      mystrom = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      mythicbeastsdns = ∀ α β. α -> [β];
      n26 = ∀ α β. α -> [β];
      nad = ∀ α β. α -> [β];
      namecheapdns = ∀ α β. (α.defusedxml = β) => α -> [β];
      nanoleaf = ∀ α β. (α.pynanoleaf = β) => α -> [β];
      neato = ∀ α β. (α.pybotvac = β) => α -> [β];
      nederlandse_spoorwegen = ∀ α β. α -> [β];
      nello = ∀ α β. α -> [β];
      ness_alarm = ∀ α β. α -> [β];
      nest = ∀ α β. α -> [β];
      netatmo =
        ∀ α β.
        (α.aiohttp-cors = β, α.hass-nabucasa = β, α.pyatmo = β) => α -> [β];
      netdata = ∀ α β. α -> [β];
      netgear = ∀ α β. α -> [β];
      netgear_lte = ∀ α β. α -> [β];
      netio = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      neurio_energy = ∀ α β. α -> [β];
      nexia = ∀ α β. α -> [β];
      nextbus = ∀ α β. α -> [β];
      nextcloud = ∀ α β. α -> [β];
      nfandroidtv = ∀ α β. α -> [β];
      niko_home_control = ∀ α β. α -> [β];
      nilu = ∀ α β. α -> [β];
      nissan_leaf = ∀ α β. α -> [β];
      nmap_tracker = ∀ α β. (α.getmac = β) => α -> [β];
      nmbs = ∀ α β. α -> [β];
      no_ip = ∀ α β. α -> [β];
      noaa_tides = ∀ α β. α -> [β];
      norway_air = ∀ α β. (α.pymetno = β) => α -> [β];
      notify = ∀ α β. α -> [β];
      notify_events = ∀ α β. α -> [β];
      notion = ∀ α β. α -> [β];
      nsw_fuel_station = ∀ α β. α -> [β];
      nsw_rural_fire_service_feed = ∀ α β. α -> [β];
      nuheat = ∀ α β. α -> [β];
      nuimo_controller = ∀ α β. α -> [β];
      nuki = ∀ α β. α -> [β];
      numato = ∀ α β. α -> [β];
      nut = ∀ α β. α -> [β];
      nws = ∀ α β. α -> [β];
      nx584 = ∀ α β. α -> [β];
      nzbget = ∀ α β. α -> [β];
      oasa_telematics = ∀ α β. α -> [β];
      obihai = ∀ α β. α -> [β];
      octoprint =
        ∀ α β. (α.aiohttp-cors = β, α.netdisco = β, α.zeroconf = β) => α -> [β];
      oem = ∀ α β. α -> [β];
      ohmconnect = ∀ α β. (α.defusedxml = β) => α -> [β];
      ombi = ∀ α β. α -> [β];
      onboarding = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      onewire = ∀ α β. α -> [β];
      onkyo = ∀ α β. (α.onkyo-eiscp = β) => α -> [β];
      onvif = ∀ α β. (α.ha-ffmpeg = β) => α -> [β];
      openalpr_cloud = ∀ α β. α -> [β];
      openalpr_local = ∀ α β. α -> [β];
      opencv = ∀ α β. (α.numpy = β) => α -> [β];
      openerz = ∀ α β. α -> [β];
      openevse = ∀ α β. α -> [β];
      openexchangerates = ∀ α β. α -> [β];
      opengarage = ∀ α β. α -> [β];
      openhardwaremonitor = ∀ α β. α -> [β];
      openhome = ∀ α β. α -> [β];
      opensensemap = ∀ α β. α -> [β];
      opensky = ∀ α β. α -> [β];
      opentherm_gw = ∀ α β. α -> [β];
      openuv = ∀ α β. α -> [β];
      openweathermap = ∀ α β. (α.pyowm = β) => α -> [β];
      opnsense = ∀ α β. α -> [β];
      opple = ∀ α β. α -> [β];
      orangepi_gpio = ∀ α β. α -> [β];
      oru = ∀ α β. α -> [β];
      orvibo = ∀ α β. α -> [β];
      osramlightify = ∀ α β. α -> [β];
      otp = ∀ α β. (α.pyotp = β) => α -> [β];
      ovo_energy = ∀ α β. α -> [β];
      owntracks =
        ∀ α β.
        ( α.aiohttp-cors = β,
          α.hass-nabucasa = β,
          α.paho-mqtt = β,
          α.pynacl = β
        ) =>
        α -> [β];
      ozw = ∀ α β. (α.aiohttp-cors = β, α.paho-mqtt = β) => α -> [β];
      panasonic_bluray = ∀ α β. α -> [β];
      panasonic_viera = ∀ α β. α -> [β];
      pandora = ∀ α β. (α.pexpect = β) => α -> [β];
      panel_custom = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      panel_iframe = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      pcal9535a = ∀ α β. α -> [β];
      pencom = ∀ α β. α -> [β];
      persistent_notification = ∀ α β. α -> [β];
      person = ∀ α β. α -> [β];
      philips_js = ∀ α β. α -> [β];
      pi4ioe5v9xxxx = ∀ α β. α -> [β];
      pi_hole = ∀ α β. α -> [β];
      picotts = ∀ α β. α -> [β];
      piglow = ∀ α β. α -> [β];
      pilight = ∀ α β. α -> [β];
      ping = ∀ α β. α -> [β];
      pioneer = ∀ α β. α -> [β];
      pjlink = ∀ α β. α -> [β];
      plaato = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      plant = ∀ α β. (α.sqlalchemy = β) => α -> [β];
      plex =
        ∀ α β.
        ( α.aiohttp-cors = β,
          α.plexapi = β,
          α.plexauth = β,
          α.plexwebsocket = β,
          α.pysonos = β
        ) =>
        α -> [β];
      plugwise = ∀ α β. α -> [β];
      plum_lightpad = ∀ α β. α -> [β];
      pocketcasts = ∀ α β. α -> [β];
      point = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      poolsense = ∀ α β. α -> [β];
      powerwall = ∀ α β. α -> [β];
      prezzibenzina = ∀ α β. α -> [β];
      proliphix = ∀ α β. α -> [β];
      prometheus =
        ∀ α β. (α.aiohttp-cors = β, α.prometheus_client = β) => α -> [β];
      prowl = ∀ α β. α -> [β];
      proximity = ∀ α β. α -> [β];
      proxmoxve = ∀ α β. α -> [β];
      proxy = ∀ α β. (α.pillow = β) => α -> [β];
      ps4 = ∀ α β. α -> [β];
      ptvsd = ∀ α β. α -> [β];
      pulseaudio_loopback = ∀ α β. (α.pulsectl = β) => α -> [β];
      push = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      pushbullet = ∀ α β. (α.pushbullet = β) => α -> [β];
      pushover = ∀ α β. (α.pushover-complete = β) => α -> [β];
      pushsafer = ∀ α β. α -> [β];
      pvoutput = ∀ α β. (α.jsonpath = β, α.xmltodict = β) => α -> [β];
      pvpc_hourly_pricing = ∀ α β. α -> [β];
      pyload = ∀ α β. α -> [β];
      python_script = ∀ α β. (α.restrictedpython = β) => α -> [β];
      qbittorrent = ∀ α β. α -> [β];
      qld_bushfire = ∀ α β. α -> [β];
      qnap = ∀ α β. α -> [β];
      qrcode = ∀ α β. (α.pillow = β) => α -> [β];
      quantum_gateway = ∀ α β. α -> [β];
      qvr_pro = ∀ α β. α -> [β];
      qwikswitch = ∀ α β. α -> [β];
      rachio = ∀ α β. (α.aiohttp-cors = β, α.hass-nabucasa = β) => α -> [β];
      radarr = ∀ α β. α -> [β];
      radiotherm = ∀ α β. α -> [β];
      rainbird = ∀ α β. α -> [β];
      raincloud = ∀ α β. α -> [β];
      rainforest_eagle = ∀ α β. α -> [β];
      rainmachine = ∀ α β. α -> [β];
      random = ∀ α β. α -> [β];
      raspihats = ∀ α β. α -> [β];
      raspyrfm = ∀ α β. α -> [β];
      recollect_waste = ∀ α β. α -> [β];
      recorder = ∀ α β. (α.sqlalchemy = β) => α -> [β];
      recswitch = ∀ α β. α -> [β];
      reddit = ∀ α β. (α.praw = β) => α -> [β];
      rejseplanen = ∀ α β. α -> [β];
      remember_the_milk = ∀ α β. (α.httplib2 = β) => α -> [β];
      remote = ∀ α β. α -> [β];
      remote_rpi_gpio = ∀ α β. α -> [β];
      repetier = ∀ α β. α -> [β];
      rest = ∀ α β. (α.jsonpath = β, α.xmltodict = β) => α -> [β];
      rest_command = ∀ α β. α -> [β];
      rflink = ∀ α β. α -> [β];
      rfxtrx = ∀ α β. α -> [β];
      ring = ∀ α β. (α.ha-ffmpeg = β) => α -> [β];
      ripple = ∀ α β. α -> [β];
      rmvtransport = ∀ α β. (α.PyRMVtransport = β) => α -> [β];
      rocketchat = ∀ α β. α -> [β];
      roku = ∀ α β. α -> [β];
      roomba = ∀ α β. α -> [β];
      route53 = ∀ α β. (α.boto3 = β) => α -> [β];
      rova = ∀ α β. α -> [β];
      rpi_camera = ∀ α β. α -> [β];
      rpi_gpio = ∀ α β. α -> [β];
      rpi_gpio_pwm = ∀ α β. α -> [β];
      rpi_pfio = ∀ α β. α -> [β];
      rpi_rf = ∀ α β. α -> [β];
      rss_feed_template = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      rtorrent = ∀ α β. α -> [β];
      russound_rio = ∀ α β. α -> [β];
      russound_rnet = ∀ α β. α -> [β];
      sabnzbd =
        ∀ α β. (α.aiohttp-cors = β, α.netdisco = β, α.zeroconf = β) => α -> [β];
      safe_mode = ∀ α β. (α.aiohttp-cors = β, α.hass-nabucasa = β) => α -> [β];
      saj = ∀ α β. α -> [β];
      salt = ∀ α β. α -> [β];
      samsungtv = ∀ α β. (α.samsungctl = β, α.samsungtvws = β) => α -> [β];
      satel_integra = ∀ α β. α -> [β];
      scene = ∀ α β. α -> [β];
      schluter = ∀ α β. α -> [β];
      scrape =
        ∀ α β.
        (α.beautifulsoup4 = β, α.jsonpath = β, α.xmltodict = β) => α -> [β];
      script = ∀ α β. α -> [β];
      scsgate = ∀ α β. α -> [β];
      search = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      season = ∀ α β. (α.ephem = β) => α -> [β];
      sendgrid = ∀ α β. α -> [β];
      sense = ∀ α β. α -> [β];
      sensehat = ∀ α β. α -> [β];
      sensibo = ∀ α β. α -> [β];
      sensor = ∀ α β. α -> [β];
      sentry = ∀ α β. (α.sentry-sdk = β) => α -> [β];
      serial = ∀ α β. (α.pyserial-asyncio = β) => α -> [β];
      serial_pm = ∀ α β. α -> [β];
      sesame = ∀ α β. α -> [β];
      seven_segments = ∀ α β. (α.pillow = β) => α -> [β];
      seventeentrack = ∀ α β. α -> [β];
      shell_command = ∀ α β. α -> [β];
      shiftr = ∀ α β. (α.paho-mqtt = β) => α -> [β];
      shodan = ∀ α β. (α.shodan = β) => α -> [β];
      shopping_list = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      sht31 = ∀ α β. α -> [β];
      sigfox = ∀ α β. α -> [β];
      sighthound = ∀ α β. (α.pillow = β) => α -> [β];
      signal_messenger = ∀ α β. α -> [β];
      simplepush = ∀ α β. α -> [β];
      simplisafe = ∀ α β. α -> [β];
      simulated = ∀ α β. α -> [β];
      sinch = ∀ α β. α -> [β];
      sisyphus = ∀ α β. α -> [β];
      sky_hub = ∀ α β. α -> [β];
      skybeacon = ∀ α β. α -> [β];
      skybell = ∀ α β. α -> [β];
      slack = ∀ α β. α -> [β];
      sleepiq = ∀ α β. α -> [β];
      slide = ∀ α β. α -> [β];
      sma = ∀ α β. α -> [β];
      smappee = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      smarthab = ∀ α β. α -> [β];
      smartthings =
        ∀ α β. (α.aiohttp-cors = β, α.hass-nabucasa = β) => α -> [β];
      smarty = ∀ α β. α -> [β];
      smhi = ∀ α β. α -> [β];
      sms = ∀ α β. α -> [β];
      smtp = ∀ α β. α -> [β];
      snapcast = ∀ α β. (α.snapcast = β) => α -> [β];
      snips = ∀ α β. (α.aiohttp-cors = β, α.paho-mqtt = β) => α -> [β];
      snmp = ∀ α β. (α.pysnmp = β) => α -> [β];
      sochain = ∀ α β. α -> [β];
      socialblade = ∀ α β. α -> [β];
      solaredge = ∀ α β. (α.stringcase = β) => α -> [β];
      solaredge_local = ∀ α β. α -> [β];
      solarlog = ∀ α β. α -> [β];
      solax = ∀ α β. α -> [β];
      soma = ∀ α β. α -> [β];
      somfy = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      somfy_mylink = ∀ α β. α -> [β];
      sonarr = ∀ α β. α -> [β];
      songpal = ∀ α β. α -> [β];
      sonos = ∀ α β. (α.pysonos = β) => α -> [β];
      sony_projector = ∀ α β. α -> [β];
      soundtouch =
        ∀ α β.
        (α.aiohttp-cors = β, α.libsoundtouch = β, α.zeroconf = β) => α -> [β];
      spaceapi = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      spc = ∀ α β. α -> [β];
      speedtestdotnet = ∀ α β. (α.speedtest-cli = β) => α -> [β];
      spider = ∀ α β. α -> [β];
      splunk = ∀ α β. α -> [β];
      spotcrime = ∀ α β. α -> [β];
      spotify = ∀ α β. (α.aiohttp-cors = β, α.spotipy = β) => α -> [β];
      sql = ∀ α β. (α.sqlalchemy = β) => α -> [β];
      squeezebox = ∀ α β. (α.pysqueezebox = β) => α -> [β];
      ssdp =
        ∀ α β.
        ( α.aiohttp-cors = β,
          α.defusedxml = β,
          α.netdisco = β,
          α.zeroconf = β
        ) =>
        α -> [β];
      starline = ∀ α β. α -> [β];
      starlingbank = ∀ α β. α -> [β];
      startca = ∀ α β. (α.xmltodict = β) => α -> [β];
      statistics = ∀ α β. (α.sqlalchemy = β) => α -> [β];
      statsd = ∀ α β. (α.statsd = β) => α -> [β];
      steam_online = ∀ α β. α -> [β];
      stiebel_eltron = ∀ α β. α -> [β];
      stookalert = ∀ α β. α -> [β];
      stream = ∀ α β. (α.aiohttp-cors = β, α.av = β) => α -> [β];
      streamlabswater = ∀ α β. α -> [β];
      stt = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      suez_water = ∀ α β. α -> [β];
      sun = ∀ α β. α -> [β];
      supervisord = ∀ α β. α -> [β];
      supla = ∀ α β. α -> [β];
      surepetcare = ∀ α β. α -> [β];
      swiss_hydrological_data = ∀ α β. α -> [β];
      swiss_public_transport = ∀ α β. α -> [β];
      swisscom = ∀ α β. α -> [β];
      switch = ∀ α β. α -> [β];
      switchbot = ∀ α β. α -> [β];
      switcher_kis = ∀ α β. α -> [β];
      switchmate = ∀ α β. α -> [β];
      syncthru = ∀ α β. α -> [β];
      synology = ∀ α β. α -> [β];
      synology_chat = ∀ α β. α -> [β];
      synology_dsm = ∀ α β. α -> [β];
      synology_srm = ∀ α β. α -> [β];
      syslog = ∀ α β. α -> [β];
      system_health = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      system_log = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      systemmonitor = ∀ α β. (α.psutil = β) => α -> [β];
      tado = ∀ α β. α -> [β];
      tahoma = ∀ α β. α -> [β];
      tank_utility = ∀ α β. α -> [β];
      tankerkoenig = ∀ α β. α -> [β];
      tapsaff = ∀ α β. α -> [β];
      tautulli = ∀ α β. α -> [β];
      tcp = ∀ α β. α -> [β];
      ted5000 = ∀ α β. (α.xmltodict = β) => α -> [β];
      teksavvy = ∀ α β. α -> [β];
      telegram =
        ∀ α β.
        (α.aiohttp-cors = β, α.pysocks = β, α.python-telegram-bot = β) => α ->
        [β];
      telegram_bot =
        ∀ α β.
        (α.aiohttp-cors = β, α.pysocks = β, α.python-telegram-bot = β) => α ->
        [β];
      tellduslive = ∀ α β. α -> [β];
      tellstick = ∀ α β. α -> [β];
      telnet = ∀ α β. α -> [β];
      temper = ∀ α β. α -> [β];
      template = ∀ α β. α -> [β];
      tensorflow =
        ∀ α β. (α.numpy = β, α.pillow = β, α.protobuf = β) => α -> [β];
      tesla = ∀ α β. α -> [β];
      tfiac = ∀ α β. α -> [β];
      thermoworks_smoke = ∀ α β. (α.stringcase = β) => α -> [β];
      thethingsnetwork = ∀ α β. α -> [β];
      thingspeak = ∀ α β. α -> [β];
      thinkingcleaner = ∀ α β. α -> [β];
      thomson = ∀ α β. α -> [β];
      threshold = ∀ α β. α -> [β];
      tibber = ∀ α β. α -> [β];
      tikteck = ∀ α β. α -> [β];
      tile = ∀ α β. α -> [β];
      time_date = ∀ α β. α -> [β];
      timer = ∀ α β. α -> [β];
      tmb = ∀ α β. α -> [β];
      tod = ∀ α β. α -> [β];
      todoist = ∀ α β. (α.todoist = β) => α -> [β];
      tof = ∀ α β. α -> [β];
      tomato = ∀ α β. α -> [β];
      toon = ∀ α β. (α.aiohttp-cors = β, α.hass-nabucasa = β) => α -> [β];
      torque = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      totalconnect = ∀ α β. α -> [β];
      touchline = ∀ α β. α -> [β];
      tplink = ∀ α β. (α.pyhs100 = β) => α -> [β];
      tplink_lte = ∀ α β. α -> [β];
      traccar = ∀ α β. (α.aiohttp-cors = β, α.stringcase = β) => α -> [β];
      trackr = ∀ α β. α -> [β];
      tradfri = ∀ α β. α -> [β];
      trafikverket_train = ∀ α β. α -> [β];
      trafikverket_weatherstation = ∀ α β. α -> [β];
      transmission = ∀ α β. (α.transmissionrpc = β) => α -> [β];
      transport_nsw = ∀ α β. α -> [β];
      travisci = ∀ α β. α -> [β];
      trend = ∀ α β. (α.numpy = β) => α -> [β];
      tts = ∀ α β. (α.aiohttp-cors = β, α.mutagen = β) => α -> [β];
      tuya = ∀ α β. α -> [β];
      twentemilieu = ∀ α β. α -> [β];
      twilio = ∀ α β. (α.aiohttp-cors = β, α.twilio = β) => α -> [β];
      twilio_call = ∀ α β. (α.aiohttp-cors = β, α.twilio = β) => α -> [β];
      twilio_sms = ∀ α β. (α.aiohttp-cors = β, α.twilio = β) => α -> [β];
      twitch = ∀ α β. α -> [β];
      twitter = ∀ α β. α -> [β];
      ubee = ∀ α β. α -> [β];
      ubus = ∀ α β. α -> [β];
      ue_smart_radio = ∀ α β. α -> [β];
      uk_transport = ∀ α β. α -> [β];
      unifi = ∀ α β. (α.aiounifi = β) => α -> [β];
      unifi_direct = ∀ α β. (α.pexpect = β) => α -> [β];
      unifiled = ∀ α β. α -> [β];
      universal = ∀ α β. α -> [β];
      upb = ∀ α β. α -> [β];
      upc_connect = ∀ α β. α -> [β];
      upcloud = ∀ α β. α -> [β];
      updater = ∀ α β. (α.distro = β) => α -> [β];
      upnp = ∀ α β. (α.async-upnp-client = β) => α -> [β];
      uptime = ∀ α β. α -> [β];
      uptimerobot = ∀ α β. α -> [β];
      uscis = ∀ α β. α -> [β];
      usgs_earthquakes_feed = ∀ α β. α -> [β];
      utility_meter = ∀ α β. α -> [β];
      uvc = ∀ α β. (α.uvcclient = β) => α -> [β];
      vacuum = ∀ α β. α -> [β];
      vallox = ∀ α β. α -> [β];
      vasttrafik = ∀ α β. α -> [β];
      velbus = ∀ α β. α -> [β];
      velux = ∀ α β. α -> [β];
      venstar = ∀ α β. α -> [β];
      vera = ∀ α β. α -> [β];
      verisure = ∀ α β. (α.jsonpath = β) => α -> [β];
      versasense = ∀ α β. α -> [β];
      version = ∀ α β. (α.pyhaversion = β) => α -> [β];
      vesync = ∀ α β. α -> [β];
      viaggiatreno = ∀ α β. α -> [β];
      vicare = ∀ α β. α -> [β];
      vilfo = ∀ α β. α -> [β];
      vivotek = ∀ α β. α -> [β];
      vizio = ∀ α β. α -> [β];
      vlc = ∀ α β. (α.python-vlc = β) => α -> [β];
      vlc_telnet = ∀ α β. α -> [β];
      voicerss = ∀ α β. α -> [β];
      volkszaehler = ∀ α β. α -> [β];
      volumio = ∀ α β. α -> [β];
      volvooncall = ∀ α β. α -> [β];
      vultr = ∀ α β. (α.vultr = β) => α -> [β];
      w800rf32 = ∀ α β. α -> [β];
      wake_on_lan = ∀ α β. (α.wakeonlan = β) => α -> [β];
      waqi = ∀ α β. α -> [β];
      water_heater = ∀ α β. α -> [β];
      waterfurnace = ∀ α β. α -> [β];
      watson_iot = ∀ α β. α -> [β];
      watson_tts = ∀ α β. α -> [β];
      waze_travel_time = ∀ α β. (α.WazeRouteCalculator = β) => α -> [β];
      weather = ∀ α β. α -> [β];
      webhook = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      webostv = ∀ α β. α -> [β];
      websocket_api = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      wemo = ∀ α β. α -> [β];
      whois = ∀ α β. α -> [β];
      wiffi = ∀ α β. α -> [β];
      wink = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      wirelesstag = ∀ α β. α -> [β];
      withings = ∀ α β. (α.aiohttp-cors = β) => α -> [β];
      wled = ∀ α β. α -> [β];
      wolflink = ∀ α β. α -> [β];
      workday = ∀ α β. (α.holidays = β) => α -> [β];
      worldclock = ∀ α β. α -> [β];
      worldtidesinfo = ∀ α β. α -> [β];
      worxlandroid = ∀ α β. α -> [β];
      wsdot = ∀ α β. α -> [β];
      wunderground = ∀ α β. α -> [β];
      x10 = ∀ α β. α -> [β];
      xbee = ∀ α β. α -> [β];
      xbox_live = ∀ α β. α -> [β];
      xeoma = ∀ α β. α -> [β];
      xfinity = ∀ α β. α -> [β];
      xiaomi = ∀ α β. (α.ha-ffmpeg = β) => α -> [β];
      xiaomi_aqara =
        ∀ α β. (α.aiohttp-cors = β, α.netdisco = β, α.zeroconf = β) => α -> [β];
      xiaomi_miio = ∀ α β. (α.construct = β, α.python-miio = β) => α -> [β];
      xiaomi_tv = ∀ α β. α -> [β];
      xmpp = ∀ α β. (α.slixmpp = β) => α -> [β];
      xs1 = ∀ α β. α -> [β];
      yale_smart_alarm = ∀ α β. α -> [β];
      yamaha = ∀ α β. (α.rxv = β) => α -> [β];
      yamaha_musiccast = ∀ α β. α -> [β];
      yandex_transport = ∀ α β. α -> [β];
      yandextts = ∀ α β. α -> [β];
      yeelight =
        ∀ α β.
        ( α.aiohttp-cors = β,
          α.netdisco = β,
          α.yeelight = β,
          α.zeroconf = β
        ) =>
        α -> [β];
      yeelightsunflower = ∀ α β. α -> [β];
      yessssms = ∀ α β. α -> [β];
      yi = ∀ α β. (α.aioftp = β, α.ha-ffmpeg = β) => α -> [β];
      yr = ∀ α β. (α.xmltodict = β) => α -> [β];
      zabbix = ∀ α β. α -> [β];
      zamg = ∀ α β. α -> [β];
      zengge = ∀ α β. α -> [β];
      zeroconf = ∀ α β. (α.aiohttp-cors = β, α.zeroconf = β) => α -> [β];
      zerproc = ∀ α β. α -> [β];
      zestimate = ∀ α β. (α.xmltodict = β) => α -> [β];
      zha =
        ∀ α β.
        ( α.bellows = β,
          α.pyserial = β,
          α.zha-quirks = β,
          α.zigpy = β,
          α.zigpy-cc = β,
          α.zigpy-deconz = β,
          α.zigpy-xbee = β,
          α.zigpy-zigate = β
        ) =>
        α -> [β];
      zhong_hong = ∀ α β. α -> [β];
      ziggo_mediabox_xl = ∀ α β. α -> [β];
      zone = ∀ α β. α -> [β];
      zoneminder = ∀ α β. (α.zm-py = β) => α -> [β];
      zwave =
        ∀ α β. (α.homeassistant-pyozw = β, α.pydispatcher = β) => α -> [β];
    };
  version = String;
}