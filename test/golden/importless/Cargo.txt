∀ α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ σ τ.
( α.isDarwin = β,
  α.lib = γ,
  δ.buildRustPackage =
    { RUSTC_BOOTSTRAP = Number;
      buildAndTestSubdir = String;
      buildInputs = [ε];
      cargoVendorDir = String;
      checkPhase = String;
      doCheck = Bool;
      dontUpdateAutotoolsGnuConfigScripts = Bool;
      meta =
        { description = String;
          homepage = String;
          license = [ζ];
          maintainers = [η];
          platforms = θ;
        };
      name = String;
      nativeBuildInputs = [ι];
      passthru = {rustc = κ;};
      postInstall = String;
      src = λ;
      version = μ;
    } ->
    ν,
  κ.src = λ,
  κ.version = μ,
  γ.optionals = β -> [ξ] -> [ε],
  ο.licenses = π,
  ο.maintainers = ρ,
  ο.platforms = σ,
  ο.retrry = η,
  π.mit = ζ,
  τ.asl20 = ζ,
  σ.unix = θ
) =>
{ CoreFoundation = ξ;
  Security = ξ;
  cacert = ε;
  cmake = ι;
  curl = ε;
  file = ε;
  installShellFiles = ι;
  libiconv = ξ;
  makeWrapper = ι;
  openssl = ε;
  pkgconfig = ι;
  python3 = ε;
  rustPlatform = δ;
  rustc = κ;
  stdenv = α;
  zlib = ε;
} ->
ν