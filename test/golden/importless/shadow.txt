∀ β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ σ τ υ φ χ ψ ω α1 β2 γ3 δ4 ε5.
( ( { newgidmap = {source = String;};
      newgrp = {source = String;};
      newuidmap = {source = String;};
      sg = {source = String;};
      su = {source = String;};
    }
  ) //
  ( β
  ) ~
  ( γ
  ),
  δ.defaultUserShell = ε,
  δ.mutableUsers = ζ,
  η.literalExample = String -> θ,
  η.mkOption = {description = String; example = θ; type = ι;} -> κ,
  η.optional = ζ -> λ -> [μ],
  η.optionalAttrs =
    ν -> {chsh = {source = String;}; passwd = {source = String;};} -> β,
  η.types = ξ,
  ο.shadow = λ,
  ο.writeText = String -> String -> π,
  ρ.users = δ,
  σ.users = δ,
  τ.users = δ,
  υ.users = δ,
  ξ.check = ε -> φ,
  χ.shellPackage = ξ,
  ψ.either = ω -> α1 -> ι,
  β2.path = ω,
  γ3.shellPackage = α1
) =>
{config = δ; lib = η; pkgs = ο; utils = δ4;} ->
{ config =
    { environment =
        { etc = {default/useradd = {source = π;}; login.defs = {source = ε5;};};
          systemPackages = [μ];
        };
      security =
        { pam =
            { services =
                { chfn = {rootOK = Bool;};
                  chpasswd = {rootOK = Bool;};
                  chsh = {rootOK = Bool;};
                  groupadd = {rootOK = Bool;};
                  groupdel = {rootOK = Bool;};
                  groupmems = {rootOK = Bool;};
                  groupmod = {rootOK = Bool;};
                  login =
                    { allowNullPassword = Bool;
                      showMotd = Bool;
                      startSession = Bool;
                      updateWtmp = Bool;
                    };
                  passwd = {};
                  su =
                    {forwardXAuth = Bool; logFailures = Bool; rootOK = Bool;};
                  useradd = {rootOK = Bool;};
                  userdel = {rootOK = Bool;};
                  usermod = {rootOK = Bool;};
                };
            };
          wrappers = ∀ α. α;
        };
    };
  options = {users = {defaultUserShell = κ;};};
}