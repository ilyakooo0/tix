[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 12, sourceColumn = Pos 48}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 12, sourceColumn = Pos 53}},UndefinedVariable "fdl12"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 12, sourceColumn = Pos 41}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 12, sourceColumn = Pos 47}},UndefinedVariable "lgpl21"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 12, sourceColumn = Pos 36}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 12, sourceColumn = Pos 40}},UndefinedVariable "gpl2"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 12, sourceColumn = Pos 15}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 12, sourceColumn = Pos 55}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 19}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 12, sourceColumn = Pos 20}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 12, sourceColumn = Pos 32}},KeyNotPresent "licenses"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 12, sourceColumn = Pos 20}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 12, sourceColumn = Pos 32}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 1})]
[]
âˆ€ Î³ Î´ Îµ Î¶ Î· Î¸. { akonadi = Î³; extra-cmake-modules = Î´; karchive = Î³; kcompletion = Î³; kdepimTeam = Îµ; kdoctools = Î´; kiconthemes = Î³; kidentitymanagement = Î³; kio = Î³; kmailtransport = Î³; knewstuff = Î³; kwindowsystem = Î³; kxmlgui = Î³; lib = Î¶; libkdepim = Î³; mkDerivation = { buildInputs = [Î³]; meta = { license = âˆ€ Î±. [Î±]; maintainers = Îµ }; name = String; nativeBuildInputs = [Î´]; outputs = [String]; propagatedBuildInputs = [Î·] } -> Î¸; pimcommon = Î³; qtwebengine = Î³; syntax-highlighting = Î· } -> { buildInputs = [Î³]; meta = { license = âˆ€ Î². [Î²]; maintainers = Îµ }; name = String; nativeBuildInputs = [Î´]; outputs = [String]; propagatedBuildInputs = [Î·] }