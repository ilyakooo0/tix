∀ γ δ ε. { config = γ; lib = δ; pkgs = ε } -> { config = { assertions = [{ assertion = Bool; message = String }]; systemd = { services = { vault = { after = [String]; description = String; restartIfChanged = Bool; serviceConfig = { AmbientCapabilities = String; ExecReload = String; ExecStart = String; Group = String; KillSignal = String; NoNewPrivileges = Bool; PrivateDevices = Bool; PrivateTmp = Bool; ProtectHome = String; ProtectSystem = String; Restart = String; StartLimitBurst = Integer; StartLimitInterval = String; TimeoutStopSec = String; User = String }; unitConfig = { RequiresMountsFor = ∀ α. α }; wantedBy = [String] } }; tmpfiles = { rules = String } }; users = { groups = { vault = { gid = ∀ β. β } }; users = { vault = { description = String; group = String; name = String; uid = ∀ β. β } } } }; options = { services = { vault = { address = { default = String; description = String; type = ∀ β. β }; enable = String; extraConfig = { default = String; description = String; type = ∀ β. β }; listenerExtraConfig = { default = String; description = String; type = ∀ β. β }; package = { default = ∀ β. β; defaultText = String; description = String; type = ∀ β. β }; storageBackend = { default = String; description = String; type = [String] }; storageConfig = { default = Null; description = String; type = ∀ β. β }; storagePath = { default = String; description = String; type = ∀ β. β }; telemetryConfig = { default = String; description = String; type = ∀ β. β }; tlsCertFile = { default = Null; description = String; example = String; type = ∀ β. β }; tlsKeyFile = { default = Null; description = String; example = String; type = ∀ β. β } } } } }