[(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 79, sourceColumn = Pos 15}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 79, sourceColumn = Pos 31}},KeyNotPresent "openssl"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 79, sourceColumn = Pos 15}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 79, sourceColumn = Pos 31}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 16}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 79, sourceColumn = Pos 15}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 79, sourceColumn = Pos 23}},UndefinedVariable "licenses"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 78, sourceColumn = Pos 21}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 78, sourceColumn = Pos 52}},KeyNotPresent "lib"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 78, sourceColumn = Pos 21}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 78, sourceColumn = Pos 52}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 8}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 28}},KeyNotPresent "lib"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 8}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 35, sourceColumn = Pos 28}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 21, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 21, sourceColumn = Pos 36}},KeyNotPresent "lib"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 21, sourceColumn = Pos 17}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 21, sourceColumn = Pos 36}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 6, sourceColumn = Pos 1}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 6, sourceColumn = Pos 20}},KeyNotPresent "mkDerivation"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 6, sourceColumn = Pos 1}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 6, sourceColumn = Pos 20}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 5, sourceColumn = Pos 1}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 83, sourceColumn = Pos 1}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 5}),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 5, sourceColumn = Pos 6}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 5, sourceColumn = Pos 16}},KeyNotPresent "lib"),(SrcSpan {spanBegin = SourcePos {sourceName = "<string>", sourceLine = Pos 5, sourceColumn = Pos 6}, spanEnd = SourcePos {sourceName = "<string>", sourceLine = Pos 5, sourceColumn = Pos 16}},UnexpectedType {expected = NAttrSet (fromList []), got = NTypeVariable 0})]
[CanNotUnify (NAtomic Bool) (List (NAtomic String) :-> NTypeVariable 13),CanNotUnify (NAtomic Bool) (NTypeVariable 4 :-> NTypeVariable 10)]
âˆ€ Î² Î³ Î´ Îµ. { cryptodev = Î²; fetchFromGitHub = { owner = String; repo = String; rev = String; sha256 = String } -> Î³; perl = Î´; stdenv = Îµ; withCryptodev = Bool; zlib = Î´ } -> { buildInputs = Î²; configureFlags = [String]; configureScript = String; enableParallelBuilding = Bool; makeFlags = [String]; meta = { description = String; homepage = String; license = âˆ€ Î±. Î±; maintainers = âˆ€ Î±. [Î±]; platforms = [String]; priority = Integer }; nativeBuildInputs = [Î´]; outputs = [String]; pname = String; postFixup = String; postInstall = String; setOutputFlags = Bool; src = { owner = String; repo = String; rev = String; sha256 = String }; version = String }