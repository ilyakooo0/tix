∀ γ δ ε. { config = γ; lib = δ; pkgs = ε } -> { config = { environment = { etc = { icingaweb2/authentication.ini = { text = ∀ α. α }; icingaweb2/config.ini = { text = { global = { module_path = String } } }; icingaweb2/groups.ini = { text = ∀ α. α }; icingaweb2/resources.ini = { text = ∀ α. α }; icingaweb2/roles.ini = { text = ∀ α. α } } }; services = { nginx = { enable = Bool; virtualHosts = {  } }; phpfpm = { pools = {  } } }; systemd = { services = { phpfpm- = { serviceConfig = { ReadWritePaths = [String] } } } }; users = { groups = { icingaweb2 = {  } }; users = { icingaweb2 = { description = String; group = String; isSystemUser = Bool } } } }; meta = { maintainers = ∀ β. [β] }; options = { services = { icingaweb2 = { authentications = { default = Null; description = String; example = { icingaweb = { backend = String; resource = String } }; type = ∀ α. α }; enable = String; generalConfig = { default = Null; description = String; example = { general = { config_resource = String; showStacktraces = Integer }; logging = { level = String; log = String } }; type = ∀ α. α }; groupBackends = { default = Null; description = String; example = { icingaweb = { backend = String; resource = String } }; type = ∀ α. α }; modulePackages = { default = {  }; description = String; example = String; type = ∀ α. α }; modules = { doc = { enable = String }; migrate = { enable = String }; setup = { enable = String }; test = { enable = String }; translation = { enable = String } }; pool = { default = String; description = String; type = ∀ α. α }; resources = { default = Null; description = String; example = { icingaweb_db = { db = String; dbname = String; host = String; password = String; type = String; username = String } }; type = ∀ α. α }; roles = { default = Null; description = String; example = { Administrators = { permissions = String; users = String } }; type = ∀ α. α }; timezone = { default = String; description = String; example = String; type = ∀ α. α }; virtualHost = { default = String; description = String; type = ∀ α. α } } } } }