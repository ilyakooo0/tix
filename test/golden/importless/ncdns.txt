∀ ε ζ η. { config = ε; lib = ζ; pkgs = η } -> { config = { services = { ncdns = { settings = { ncdns = { bind = String; hostmaster = ∀ β. β; namecoinrpcaddress = String; namecoinrpcpassword = ∀ β. β; namecoinrpcusername = ∀ β. β; privatekey = String; publickey = String; selfip = ∀ β. β; selfname = ∀ β. β; zoneprivatekey = String; zonepublickey = String }; service = { daemon = Bool }; xlog = { journal = Bool } } }; pdns-recursor = { forwardZonesRecurse = { bit = String }; luaConfig = String } }; systemd = { services = { ncdns = { after = [String]; description = String; preStart = String; serviceConfig = { ExecStart = String; Restart = String; StateDirectory = String; User = String }; wantedBy = [String] }; pdns-recursor = { after = [String]; wants = [String] } } }; users = { users = { ncdns = { description = String } } } }; meta = { maintainers = ∀ δ. [δ] }; options = { services = { ncdns = { address = { default = String; description = String; type = ∀ γ. γ }; dnssec = { enable = String; keys = { private = { default = String; description = String; type = ∀ α. α }; public = { default = String; description = String; type = ∀ α. α }; zonePrivate = { default = String; description = String; type = ∀ α. α }; zonePublic = { default = String; description = String; type = ∀ α. α } } }; enable = String; identity = { address = { default = String; description = String; type = ∀ β. β }; hostmaster = { default = String; description = String; example = String; type = ∀ β. β }; hostname = { default = ∀ β. β; description = String; example = String; type = ∀ β. β } }; port = { default = Integer; description = String; type = ∀ γ. γ }; settings = { default = {  }; description = String; example = String; type = { description = String } } }; pdns-recursor = { resolveNamecoin = { default = Bool; description = String; type = ∀ γ. γ } } } } }